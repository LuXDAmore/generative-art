(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{226:function(e,n,t){"use strict";t.r(n);t(25),t(8),t(27);var r=t(16),o=t(4),c=t(7);function v(object,e){var n=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),n.push.apply(n,t)}return n}var l={animate:!0,context:"webgl",attributes:{antialias:!0}},d={name:"page-7",data:()=>({sketchManager:null}),mounted(){var e=this;this.$nextTick(Object(o.a)((function*(){try{e.sketchManager=yield e.$sketch(function(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?v(Object(source),!0).forEach((function(n){Object(r.a)(e,n,source[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):v(Object(source)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(source,n))}))}return e}({},l,{canvas:e.$refs.canvas}),e.sketch)}catch(e){console.error(e)}})))},beforeDestroy(){this.sketchManager&&this.sketchManager.unload()},methods:{sketch(e){var n=this;return Object(o.a)((function*(){var{context:r,canvas:canvas,width:o,height:v,update:l}=e;l({dimensions:[o,v]});var{OrbitControls:d}=yield t.e(0).then(t.bind(null,223)).then(e=>e.default||e),m=t(193),f=!1,h=new c.D({context:r}),w=new c.s,x=new c.A,y=new c.o(63,o/v,.001,1e3),O=new d(y,canvas),U=new c.p(o/v,1,54,54),_=[20,140],j=[400,2600],k=[5200,14e3],D=new c.b,audio=new c.q(D),P=new c.a(audio,2048),M=(data,e)=>{for(var n=Math.round(e[0]/24e3*data.length),t=Math.round(e[1]/24e3*data.length),r=0,o=0,i=n;i<=t;i++)r+=data[i],o+=1;return r/o/255},C=e=>{audio.gain.gain.value=.001,audio.setMediaStreamSource(e),audio.context.resume()},video=document.createElement("video"),S=e=>{video.srcObject=e,video.width=o,video.height=v,video.autoplay=!0,video.play(),L.uniforms.video.value.needsUpdate=!0},E=()=>{canvas.removeEventListener("click",E,!1),n.$refs.title.remove(),navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(C),navigator.mediaDevices.getUserMedia({video:{width:o,height:v,facingMode:"user"},audio:!1}).then(S)},L=new c.u({vertexShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : vert\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main () {\n\n    vUv = uv;\n\n    vPosition = position;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n",fragmentShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : frag\n\nuniform sampler2D microphone;\nuniform sampler2D video;\n\nuniform float bass;\nuniform float mid;\nuniform float treble;\n\nuniform float time;\n\nuniform vec3 mouse;\nuniform float mouse_radius;\n\nvarying vec3 vPosition;\n\nvarying vec2 vUv;\n\nfloat map(\n    float value,\n    float min1,\n    float max1,\n    float min2,\n    float max2\n) {\n\n    return min2 + ( value - min1 ) * ( max2 - min2 ) / ( max1 - min1 );\n\n}\n\nvoid main() {\n\n    vec3 webcam = texture2D(\n        video,\n        vUv\n    ).rgb;\n\n    vec2 displacedUv = vec2(\n        vUv.x,\n        vUv.y\n    );\n\n    displacedUv.y = mix(\n        vUv.y,\n        bass,\n        1.0\n    );\n    displacedUv.x = mix(\n        vUv.x,\n        mid,\n        treble\n    );\n\n    float dist = length( vPosition - mouse );\n    float prox = 1. - map(\n        dist,\n        0.,\n        mouse_radius,\n        0.,\n        1.\n    );\n\n    prox = clamp(\n        prox,\n        0.,\n        1.\n    );\n\n    // Microphone\n    vec3 backgroundColor = vec3( displacedUv.y, displacedUv.x, prox );\n\n    float f = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).r;\n    float g = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).g;\n    float b = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).b;\n\n    vec3 color = vec3( f, g, b );\n\n    float i = sin( step( vUv.y, f ) * step( f - 0.0125, vUv.y ) );\n\n    // Webcam\n    webcam.r = webcam.r + ( 1. - bass );\n    webcam.g = webcam.g + ( 1. - treble );\n    webcam.b = webcam.b + ( 1. - mid );\n\n    // Color mixer\n    vec4 mixed = vec4( mix( webcam, mix( backgroundColor, color, i ), bass ), 1.0 );\n\n    gl_FragColor = mixed;\n\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:c.h,uniforms:{time:{type:"f",value:0},mouse_radius:{type:"f",value:.3},bass:{type:"f",value:0},mid:{type:"f",value:0},treble:{type:"f",value:0},video:{type:"t",value:new c.C(video)},microphone:{type:"t",value:new c.f(P.data,1024,1,c.k)},mouse:{type:"v3",value:x},resolution:{type:"v2",value:new c.z(o,v)},uvRate1:{value:new c.z(1,1)}}}),z=new c.m(U,L),F=new c.t,$={mouse_radius:.3},G=new m.GUI;return canvas.addEventListener("click",E,!1),canvas.addEventListener("mousemove",e=>{var n;x.x=e.clientX/window.innerWidth*2-1,x.y=-e.clientY/window.innerHeight*2+1,w.setFromCamera(x,y);var[t]=w.intersectObjects(F.children),r=null!==(n=null==t?void 0:t.point)&&void 0!==n?n:null;f=!!r},!1),y.position.set(0,0,1),F.add(z),G.add($,"mouse_radius",0,1,.1),G.close(),{resize(e){var{pixelRatio:n,viewportWidth:t,viewportHeight:r}=e;l({dimensions:[t,r]}),h.setPixelRatio(n),h.setSize(t,r),L.uniforms.resolution.value.x=t,L.uniforms.resolution.value.y=r,y.aspect=t/r,y.updateProjectionMatrix()},render(e){var{time:time}=e,data=P.getFrequencyData(),n=M(data,_),t=M(data,j),r=M(data,k);L.uniforms.bass.value=n,L.uniforms.mid.value=t,L.uniforms.treble.value=r,L.uniforms.microphone.value.needsUpdate=!0,L.uniforms.time.value=time,L.uniforms.mouse_radius.value=$.mouse_radius,f&&(L.uniforms.mouse.value=x),O.update(),h.render(F,y)},unload(){audio.context.suspend(),G.destroy(),h.dispose()}}}))()}}},m=t(15),component=Object(m.a)(d,(function(){var e=this.$createElement,n=this._self._c||e;return n("main",{staticClass:"container canvas-container"},[n("h6",{ref:"title",staticClass:"absolute z-index--1 text--center text--red no-pointer-event"},[this._v(" Click on the canvas"),n("br"),n("small",[this._v("(allow access to camera and microphone)")])]),n("canvas",{ref:"canvas"})])}),[],!1,null,null,null);n.default=component.exports}}]);