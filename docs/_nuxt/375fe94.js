(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{742:function(t,e,r){"use strict";r.r(e),r.d(e,"PointLight",(function(){return It}));const h=[];for(let i=0;i<256;i++)h[i]=(i<16?"0":"")+i.toString(16);const n=Math.PI/180,o=180/Math.PI;function l(t,e,r){return Math.max(e,Math.min(r,t))}function c(t,e){return(t%e+e)%e}function m(t,e,r){return(1-r)*t+r*e}class x{constructor(t=0,e=0,r=0,h=1){this._x=t,this._y=e,this._z=r,this._w=h}static slerp(t,e,r,h){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(t,e,h)}static slerpFlat(t,e,r,h,n,o,l){let c=r[h+0],m=r[h+1],x=r[h+2],y=r[h+3];const d=n[o+0],M=n[o+1],w=n[o+2],z=n[o+3];if(0===l)return t[e+0]=c,t[e+1]=m,t[e+2]=x,void(t[e+3]=y);if(1===l)return t[e+0]=d,t[e+1]=M,t[e+2]=w,void(t[e+3]=z);if(y!==z||c!==d||m!==M||x!==w){let s=1-l;const t=c*d+m*M+x*w+y*z,e=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const h=Math.sqrt(r),n=Math.atan2(h,t*e);s=Math.sin(s*n)/h,l=Math.sin(l*n)/h}const h=l*e;if(c=c*s+d*h,m=m*s+M*h,x=x*s+w*h,y=y*s+z*h,s===1-l){const t=1/Math.sqrt(c*c+m*m+x*x+y*y);c*=t,m*=t,x*=t,y*=t}}t[e]=c,t[e+1]=m,t[e+2]=x,t[e+3]=y}static multiplyQuaternionsFlat(t,e,r,h,n,o){const l=r[h],c=r[h+1],m=r[h+2],x=r[h+3],y=n[o],d=n[o+1],M=n[o+2],w=n[o+3];return t[e]=l*w+x*y+c*M-m*d,t[e+1]=c*w+x*d+m*y-l*M,t[e+2]=m*w+x*M+l*d-c*y,t[e+3]=x*w-l*y-c*d-m*M,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,r,h){return this._x=t,this._y=e,this._z=r,this._w=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const r=t._x,h=t._y,n=t._z,o=t._order,l=Math.cos,c=Math.sin,m=l(r/2),x=l(h/2),y=l(n/2),d=c(r/2),M=c(h/2),w=c(n/2);switch(o){case"XYZ":this._x=d*x*y+m*M*w,this._y=m*M*y-d*x*w,this._z=m*x*w+d*M*y,this._w=m*x*y-d*M*w;break;case"YXZ":this._x=d*x*y+m*M*w,this._y=m*M*y-d*x*w,this._z=m*x*w-d*M*y,this._w=m*x*y+d*M*w;break;case"ZXY":this._x=d*x*y-m*M*w,this._y=m*M*y+d*x*w,this._z=m*x*w+d*M*y,this._w=m*x*y-d*M*w;break;case"ZYX":this._x=d*x*y-m*M*w,this._y=m*M*y+d*x*w,this._z=m*x*w-d*M*y,this._w=m*x*y+d*M*w;break;case"YZX":this._x=d*x*y+m*M*w,this._y=m*M*y+d*x*w,this._z=m*x*w-d*M*y,this._w=m*x*y-d*M*w;break;case"XZY":this._x=d*x*y-m*M*w,this._y=m*M*y-d*x*w,this._z=m*x*w+d*M*y,this._w=m*x*y+d*M*w;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const r=e/2,s=Math.sin(r);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,r=e[0],h=e[4],n=e[8],o=e[1],l=e[5],c=e[9],m=e[2],x=e[6],y=e[10],d=r+l+y;if(d>0){const s=.5/Math.sqrt(d+1);this._w=.25/s,this._x=(x-c)*s,this._y=(n-m)*s,this._z=(o-h)*s}else if(r>l&&r>y){const s=2*Math.sqrt(1+r-l-y);this._w=(x-c)/s,this._x=.25*s,this._y=(h+o)/s,this._z=(n+m)/s}else if(l>y){const s=2*Math.sqrt(1+l-r-y);this._w=(n-m)/s,this._x=(h+o)/s,this._y=.25*s,this._z=(c+x)/s}else{const s=2*Math.sqrt(1+y-r-l);this._w=(o-h)/s,this._x=(n+m)/s,this._y=(c+x)/s,this._z=.25*s}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let r=t.dot(e)+1;return r<Number.EPSILON?(r=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=r):(this._x=0,this._y=-t.z,this._z=t.y,this._w=r)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=r),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(l(this.dot(q),-1,1)))}rotateTowards(q,t){const e=this.angleTo(q);if(0===e)return this;const r=Math.min(1,t/e);return this.slerp(q,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(a,b){const t=a._x,e=a._y,r=a._z,h=a._w,n=b._x,o=b._y,l=b._z,c=b._w;return this._x=t*c+h*n+e*l-r*o,this._y=e*c+h*o+r*n-t*l,this._z=r*c+h*l+t*o-e*n,this._w=h*c-t*n-e*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const r=this._x,h=this._y,n=this._z,o=this._w;let l=o*t._w+r*t._x+h*t._y+n*t._z;if(l<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,l=-l):this.copy(t),l>=1)return this._w=o,this._x=r,this._y=h,this._z=n,this;const c=1-l*l;if(c<=Number.EPSILON){const s=1-e;return this._w=s*o+e*this._w,this._x=s*r+e*this._x,this._y=s*h+e*this._y,this._z=s*n+e*this._z,this.normalize(),this._onChangeCallback(),this}const m=Math.sqrt(c),x=Math.atan2(m,l),y=Math.sin((1-e)*x)/m,d=Math.sin(e*x)/m;return this._w=o*y+this._w*d,this._x=r*y+this._x*d,this._y=h*y+this._y*d,this._z=n*y+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,r){this.copy(t).slerp(e,r)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}x.prototype.isQuaternion=!0;class y{constructor(t=0,e=0,r=0){this.x=t,this.y=e,this.z=r}set(t,e,r){return void 0===r&&(r=this.z),this.x=t,this.y=e,this.z=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(M.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(M.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,r=this.y,h=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*h,this.y=n[1]*e+n[4]*r+n[7]*h,this.z=n[2]*e+n[5]*r+n[8]*h,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,r=this.y,h=this.z,n=t.elements,o=1/(n[3]*e+n[7]*r+n[11]*h+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*h+n[12])*o,this.y=(n[1]*e+n[5]*r+n[9]*h+n[13])*o,this.z=(n[2]*e+n[6]*r+n[10]*h+n[14])*o,this}applyQuaternion(q){const t=this.x,e=this.y,r=this.z,h=q.x,n=q.y,o=q.z,l=q.w,c=l*t+n*r-o*e,m=l*e+o*t-h*r,x=l*r+h*e-n*t,y=-h*t-n*e-o*r;return this.x=c*l+y*-h+m*-o-x*-n,this.y=m*l+y*-n+x*-h-c*-o,this.z=x*l+y*-o+c*-n-m*-h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,r=this.y,h=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*h,this.y=n[1]*e+n[5]*r+n[9]*h,this.z=n[2]*e+n[6]*r+n[10]*h,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this.z=t.z+(e.z-t.z)*r,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(a,b){const t=a.x,e=a.y,r=a.z,h=b.x,n=b.y,o=b.z;return this.x=e*o-r*n,this.y=r*h-t*o,this.z=t*n-e*h,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const r=t.dot(this)/e;return this.copy(t).multiplyScalar(r)}projectOnPlane(t){return d.copy(this).projectOnVector(t),this.sub(d)}reflect(t){return this.sub(d.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const r=this.dot(t)/e;return Math.acos(l(r,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,r=this.y-t.y,h=this.z-t.z;return e*e+r*r+h*h}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)}setFromSphericalCoords(t,e,r){const h=Math.sin(e)*t;return this.x=h*Math.sin(r),this.y=Math.cos(e)*t,this.z=h*Math.cos(r),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,r){return this.x=t*Math.sin(e),this.y=r,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),r=this.setFromMatrixColumn(t,1).length(),h=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=r,this.z=h,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}y.prototype.isVector3=!0;const d=new y,M=new x;class w{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,r,h,n,o,l,c,m,x,y,d,M,w,z,_){const f=this.elements;return f[0]=t,f[4]=e,f[8]=r,f[12]=h,f[1]=n,f[5]=o,f[9]=l,f[13]=c,f[2]=m,f[6]=x,f[10]=y,f[14]=d,f[3]=M,f[7]=w,f[11]=z,f[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new w).fromArray(this.elements)}copy(t){const e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],e[9]=r[9],e[10]=r[10],e[11]=r[11],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],this}copyPosition(t){const e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,r=t.elements,h=1/z.setFromMatrixColumn(t,0).length(),n=1/z.setFromMatrixColumn(t,1).length(),o=1/z.setFromMatrixColumn(t,2).length();return e[0]=r[0]*h,e[1]=r[1]*h,e[2]=r[2]*h,e[3]=0,e[4]=r[4]*n,e[5]=r[5]*n,e[6]=r[6]*n,e[7]=0,e[8]=r[8]*o,e[9]=r[9]*o,e[10]=r[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,r=t.x,h=t.y,n=t.z,a=Math.cos(r),b=Math.sin(r),o=Math.cos(h),l=Math.sin(h),c=Math.cos(n),m=Math.sin(n);if("XYZ"===t.order){const t=a*c,r=a*m,h=b*c,n=b*m;e[0]=o*c,e[4]=-o*m,e[8]=l,e[1]=r+h*l,e[5]=t-n*l,e[9]=-b*o,e[2]=n-t*l,e[6]=h+r*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,r=o*m,h=l*c,n=l*m;e[0]=t+n*b,e[4]=h*b-r,e[8]=a*l,e[1]=a*m,e[5]=a*c,e[9]=-b,e[2]=r*b-h,e[6]=n+t*b,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,r=o*m,h=l*c,n=l*m;e[0]=t-n*b,e[4]=-a*m,e[8]=h+r*b,e[1]=r+h*b,e[5]=a*c,e[9]=n-t*b,e[2]=-a*l,e[6]=b,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,r=a*m,h=b*c,n=b*m;e[0]=o*c,e[4]=h*l-r,e[8]=t*l+n,e[1]=o*m,e[5]=n*l+t,e[9]=r*l-h,e[2]=-l,e[6]=b*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,r=a*l,h=b*o,n=b*l;e[0]=o*c,e[4]=n-t*m,e[8]=h*m+r,e[1]=m,e[5]=a*c,e[9]=-b*c,e[2]=-l*c,e[6]=r*m+h,e[10]=t-n*m}else if("XZY"===t.order){const t=a*o,r=a*l,h=b*o,n=b*l;e[0]=o*c,e[4]=-m,e[8]=l*c,e[1]=t*m+n,e[5]=a*c,e[9]=r*m-h,e[2]=h*m-r,e[6]=b*c,e[10]=n*m+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(q){return this.compose(f,q,v)}lookAt(t,e,r){const h=this.elements;return C.subVectors(t,e),0===C.lengthSq()&&(C.z=1),C.normalize(),S.crossVectors(r,C),0===S.lengthSq()&&(1===Math.abs(r.z)?C.x+=1e-4:C.z+=1e-4,C.normalize(),S.crossVectors(r,C)),S.normalize(),k.crossVectors(C,S),h[0]=S.x,h[4]=k.x,h[8]=C.x,h[1]=S.y,h[5]=k.y,h[9]=C.y,h[2]=S.z,h[6]=k.z,h[10]=C.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,r=this.elements,h=t[0],n=t[4],o=t[8],l=t[12],c=t[1],m=t[5],x=t[9],y=t[13],d=t[2],M=t[6],w=t[10],z=t[14],_=t[3],f=t[7],v=t[11],S=t[15],k=e[0],C=e[4],E=e[8],A=e[12],F=e[1],P=e[5],O=e[9],V=e[13],T=e[2],W=e[6],j=e[10],R=e[14],B=e[3],H=e[7],L=e[11],I=e[15];return r[0]=h*k+n*F+o*T+l*B,r[4]=h*C+n*P+o*W+l*H,r[8]=h*E+n*O+o*j+l*L,r[12]=h*A+n*V+o*R+l*I,r[1]=c*k+m*F+x*T+y*B,r[5]=c*C+m*P+x*W+y*H,r[9]=c*E+m*O+x*j+y*L,r[13]=c*A+m*V+x*R+y*I,r[2]=d*k+M*F+w*T+z*B,r[6]=d*C+M*P+w*W+z*H,r[10]=d*E+M*O+w*j+z*L,r[14]=d*A+M*V+w*R+z*I,r[3]=_*k+f*F+v*T+S*B,r[7]=_*C+f*P+v*W+S*H,r[11]=_*E+f*O+v*j+S*L,r[15]=_*A+f*V+v*R+S*I,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[4]*=s,t[8]*=s,t[12]*=s,t[1]*=s,t[5]*=s,t[9]*=s,t[13]*=s,t[2]*=s,t[6]*=s,t[10]*=s,t[14]*=s,t[3]*=s,t[7]*=s,t[11]*=s,t[15]*=s,this}determinant(){const t=this.elements,e=t[0],r=t[4],h=t[8],n=t[12],o=t[1],l=t[5],c=t[9],m=t[13],x=t[2],y=t[6],d=t[10],M=t[14];return t[3]*(+n*c*y-h*m*y-n*l*d+r*m*d+h*l*M-r*c*M)+t[7]*(+e*c*M-e*m*d+n*o*d-h*o*M+h*m*x-n*c*x)+t[11]*(+e*m*y-e*l*M-n*o*y+r*o*M+n*l*x-r*m*x)+t[15]*(-h*l*x-e*c*y+e*l*d+h*o*y-r*o*d+r*c*x)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,r){const h=this.elements;return t.isVector3?(h[12]=t.x,h[13]=t.y,h[14]=t.z):(h[12]=t,h[13]=e,h[14]=r),this}invert(){const t=this.elements,e=t[0],r=t[1],h=t[2],n=t[3],o=t[4],l=t[5],c=t[6],m=t[7],x=t[8],y=t[9],d=t[10],M=t[11],w=t[12],z=t[13],_=t[14],f=t[15],v=y*_*m-z*d*m+z*c*M-l*_*M-y*c*f+l*d*f,S=w*d*m-x*_*m-w*c*M+o*_*M+x*c*f-o*d*f,k=x*z*m-w*y*m+w*l*M-o*z*M-x*l*f+o*y*f,C=w*y*c-x*z*c-w*l*d+o*z*d+x*l*_-o*y*_,E=e*v+r*S+h*k+n*C;if(0===E)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/E;return t[0]=v*A,t[1]=(z*d*n-y*_*n-z*h*M+r*_*M+y*h*f-r*d*f)*A,t[2]=(l*_*n-z*c*n+z*h*m-r*_*m-l*h*f+r*c*f)*A,t[3]=(y*c*n-l*d*n-y*h*m+r*d*m+l*h*M-r*c*M)*A,t[4]=S*A,t[5]=(x*_*n-w*d*n+w*h*M-e*_*M-x*h*f+e*d*f)*A,t[6]=(w*c*n-o*_*n-w*h*m+e*_*m+o*h*f-e*c*f)*A,t[7]=(o*d*n-x*c*n+x*h*m-e*d*m-o*h*M+e*c*M)*A,t[8]=k*A,t[9]=(w*y*n-x*z*n-w*r*M+e*z*M+x*r*f-e*y*f)*A,t[10]=(o*z*n-w*l*n+w*r*m-e*z*m-o*r*f+e*l*f)*A,t[11]=(x*l*n-o*y*n-x*r*m+e*y*m+o*r*M-e*l*M)*A,t[12]=C*A,t[13]=(x*z*h-w*y*h+w*r*d-e*z*d-x*r*_+e*y*_)*A,t[14]=(w*l*h-o*z*h-w*r*c+e*z*c+o*r*_-e*l*_)*A,t[15]=(o*y*h-x*l*h+x*r*c-e*y*c-o*r*d+e*l*d)*A,this}scale(t){const e=this.elements,r=t.x,h=t.y,n=t.z;return e[0]*=r,e[4]*=h,e[8]*=n,e[1]*=r,e[5]*=h,e[9]*=n,e[2]*=r,e[6]*=h,e[10]*=n,e[3]*=r,e[7]*=h,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],h=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,h))}makeTranslation(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const r=Math.cos(e),s=Math.sin(e),h=1-r,n=t.x,o=t.y,l=t.z,c=h*n,m=h*o;return this.set(c*n+r,c*o-s*l,c*l+s*o,0,c*o+s*l,m*o+r,m*l-s*n,0,c*l-s*o,m*l+s*n,h*l*l+r,0,0,0,0,1),this}makeScale(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this}makeShear(t,e,r,h,n,o){return this.set(1,r,n,0,t,1,o,0,e,h,1,0,0,0,0,1),this}compose(t,e,r){const h=this.elements,n=e._x,o=e._y,l=e._z,c=e._w,m=n+n,x=o+o,y=l+l,d=n*m,M=n*x,w=n*y,z=o*x,_=o*y,f=l*y,v=c*m,S=c*x,k=c*y,C=r.x,E=r.y,A=r.z;return h[0]=(1-(z+f))*C,h[1]=(M+k)*C,h[2]=(w-S)*C,h[3]=0,h[4]=(M-k)*E,h[5]=(1-(d+f))*E,h[6]=(_+v)*E,h[7]=0,h[8]=(w+S)*A,h[9]=(_-v)*A,h[10]=(1-(d+z))*A,h[11]=0,h[12]=t.x,h[13]=t.y,h[14]=t.z,h[15]=1,this}decompose(t,e,r){const h=this.elements;let n=z.set(h[0],h[1],h[2]).length();const o=z.set(h[4],h[5],h[6]).length(),l=z.set(h[8],h[9],h[10]).length();this.determinant()<0&&(n=-n),t.x=h[12],t.y=h[13],t.z=h[14],_.copy(this);const c=1/n,m=1/o,x=1/l;return _.elements[0]*=c,_.elements[1]*=c,_.elements[2]*=c,_.elements[4]*=m,_.elements[5]*=m,_.elements[6]*=m,_.elements[8]*=x,_.elements[9]*=x,_.elements[10]*=x,e.setFromRotationMatrix(_),r.x=n,r.y=o,r.z=l,this}makePerspective(t,e,r,h,n,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const l=this.elements,c=2*n/(e-t),m=2*n/(r-h),a=(e+t)/(e-t),b=(r+h)/(r-h),x=-(o+n)/(o-n),y=-2*o*n/(o-n);return l[0]=c,l[4]=0,l[8]=a,l[12]=0,l[1]=0,l[5]=m,l[9]=b,l[13]=0,l[2]=0,l[6]=0,l[10]=x,l[14]=y,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,r,h,n,o){const l=this.elements,c=1/(e-t),m=1/(r-h),p=1/(o-n),x=(e+t)*c,y=(r+h)*m,d=(o+n)*p;return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-x,l[1]=0,l[5]=2*m,l[9]=0,l[13]=-y,l[2]=0,l[6]=0,l[10]=-2*p,l[14]=-d,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,r=t.elements;for(let i=0;i<16;i++)if(e[i]!==r[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}}w.prototype.isMatrix4=!0;const z=new y,_=new w,f=new y(0,0,0),v=new y(1,1,1),S=new y,k=new y,C=new y;const E=new w,A=new x;class F{constructor(t=0,e=0,r=0,h=F.DefaultOrder){this._x=t,this._y=e,this._z=r,this._order=h}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,r,h=this._order){return this._x=t,this._y=e,this._z=r,this._order=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,r=!0){const h=t.elements,n=h[0],o=h[4],c=h[8],m=h[1],x=h[5],y=h[9],d=h[2],M=h[6],w=h[10];switch(e){case"XYZ":this._y=Math.asin(l(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-y,w),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(M,x),this._z=0);break;case"YXZ":this._x=Math.asin(-l(y,-1,1)),Math.abs(y)<.9999999?(this._y=Math.atan2(c,w),this._z=Math.atan2(m,x)):(this._y=Math.atan2(-d,n),this._z=0);break;case"ZXY":this._x=Math.asin(l(M,-1,1)),Math.abs(M)<.9999999?(this._y=Math.atan2(-d,w),this._z=Math.atan2(-o,x)):(this._y=0,this._z=Math.atan2(m,n));break;case"ZYX":this._y=Math.asin(-l(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(M,w),this._z=Math.atan2(m,n)):(this._x=0,this._z=Math.atan2(-o,x));break;case"YZX":this._z=Math.asin(l(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(-y,x),this._y=Math.atan2(-d,n)):(this._x=0,this._y=Math.atan2(c,w));break;case"XZY":this._z=Math.asin(-l(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(M,x),this._y=Math.atan2(c,n)):(this._x=Math.atan2(-y,w),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===r&&this._onChangeCallback(),this}setFromQuaternion(q,t,e){return E.makeRotationFromQuaternion(q),this.setFromRotationMatrix(E,t,e)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return A.setFromEuler(this),this.setFromQuaternion(A,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new y(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}F.prototype.isEuler=!0,F.DefaultOrder="XYZ",F.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class P{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}class O{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,r,h,n,o,l,c,m){const x=this.elements;return x[0]=t,x[1]=h,x[2]=l,x[3]=e,x[4]=n,x[5]=c,x[6]=r,x[7]=o,x[8]=m,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],this}extractBasis(t,e,r){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,r=this.elements,h=t[0],n=t[3],o=t[6],l=t[1],c=t[4],m=t[7],x=t[2],y=t[5],d=t[8],M=e[0],w=e[3],z=e[6],_=e[1],f=e[4],v=e[7],S=e[2],k=e[5],C=e[8];return r[0]=h*M+n*_+o*S,r[3]=h*w+n*f+o*k,r[6]=h*z+n*v+o*C,r[1]=l*M+c*_+m*S,r[4]=l*w+c*f+m*k,r[7]=l*z+c*v+m*C,r[2]=x*M+y*_+d*S,r[5]=x*w+y*f+d*k,r[8]=x*z+y*v+d*C,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[3]*=s,t[6]*=s,t[1]*=s,t[4]*=s,t[7]*=s,t[2]*=s,t[5]*=s,t[8]*=s,this}determinant(){const t=this.elements,a=t[0],b=t[1],e=t[2],r=t[3],h=t[4],n=t[5],g=t[6],o=t[7],i=t[8];return a*h*i-a*n*o-b*r*i+b*n*g+e*r*o-e*h*g}invert(){const t=this.elements,e=t[0],r=t[1],h=t[2],n=t[3],o=t[4],l=t[5],c=t[6],m=t[7],x=t[8],y=x*o-l*m,d=l*c-x*n,M=m*n-o*c,w=e*y+r*d+h*M;if(0===w)return this.set(0,0,0,0,0,0,0,0,0);const z=1/w;return t[0]=y*z,t[1]=(h*m-x*r)*z,t[2]=(l*r-h*o)*z,t[3]=d*z,t[4]=(x*e-h*c)*z,t[5]=(h*n-l*e)*z,t[6]=M*z,t[7]=(r*c-m*e)*z,t[8]=(o*e-r*n)*z,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,r,h,n,o,l){const c=Math.cos(n),s=Math.sin(n);return this.set(r*c,r*s,-r*(c*o+s*l)+o+t,-h*s,h*c,-h*(-s*o+c*l)+l+e,0,0,1),this}scale(t,e){const r=this.elements;return r[0]*=t,r[3]*=t,r[6]*=t,r[1]*=e,r[4]*=e,r[7]*=e,this}rotate(t){const e=Math.cos(t),s=Math.sin(t),r=this.elements,h=r[0],n=r[3],o=r[6],l=r[1],c=r[4],m=r[7];return r[0]=e*h+s*l,r[3]=e*n+s*c,r[6]=e*o+s*m,r[1]=-s*h+e*l,r[4]=-s*n+e*c,r[7]=-s*o+e*m,this}translate(t,e){const r=this.elements;return r[0]+=t*r[2],r[3]+=t*r[5],r[6]+=t*r[8],r[1]+=e*r[2],r[4]+=e*r[5],r[7]+=e*r[8],this}equals(t){const e=this.elements,r=t.elements;for(let i=0;i<9;i++)if(e[i]!==r[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}O.prototype.isMatrix3=!0;let V=0;const T=new y,W=new x,j=new w,R=new y,B=new y,H=new y,L=new x,I=new y(1,0,0),N=new y(0,1,0),X=new y(0,0,1),Y={type:"added"},Z={type:"removed"};class U extends class{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const r=this._listeners[t];if(void 0!==r){const t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const r=e.slice(0);for(let i=0,e=r.length;i<e;i++)r[i].call(this,t);t.target=null}}}{constructor(){super(),Object.defineProperty(this,"id",{value:V++}),this.uuid=function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(h[255&t]+h[t>>8&255]+h[t>>16&255]+h[t>>24&255]+"-"+h[255&e]+h[e>>8&255]+"-"+h[e>>16&15|64]+h[e>>24&255]+"-"+h[63&r|128]+h[r>>8&255]+"-"+h[r>>16&255]+h[r>>24&255]+h[255&n]+h[n>>8&255]+h[n>>16&255]+h[n>>24&255]).toUpperCase()}(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=U.DefaultUp.clone();const t=new y,e=new F,r=new x,n=new y(1,1,1);e._onChange((function(){r.setFromEuler(e,!1)})),r._onChange((function(){e.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new w},normalMatrix:{value:new O}}),this.matrix=new w,this.matrixWorld=new w,this.matrixAutoUpdate=U.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new P,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(q){return this.quaternion.premultiply(q),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(q){this.quaternion.copy(q)}rotateOnAxis(t,e){return W.setFromAxisAngle(t,e),this.quaternion.multiply(W),this}rotateOnWorldAxis(t,e){return W.setFromAxisAngle(t,e),this.quaternion.premultiply(W),this}rotateX(t){return this.rotateOnAxis(I,t)}rotateY(t){return this.rotateOnAxis(N,t)}rotateZ(t){return this.rotateOnAxis(X,t)}translateOnAxis(t,e){return T.copy(t).applyQuaternion(this.quaternion),this.position.add(T.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(I,t)}translateY(t){return this.translateOnAxis(N,t)}translateZ(t){return this.translateOnAxis(X,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(j.copy(this.matrixWorld).invert())}lookAt(t,e,r){t.isVector3?R.copy(t):R.set(t,e,r);const h=this.parent;this.updateWorldMatrix(!0,!1),B.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?j.lookAt(B,R,this.up):j.lookAt(R,B,this.up),this.quaternion.setFromRotationMatrix(j),h&&(j.extractRotation(h.matrixWorld),W.setFromRotationMatrix(j),this.quaternion.premultiply(W.invert()))}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(Y)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(object);return-1!==t&&(object.parent=null,this.children.splice(t,1),object.dispatchEvent(Z)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null,object.dispatchEvent(Z)}return this.children.length=0,this}attach(object){return this.updateWorldMatrix(!0,!1),j.copy(this.matrixWorld).invert(),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),j.multiply(object.parent.matrixWorld)),object.applyMatrix4(j),this.add(object),object.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,r=this.children.length;i<r;i++){const object=this.children[i].getObjectByProperty(t,e);if(void 0!==object)return object}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(B,t,H),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(B,L,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const r=this.parent;if(!0===t&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let i=0,e=t.length;i<e;i++)t[i].updateWorldMatrix(!1,!0)}}toJSON(meta){const t=void 0===meta||"string"==typeof meta,output={};t&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const object={};function e(t,element){return void 0===t[element.uuid]&&(t[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(object.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?object.background=this.background.toJSON():this.background.isTexture&&(object.background=this.background.toJSON(meta).uuid)),this.environment&&this.environment.isTexture&&(object.environment=this.environment.toJSON(meta).uuid);else if(this.isMesh||this.isLine||this.isPoints){object.geometry=e(meta.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const r=t.shapes;if(Array.isArray(r))for(let i=0,t=r.length;i<t;i++){const t=r[i];e(meta.shapes,t)}else e(meta.shapes,r)}}if(this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,r=this.material.length;i<r;i++)t.push(e(meta.materials,this.material[i]));object.material=t}else object.material=e(meta.materials,this.material);if(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const t=this.animations[i];object.animations.push(e(meta.animations,t))}}if(t){const t=r(meta.geometries),e=r(meta.materials),h=r(meta.textures),n=r(meta.images),o=r(meta.shapes),l=r(meta.skeletons),c=r(meta.animations);t.length>0&&(output.geometries=t),e.length>0&&(output.materials=e),h.length>0&&(output.textures=h),n.length>0&&(output.images=n),o.length>0&&(output.shapes=o),l.length>0&&(output.skeletons=l),c.length>0&&(output.animations=c)}return output.object=object,output;function r(t){const e=[];for(const r in t){const data=t[r];delete data.metadata,e.push(data)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(source,t=!0){if(this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.rotation.order=source.rotation.order,this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===t)for(let i=0;i<source.children.length;i++){const t=source.children[i];this.add(t.clone())}return this}}U.DefaultUp=new y(0,1,0),U.DefaultMatrixAutoUpdate=!0,U.prototype.isObject3D=!0;const Q={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},D={h:0,s:0,l:0},J={h:0,s:0,l:0};function G(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+6*(q-p)*(2/3-t):p}function $(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function K(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class tt{constructor(t,g,b){return void 0===g&&void 0===b?this.set(t):this.setRGB(t,g,b)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,g,b){return this.r=t,this.g=g,this.b=b,this}setHSL(t,s,e){if(t=c(t,1),s=l(s,0,1),e=l(e,0,1),0===s)this.r=this.g=this.b=e;else{const p=e<=.5?e*(1+s):e+s-e*s,q=2*e-p;this.r=G(q,p,t+1/3),this.g=G(q,p,t),this.b=G(q,p,t-1/3)}return this}setStyle(style){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(style)){let r;const h=e[1],n=e[2];switch(h){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){const e=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,h=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(e,s,h)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(style)){const t=e[1],r=t.length;if(3===r)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===r)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return style&&style.length>0?this.setColorName(style):this}setColorName(style){const t=Q[style.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+style),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const r=e>0?1/e:1;return this.r=Math.pow(t.r,r),this.g=Math.pow(t.g,r),this.b=Math.pow(t.b,r),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=$(t.r),this.g=$(t.g),this.b=$(t.b),this}copyLinearToSRGB(t){return this.r=K(t.r),this.g=K(t.g),this.b=K(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,g=this.g,b=this.b,r=Math.max(e,g,b),h=Math.min(e,g,b);let n,o;const l=(h+r)/2;if(h===r)n=0,o=0;else{const t=r-h;switch(o=l<=.5?t/(r+h):t/(2-r-h),r){case e:n=(g-b)/t+(g<b?6:0);break;case g:n=(b-e)/t+2;break;case b:n=(e-g)/t+4}n/=6}return t.h=n,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,e){return this.getHSL(D),D.h+=t,D.s+=s,D.l+=e,this.setHSL(D.h,D.s,D.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(s){return this.r+=s,this.g+=s,this.b+=s,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(s){return this.r*=s,this.g*=s,this.b*=s,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,r){return this.r=t.r+(e.r-t.r)*r,this.g=t.g+(e.g-t.g)*r,this.b=t.b+(e.b-t.b)*r,this}lerpHSL(t,e){this.getHSL(D),t.getHSL(J);const r=m(D.h,J.h,e),s=m(D.s,J.s,e),h=m(D.l,J.l,e);return this.setHSL(r,s,h),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}tt.NAMES=Q,tt.prototype.isColor=!0,tt.prototype.r=1,tt.prototype.g=1,tt.prototype.b=1;class st extends U{constructor(t,e=1){super(),this.type="Light",this.color=new tt(t),this.intensity=e}dispose(){}copy(source){return super.copy(source),this.color.copy(source.color),this.intensity=source.intensity,this}toJSON(meta){const data=super.toJSON(meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}st.prototype.isLight=!0;class it{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(s){return this.x+=s,this.y+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(s){return this.x-=s,this.y-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,r=this.y,h=t.elements;return this.x=h[0]*e+h[3]*r+h[6],this.y=h[1]*e+h[4]*r+h[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,r=this.y-t.y;return e*e+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const r=Math.cos(e),s=Math.sin(e),h=this.x-t.x,n=this.y-t.y;return this.x=h*r-n*s+t.x,this.y=h*s+n*r+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}it.prototype.isVector2=!0;class et{constructor(t=0,e=0,r=0,h=1){this.x=t,this.y=e,this.z=r,this.w=h}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,r,h){return this.x=t,this.y=e,this.z=r,this.w=h,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,r=this.y,h=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*r+o[8]*h+o[12]*n,this.y=o[1]*e+o[5]*r+o[9]*h+o[13]*n,this.z=o[2]*e+o[6]*r+o[10]*h+o[14]*n,this.w=o[3]*e+o[7]*r+o[11]*h+o[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this}setAxisAngleFromRotationMatrix(t){let e,r,h,n;const o=.01,l=.1,c=t.elements,m=c[0],x=c[4],y=c[8],d=c[1],M=c[5],w=c[9],z=c[2],_=c[6],f=c[10];if(Math.abs(x-d)<o&&Math.abs(y-z)<o&&Math.abs(w-_)<o){if(Math.abs(x+d)<l&&Math.abs(y+z)<l&&Math.abs(w+_)<l&&Math.abs(m+M+f-3)<l)return this.set(1,0,0,0),this;e=Math.PI;const t=(m+1)/2,c=(M+1)/2,v=(f+1)/2,S=(x+d)/4,k=(y+z)/4,C=(w+_)/4;return t>c&&t>v?t<o?(r=0,h=.707106781,n=.707106781):(r=Math.sqrt(t),h=S/r,n=k/r):c>v?c<o?(r=.707106781,h=0,n=.707106781):(h=Math.sqrt(c),r=S/h,n=C/h):v<o?(r=.707106781,h=.707106781,n=0):(n=Math.sqrt(v),r=k/n,h=C/n),this.set(r,h,n,e),this}let s=Math.sqrt((_-w)*(_-w)+(y-z)*(y-z)+(d-x)*(d-x));return Math.abs(s)<.001&&(s=1),this.x=(_-w)/s,this.y=(y-z)/s,this.z=(d-x)/s,this.w=Math.acos((m+M+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this.z=t.z+(e.z-t.z)*r,this.w=t.w+(e.w-t.w)*r,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}et.prototype.isVector4=!0;class ht{constructor(t=new y(1/0,1/0,1/0),e=new y(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,r=1/0,h=1/0,n=-1/0,o=-1/0,l=-1/0;for(let i=0,c=t.length;i<c;i+=3){const c=t[i],m=t[i+1],x=t[i+2];c<e&&(e=c),m<r&&(r=m),x<h&&(h=x),c>n&&(n=c),m>o&&(o=m),x>l&&(l=x)}return this.min.set(e,r,h),this.max.set(n,o,l),this}setFromBufferAttribute(t){let e=1/0,r=1/0,h=1/0,n=-1/0,o=-1/0,l=-1/0;for(let i=0,c=t.count;i<c;i++){const c=t.getX(i),m=t.getY(i),x=t.getZ(i);c<e&&(e=c),m<r&&(r=m),x<h&&(h=x),c>n&&(n=c),m>o&&(o=m),x>l&&(l=x)}return this.min.set(e,r,h),this.max.set(n,o,l),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const r=at.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}setFromObject(object){return this.makeEmpty(),this.expandByObject(object)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(object){object.updateWorldMatrix(!1,!1);const t=object.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),ot.copy(t.boundingBox),ot.applyMatrix4(object.matrixWorld),this.union(ot));const e=object.children;for(let i=0,t=e.length;i<t;i++)this.expandByObject(e[i]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,at),at.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,r;return t.normal.x>0?(e=t.normal.x*this.min.x,r=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,r=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=-t.constant&&r>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(pt),Mt.subVectors(this.max,pt),lt.subVectors(t.a,pt),ct.subVectors(t.b,pt),ut.subVectors(t.c,pt),mt.subVectors(ct,lt),xt.subVectors(ut,ct),yt.subVectors(lt,ut);let e=[0,-mt.z,mt.y,0,-xt.z,xt.y,0,-yt.z,yt.y,mt.z,0,-mt.x,xt.z,0,-xt.x,yt.z,0,-yt.x,-mt.y,mt.x,0,-xt.y,xt.x,0,-yt.y,yt.x,0];return!!zt(e,lt,ct,ut,Mt)&&(e=[1,0,0,0,1,0,0,0,1],!!zt(e,lt,ct,ut,Mt)&&(gt.crossVectors(mt,xt),e=[gt.x,gt.y,gt.z],zt(e,lt,ct,ut,Mt)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return at.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(at).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(nt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),nt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),nt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),nt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),nt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),nt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),nt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),nt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(nt)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}ht.prototype.isBox3=!0;const nt=[new y,new y,new y,new y,new y,new y,new y,new y],at=new y,ot=new ht,lt=new y,ct=new y,ut=new y,mt=new y,xt=new y,yt=new y,pt=new y,Mt=new y,gt=new y,wt=new y;function zt(t,e,r,h,n){for(let i=0,o=t.length-3;i<=o;i+=3){wt.fromArray(t,i);const o=n.x*Math.abs(wt.x)+n.y*Math.abs(wt.y)+n.z*Math.abs(wt.z),l=e.dot(wt),c=r.dot(wt),m=h.dot(wt);if(Math.max(-Math.max(l,c,m),Math.min(l,c,m))>o)return!1}return!0}const bt=new ht,_t=new y,ft=new y,vt=new y;class St{constructor(t=new y,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const r=this.center;void 0!==e?r.copy(e):bt.setFromPoints(t).getCenter(r);let h=0;for(let i=0,e=t.length;i<e;i++)h=Math.max(h,r.distanceToSquared(t[i]));return this.radius=Math.sqrt(h),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const r=this.center.distanceToSquared(t);return e.copy(t),r>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){vt.subVectors(t,this.center);const e=vt.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),r=.5*(t-this.radius);this.center.add(vt.multiplyScalar(r/t)),this.radius+=r}return this}union(t){return ft.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(_t.copy(t.center).add(ft)),this.expandByPoint(_t.copy(t.center).sub(ft)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const kt=new y,Ct=new y,Et=new O;class At{constructor(t=new y(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,r,h){return this.normal.set(t,e,r),this.constant=h,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(a,b,t){const e=kt.subVectors(t,b).cross(Ct.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(e,a),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(line,t){const e=line.delta(kt),r=this.normal.dot(e);if(0===r)return 0===this.distanceToPoint(line.start)?t.copy(line.start):null;const h=-(line.start.dot(this.normal)+this.constant)/r;return h<0||h>1?null:t.copy(e).multiplyScalar(h).add(line.start)}intersectsLine(line){const t=this.distanceToPoint(line.start),e=this.distanceToPoint(line.end);return t<0&&e>0||e<0&&t>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const r=e||Et.getNormalMatrix(t),h=this.coplanarPoint(kt).applyMatrix4(t),n=this.normal.applyMatrix3(r).normalize();return this.constant=-h.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}At.prototype.isPlane=!0;const Ft=new St,Pt=new y;class qt{constructor(t=new At,e=new At,r=new At,h=new At,n=new At,o=new At){this.planes=[t,e,r,h,n,o]}set(t,e,r,h,n,o){const l=this.planes;return l[0].copy(t),l[1].copy(e),l[2].copy(r),l[3].copy(h),l[4].copy(n),l[5].copy(o),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,r=t.elements,h=r[0],n=r[1],o=r[2],l=r[3],c=r[4],m=r[5],x=r[6],y=r[7],d=r[8],M=r[9],w=r[10],z=r[11],_=r[12],f=r[13],v=r[14],S=r[15];return e[0].setComponents(l-h,y-c,z-d,S-_).normalize(),e[1].setComponents(l+h,y+c,z+d,S+_).normalize(),e[2].setComponents(l+n,y+m,z+M,S+f).normalize(),e[3].setComponents(l-n,y-m,z-M,S-f).normalize(),e[4].setComponents(l-o,y-x,z-w,S-v).normalize(),e[5].setComponents(l+o,y+x,z+w,S+v).normalize(),this}intersectsObject(object){const t=object.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Ft.copy(t.boundingSphere).applyMatrix4(object.matrixWorld),this.intersectsSphere(Ft)}intersectsSprite(t){return Ft.center.set(0,0,0),Ft.radius=.7071067811865476,Ft.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ft)}intersectsSphere(t){const e=this.planes,r=t.center,h=-t.radius;for(let i=0;i<6;i++){if(e[i].distanceToPoint(r)<h)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const r=e[i];if(Pt.x=r.normal.x>0?t.max.x:t.min.x,Pt.y=r.normal.y>0?t.max.y:t.min.y,Pt.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Pt)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const Ot=new w,Vt=new y,Tt=new y;class Wt extends U{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new w,this.projectionMatrix=new w,this.projectionMatrixInverse=new w}copy(source,t){return super.copy(source,t),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Wt.prototype.isCamera=!0;class jt extends Wt{constructor(t=50,e=1,r=.1,h=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=r,this.far=h,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(source,t){return super.copy(source,t),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*o*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*n*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*o*Math.atan(Math.tan(.5*n*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,r,h,n,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=r,this.view.offsetY=h,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*n*this.fov)/this.zoom,r=2*e,h=this.aspect*r,o=-.5*h;const view=this.view;if(null!==this.view&&this.view.enabled){const t=view.fullWidth,n=view.fullHeight;o+=view.offsetX*h/t,e-=view.offsetY*r/n,h*=view.width/t,r*=view.height/n}const l=this.filmOffset;0!==l&&(o+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+h,e,e-r,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}}jt.prototype.isPerspectiveCamera=!0;const Rt=new w,Bt=new y,Ht=new y;class Lt extends class{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new it(512,512),this.map=null,this.mapPass=null,this.matrix=new w,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qt,this._frameExtents=new it(1,1),this._viewportCount=1,this._viewports=[new et(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,r=this.matrix;Vt.setFromMatrixPosition(t.matrixWorld),e.position.copy(Vt),Tt.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Tt),e.updateMatrixWorld(),Ot.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ot),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(e.projectionMatrix),r.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const object={};return 0!==this.bias&&(object.bias=this.bias),0!==this.normalBias&&(object.normalBias=this.normalBias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}{constructor(){super(new jt(90,1,.5,500)),this._frameExtents=new it(4,2),this._viewportCount=6,this._viewports=[new et(2,1,1,1),new et(0,1,1,1),new et(3,1,1,1),new et(1,1,1,1),new et(3,0,1,1),new et(1,0,1,1)],this._cubeDirections=[new y(1,0,0),new y(-1,0,0),new y(0,0,1),new y(0,0,-1),new y(0,1,0),new y(0,-1,0)],this._cubeUps=[new y(0,1,0),new y(0,1,0),new y(0,1,0),new y(0,1,0),new y(0,0,1),new y(0,0,-1)]}updateMatrices(t,e=0){const r=this.camera,h=this.matrix,n=t.distance||r.far;n!==r.far&&(r.far=n,r.updateProjectionMatrix()),Bt.setFromMatrixPosition(t.matrixWorld),r.position.copy(Bt),Ht.copy(r.position),Ht.add(this._cubeDirections[e]),r.up.copy(this._cubeUps[e]),r.lookAt(Ht),r.updateMatrixWorld(),h.makeTranslation(-Bt.x,-Bt.y,-Bt.z),Rt.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rt)}}Lt.prototype.isPointLightShadow=!0;class It extends st{constructor(t,e,r=0,h=1){super(t,e),this.type="PointLight",this.distance=r,this.decay=h,this.shadow=new Lt}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}It.prototype.isPointLight=!0}}]);