(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{241:function(t,e,n){"use strict";n.d(e,"a",(function(){return hc})),n.d(e,"b",(function(){return ic})),n.d(e,"c",(function(){return Qe})),n.d(e,"d",(function(){return ce})),n.d(e,"e",(function(){return Pe})),n.d(e,"f",(function(){return ee})),n.d(e,"g",(function(){return cn})),n.d(e,"h",(function(){return Ra})),n.d(e,"i",(function(){return c})),n.d(e,"j",(function(){return d})),n.d(e,"k",(function(){return f})),n.d(e,"l",(function(){return ve})),n.d(e,"m",(function(){return l})),n.d(e,"n",(function(){return r})),n.d(e,"o",(function(){return Ye})),n.d(e,"p",(function(){return ms})),n.d(e,"q",(function(){return as})),n.d(e,"r",(function(){return rn})),n.d(e,"s",(function(){return fn})),n.d(e,"t",(function(){return _o})),n.d(e,"u",(function(){return lc})),n.d(e,"v",(function(){return P})),n.d(e,"w",(function(){return Ac})),n.d(e,"x",(function(){return Sr})),n.d(e,"y",(function(){return en})),n.d(e,"z",(function(){return ds})),n.d(e,"A",(function(){return Pc})),n.d(e,"B",(function(){return o})),n.d(e,"C",(function(){return Js})),n.d(e,"D",(function(){return x})),n.d(e,"E",(function(){return C})),n.d(e,"F",(function(){return A})),n.d(e,"G",(function(){return wo})),n.d(e,"H",(function(){return wr})),n.d(e,"I",(function(){return h}));const r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},o={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},c=2,l=1024,h=3001,d=35048;function f(){}Object.assign(f.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let i=0,e=n.length;i<e;i++)n[i].call(this,t)}}});const m=[];for(let i=0;i<256;i++)m[i]=(i<16?"0":"")+i.toString(16);let v=1234567;const y={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(m[255&t]+m[t>>8&255]+m[t>>16&255]+m[t>>24&255]+"-"+m[255&e]+m[e>>8&255]+"-"+m[e>>16&15|64]+m[e>>24&255]+"-"+m[63&n|128]+m[n>>8&255]+"-"+m[n>>16&255]+m[n>>24&255]+m[255&r]+m[r>>8&255]+m[r>>16&255]+m[r>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,r,o){return r+(t-e)*(o-r)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(s){return void 0!==s&&(v=s%2147483647),v=16807*v%2147483647,(v-1)/2147483646},degToRad:function(t){return t*y.DEG2RAD},radToDeg:function(t){return t*y.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(q,a,b,t,e){const n=Math.cos,r=Math.sin,o=n(b/2),c=r(b/2),l=n((a+t)/2),h=r((a+t)/2),d=n((a-t)/2),f=r((a-t)/2),m=n((t-a)/2),v=r((t-a)/2);switch(e){case"XYX":q.set(o*h,c*d,c*f,o*l);break;case"YZY":q.set(c*f,o*h,c*d,o*l);break;case"ZXZ":q.set(c*d,c*f,o*h,o*l);break;case"XZX":q.set(o*h,c*v,c*m,o*l);break;case"YXY":q.set(c*m,o*h,c*v,o*l);break;case"ZYZ":q.set(c*v,c*m,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}}};class x{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(s){return this.x+=s,this.y+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(s){return this.x-=s,this.y-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class _{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,c,l,h,d){const f=this.elements;return f[0]=t,f[1]=r,f[2]=l,f[3]=e,f[4]=o,f[5]=h,f[6]=n,f[7]=c,f[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[3],c=t[6],l=t[1],h=t[4],d=t[7],f=t[2],m=t[5],v=t[8],y=e[0],x=e[3],_=e[6],w=e[1],M=e[4],S=e[7],T=e[2],E=e[5],A=e[8];return n[0]=r*y+o*w+c*T,n[3]=r*x+o*M+c*E,n[6]=r*_+o*S+c*A,n[1]=l*y+h*w+d*T,n[4]=l*x+h*M+d*E,n[7]=l*_+h*S+d*A,n[2]=f*y+m*w+v*T,n[5]=f*x+m*M+v*E,n[8]=f*_+m*S+v*A,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[3]*=s,t[6]*=s,t[1]*=s,t[4]*=s,t[7]*=s,t[2]*=s,t[5]*=s,t[8]*=s,this}determinant(){const t=this.elements,a=t[0],b=t[1],e=t[2],n=t[3],r=t[4],o=t[5],g=t[6],c=t[7],i=t[8];return a*r*i-a*o*c-b*n*i+b*o*g+e*n*c-e*r*g}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],c=t[4],l=t[5],h=t[6],d=t[7],f=t[8],m=f*c-l*d,v=l*h-f*o,y=d*o-c*h,x=e*m+n*v+r*y;if(0===x)return this.set(0,0,0,0,0,0,0,0,0);const _=1/x;return t[0]=m*_,t[1]=(r*d-f*n)*_,t[2]=(l*n-r*c)*_,t[3]=v*_,t[4]=(f*e-r*h)*_,t[5]=(r*o-l*e)*_,t[6]=y*_,t[7]=(n*h-d*e)*_,t[8]=(c*e-n*o)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).copy(this).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,o,c,l){const h=Math.cos(o),s=Math.sin(o);this.set(n*h,n*s,-n*(h*c+s*l)+c+t,-r*s,r*h,-r*(-s*c+h*l)+l+e,0,0,1)}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),s=Math.sin(t),n=this.elements,r=n[0],o=n[3],c=n[6],l=n[1],h=n[4],d=n[7];return n[0]=e*r+s*l,n[3]=e*o+s*h,n[6]=e*c+s*d,n[1]=-s*r+e*l,n[4]=-s*o+e*h,n[7]=-s*c+e*d,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}}let w;const M={getDataURL:function(image){if(/^data:/i.test(image.src))return image.src;if("undefined"==typeof HTMLCanvasElement)return image.src;let canvas;if(image instanceof HTMLCanvasElement)canvas=image;else{void 0===w&&(w=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),w.width=image.width,w.height=image.height;const t=w.getContext("2d");image instanceof ImageData?t.putImageData(image,0,0):t.drawImage(image,0,0,image.width,image.height),canvas=w}return canvas.width>2048||canvas.height>2048?canvas.toDataURL("image/jpeg",.6):canvas.toDataURL("image/png")}};let S=0;function T(image=T.DEFAULT_IMAGE,t=T.DEFAULT_MAPPING,e=1001,n=1001,r=1006,o=1008,c=1023,l=1009,h=1,d=3e3){Object.defineProperty(this,"id",{value:S++}),this.uuid=y.generateUUID(),this.name="",this.image=image,this.mipmaps=[],this.mapping=t,this.wrapS=e,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=l,this.offset=new x(0,0),this.repeat=new x(1,1),this.center=new x(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.version=0,this.onUpdate=null}function E(image){return"undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?M.getDataURL(image):image.data?{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}T.DEFAULT_IMAGE=void 0,T.DEFAULT_MAPPING=300,T.prototype=Object.assign(Object.create(f.prototype),{constructor:T,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.name=source.name,this.image=source.image,this.mipmaps=source.mipmaps.slice(0),this.mapping=source.mapping,this.wrapS=source.wrapS,this.wrapT=source.wrapT,this.magFilter=source.magFilter,this.minFilter=source.minFilter,this.anisotropy=source.anisotropy,this.format=source.format,this.internalFormat=source.internalFormat,this.type=source.type,this.offset.copy(source.offset),this.repeat.copy(source.repeat),this.center.copy(source.center),this.rotation=source.rotation,this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrix.copy(source.matrix),this.generateMipmaps=source.generateMipmaps,this.premultiplyAlpha=source.premultiplyAlpha,this.flipY=source.flipY,this.unpackAlignment=source.unpackAlignment,this.encoding=source.encoding,this},toJSON:function(meta){const t=void 0===meta||"string"==typeof meta;if(!t&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];const output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const image=this.image;if(void 0===image.uuid&&(image.uuid=y.generateUUID()),!t&&void 0===meta.images[image.uuid]){let t;if(Array.isArray(image)){t=[];for(let i=0,e=image.length;i<e;i++)image[i].isDataTexture?t.push(E(image[i].image)):t.push(E(image[i]))}else t=E(image);meta.images[image.uuid]={uuid:image.uuid,url:t}}output.image=image.uuid}return t||(meta.textures[this.uuid]=output),output},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(T.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class A{constructor(t=0,e=0,n=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=this.w,c=t.elements;return this.x=c[0]*e+c[4]*n+c[8]*r+c[12]*o,this.y=c[1]*e+c[5]*n+c[9]*r+c[13]*o,this.z=c[2]*e+c[6]*n+c[10]*r+c[14]*o,this.w=c[3]*e+c[7]*n+c[11]*r+c[15]*o,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this}setAxisAngleFromRotationMatrix(t){let e,n,r,o;const c=t.elements,l=c[0],h=c[4],d=c[8],f=c[1],m=c[5],v=c[9],y=c[2],x=c[6],_=c[10];if(Math.abs(h-f)<.01&&Math.abs(d-y)<.01&&Math.abs(v-x)<.01){if(Math.abs(h+f)<.1&&Math.abs(d+y)<.1&&Math.abs(v+x)<.1&&Math.abs(l+m+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,c=(m+1)/2,w=(_+1)/2,M=(h+f)/4,S=(d+y)/4,T=(v+x)/4;return t>c&&t>w?t<.01?(n=0,r=.707106781,o=.707106781):(n=Math.sqrt(t),r=M/n,o=S/n):c>w?c<.01?(n=.707106781,r=0,o=.707106781):(r=Math.sqrt(c),n=M/r,o=T/r):w<.01?(n=.707106781,r=.707106781,o=0):(o=Math.sqrt(w),n=S/o,r=T/o),this.set(n,r,o,e),this}let s=Math.sqrt((x-v)*(x-v)+(d-y)*(d-y)+(f-h)*(f-h));return Math.abs(s)<.001&&(s=1),this.x=(x-v)/s,this.y=(d-y)/s,this.z=(f-h)/s,this.w=Math.acos((l+m+_-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function L(t,e,n){this.width=t,this.height=e,this.scissor=new A(0,0,t,e),this.scissorTest=!1,this.viewport=new A(0,0,t,e),n=n||{},this.texture=new T(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function R(t,e,n){L.call(this,t,e,n),this.samples=4}L.prototype=Object.assign(Object.create(f.prototype),{constructor:L,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.width=source.width,this.height=source.height,this.viewport.copy(source.viewport),this.texture=source.texture.clone(),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),R.prototype=Object.assign(Object.create(L.prototype),{constructor:R,isWebGLMultisampleRenderTarget:!0,copy:function(source){return L.prototype.copy.call(this,source),this.samples=source.samples,this}});class P{constructor(t=0,e=0,n=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return n.copy(t).slerp(e,r)}static slerpFlat(t,e,n,r,o,c,l){let h=n[r+0],d=n[r+1],f=n[r+2],m=n[r+3];const v=o[c+0],y=o[c+1],x=o[c+2],_=o[c+3];if(m!==_||h!==v||d!==y||f!==x){let s=1-l;const t=h*v+d*y+f*x+m*_,e=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),o=Math.atan2(r,t*e);s=Math.sin(s*o)/r,l=Math.sin(l*o)/r}const r=l*e;if(h=h*s+v*r,d=d*s+y*r,f=f*s+x*r,m=m*s+_*r,s===1-l){const t=1/Math.sqrt(h*h+d*d+f*f+m*m);h*=t,d*=t,f*=t,m*=t}}t[e]=h,t[e+1]=d,t[e+2]=f,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,r,o,c){const l=n[r],h=n[r+1],d=n[r+2],f=n[r+3],m=o[c],v=o[c+1],y=o[c+2],x=o[c+3];return t[e]=l*x+f*m+h*y-d*v,t[e+1]=h*x+f*v+d*m-l*y,t[e+2]=d*x+f*y+l*v-h*m,t[e+3]=f*x-l*m-h*v-d*y,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,o=t._z,c=t._order,l=Math.cos,h=Math.sin,d=l(n/2),f=l(r/2),m=l(o/2),v=h(n/2),y=h(r/2),x=h(o/2);switch(c){case"XYZ":this._x=v*f*m+d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m-v*y*x;break;case"YXZ":this._x=v*f*m+d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m+v*y*x;break;case"ZXY":this._x=v*f*m-d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m-v*y*x;break;case"ZYX":this._x=v*f*m-d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m+v*y*x;break;case"YZX":this._x=v*f*m+d*y*x,this._y=d*y*m+v*f*x,this._z=d*f*x-v*y*m,this._w=d*f*m-v*y*x;break;case"XZY":this._x=v*f*m-d*y*x,this._y=d*y*m-v*f*x,this._z=d*f*x+v*y*m,this._w=d*f*m+v*y*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+c)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],o=e[8],c=e[1],l=e[5],h=e[9],d=e[2],f=e[6],m=e[10],v=n+l+m;if(v>0){const s=.5/Math.sqrt(v+1);this._w=.25/s,this._x=(f-h)*s,this._y=(o-d)*s,this._z=(c-r)*s}else if(n>l&&n>m){const s=2*Math.sqrt(1+n-l-m);this._w=(f-h)/s,this._x=.25*s,this._y=(r+c)/s,this._z=(o+d)/s}else if(l>m){const s=2*Math.sqrt(1+l-n-m);this._w=(o-d)/s,this._x=(r+c)/s,this._y=.25*s,this._z=(h+f)/s}else{const s=2*Math.sqrt(1+m-n-l);this._w=(c-r)/s,this._x=(o+d)/s,this._y=(h+f)/s,this._z=.25*s}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(y.clamp(this.dot(q),-1,1)))}rotateTowards(q,t){const e=this.angleTo(q);if(0===e)return this;const n=Math.min(1,t/e);return this.slerp(q,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(a,b){const t=a._x,e=a._y,n=a._z,r=a._w,o=b._x,c=b._y,l=b._z,h=b._w;return this._x=t*h+r*o+e*l-n*c,this._y=e*h+r*c+n*o-t*l,this._z=n*h+r*l+t*c-e*o,this._w=r*h-t*o-e*c-n*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,o=this._z,c=this._w;let l=c*t._w+n*t._x+r*t._y+o*t._z;if(l<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,l=-l):this.copy(t),l>=1)return this._w=c,this._x=n,this._y=r,this._z=o,this;const h=1-l*l;if(h<=Number.EPSILON){const s=1-e;return this._w=s*c+e*this._w,this._x=s*n+e*this._x,this._y=s*r+e*this._y,this._z=s*o+e*this._z,this.normalize(),this._onChangeCallback(),this}const d=Math.sqrt(h),f=Math.atan2(d,l),m=Math.sin((1-e)*f)/d,v=Math.sin(e*f)/d;return this._w=c*m+this._w*v,this._x=n*m+this._x*v,this._y=r*m+this._y*v,this._z=o*m+this._z*v,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class C{constructor(t=0,e=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(I.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(I.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*r,this.y=o[1]*e+o[4]*n+o[7]*r,this.z=o[2]*e+o[5]*n+o[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=t.elements,c=1/(o[3]*e+o[7]*n+o[11]*r+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*r+o[12])*c,this.y=(o[1]*e+o[5]*n+o[9]*r+o[13])*c,this.z=(o[2]*e+o[6]*n+o[10]*r+o[14])*c,this}applyQuaternion(q){const t=this.x,e=this.y,n=this.z,r=q.x,o=q.y,c=q.z,l=q.w,h=l*t+o*n-c*e,d=l*e+c*t-r*n,f=l*n+r*e-o*t,m=-r*t-o*e-c*n;return this.x=h*l+m*-r+d*-c-f*-o,this.y=d*l+m*-o+f*-r-h*-c,this.z=f*l+m*-c+h*-o-d*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*r,this.y=o[1]*e+o[5]*n+o[9]*r,this.z=o[2]*e+o[6]*n+o[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(a,b){const t=a.x,e=a.y,n=a.z,r=b.x,o=b.y,c=b.z;return this.x=e*c-n*o,this.y=n*r-t*c,this.z=t*o-e*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return N.copy(this).projectOnVector(t),this.sub(N)}reflect(t){return this.sub(N.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(y.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const N=new C,I=new P;class D{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new C(1/0,1/0,1/0),this.max=void 0!==e?e:new C(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,o=-1/0,c=-1/0,l=-1/0;for(let i=0,h=t.length;i<h;i+=3){const h=t[i],d=t[i+1],f=t[i+2];h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>c&&(c=d),f>l&&(l=f)}return this.min.set(e,n,r),this.max.set(o,c,l),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,o=-1/0,c=-1/0,l=-1/0;for(let i=0,h=t.count;i<h;i++){const h=t.getX(i),d=t.getY(i),f=t.getZ(i);h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>c&&(c=d),f>l&&(l=f)}return this.min.set(e,n,r),this.max.set(o,c,l),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=U.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(object){return this.makeEmpty(),this.expandByObject(object)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new C),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new C),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(object){object.updateWorldMatrix(!1,!1);const t=object.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),B.copy(t.boundingBox),B.applyMatrix4(object.matrixWorld),this.union(B));const e=object.children;for(let i=0,t=e.length;i<t;i++)this.expandByObject(e[i]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new C),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,U),U.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(j),X.subVectors(this.max,j),F.subVectors(t.a,j),H.subVectors(t.b,j),G.subVectors(t.c,j),k.subVectors(H,F),V.subVectors(G,H),W.subVectors(F,G);let e=[0,-k.z,k.y,0,-V.z,V.y,0,-W.z,W.y,k.z,0,-k.x,V.z,0,-V.x,W.z,0,-W.x,-k.y,k.x,0,-V.y,V.x,0,-W.y,W.x,0];return!!O(e,F,H,G,X)&&(e=[1,0,0,0,1,0,0,0,1],!!O(e,F,H,G,X)&&(Y.crossVectors(k,V),e=[Y.x,Y.y,Y.z],O(e,F,H,G,X)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new C),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return U.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(U).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(z[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),z[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),z[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),z[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),z[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),z[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),z[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),z[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(z)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function O(t,e,n,r,o){for(let i=0,c=t.length-3;i<=c;i+=3){Z.fromArray(t,i);const c=o.x*Math.abs(Z.x)+o.y*Math.abs(Z.y)+o.z*Math.abs(Z.z),l=e.dot(Z),h=n.dot(Z),d=r.dot(Z);if(Math.max(-Math.max(l,h,d),Math.min(l,h,d))>c)return!1}return!0}const z=[new C,new C,new C,new C,new C,new C,new C,new C],U=new C,B=new D,F=new C,H=new C,G=new C,k=new C,V=new C,W=new C,j=new C,X=new C,Y=new C,Z=new C,J=new D;class Q{constructor(t,e){this.center=void 0!==t?t:new C,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):J.setFromPoints(t).getCenter(n);let r=0;for(let i=0,e=t.length;i<e;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new C),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new D),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const K=new C,$=new C,tt=new C,et=new C,nt=new C,it=new C,ot=new C;class st{constructor(t,e){this.origin=void 0!==t?t:new C,this.direction=void 0!==e?e:new C(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new C),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,K)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new C),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=K.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(K.copy(this.direction).multiplyScalar(e).add(this.origin),K.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){$.copy(t).add(e).multiplyScalar(.5),tt.copy(e).sub(t).normalize(),et.copy(this.origin).sub($);const o=.5*t.distanceTo(e),c=-this.direction.dot(tt),l=et.dot(this.direction),h=-et.dot(tt),d=et.lengthSq(),f=Math.abs(1-c*c);let m,v,y,x;if(f>0)if(m=c*h-l,v=c*l-h,x=o*f,m>=0)if(v>=-x)if(v<=x){const t=1/f;m*=t,v*=t,y=m*(m+c*v+2*l)+v*(c*m+v+2*h)+d}else v=o,m=Math.max(0,-(c*v+l)),y=-m*m+v*(v+2*h)+d;else v=-o,m=Math.max(0,-(c*v+l)),y=-m*m+v*(v+2*h)+d;else v<=-x?(m=Math.max(0,-(-c*o+l)),v=m>0?-o:Math.min(Math.max(-o,-h),o),y=-m*m+v*(v+2*h)+d):v<=x?(m=0,v=Math.min(Math.max(-o,-h),o),y=v*(v+2*h)+d):(m=Math.max(0,-(c*o+l)),v=m>0?o:Math.min(Math.max(-o,-h),o),y=-m*m+v*(v+2*h)+d);else v=c>0?-o:o,m=Math.max(0,-(c*v+l)),y=-m*m+v*(v+2*h)+d;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),r&&r.copy(tt).multiplyScalar(v).add($),y}intersectSphere(t,e){K.subVectors(t.center,this.origin);const n=K.dot(this.direction),r=K.dot(K)-n*n,o=t.radius*t.radius;if(r>o)return null;const c=Math.sqrt(o-r),l=n-c,h=n+c;return l<0&&h<0?null:l<0?this.at(h,e):this.at(l,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,o,c,l,h;const d=1/this.direction.x,f=1/this.direction.y,m=1/this.direction.z,v=this.origin;return d>=0?(n=(t.min.x-v.x)*d,r=(t.max.x-v.x)*d):(n=(t.max.x-v.x)*d,r=(t.min.x-v.x)*d),f>=0?(o=(t.min.y-v.y)*f,c=(t.max.y-v.y)*f):(o=(t.max.y-v.y)*f,c=(t.min.y-v.y)*f),n>c||o>r?null:((o>n||n!=n)&&(n=o),(c<r||r!=r)&&(r=c),m>=0?(l=(t.min.z-v.z)*m,h=(t.max.z-v.z)*m):(l=(t.max.z-v.z)*m,h=(t.min.z-v.z)*m),n>h||l>r?null:((l>n||n!=n)&&(n=l),(h<r||r!=r)&&(r=h),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,K)}intersectTriangle(a,b,t,e,n){nt.subVectors(b,a),it.subVectors(t,a),ot.crossVectors(nt,it);let r,o=this.direction.dot(ot);if(o>0){if(e)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}et.subVectors(this.origin,a);const c=r*this.direction.dot(it.crossVectors(et,it));if(c<0)return null;const l=r*this.direction.dot(nt.cross(et));if(l<0)return null;if(c+l>o)return null;const h=-r*et.dot(ot);return h<0?null:this.at(h/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class at{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,c,l,h,d,f,m,v,y,x,_,w){const M=this.elements;return M[0]=t,M[4]=e,M[8]=n,M[12]=r,M[1]=o,M[5]=c,M[9]=l,M[13]=h,M[2]=d,M[6]=f,M[10]=m,M[14]=v,M[3]=y,M[7]=x,M[11]=_,M[15]=w,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new at).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/ct.setFromMatrixColumn(t,0).length(),o=1/ct.setFromMatrixColumn(t,1).length(),c=1/ct.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*c,e[9]=n[9]*c,e[10]=n[10]*c,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,o=t.z,a=Math.cos(n),b=Math.sin(n),c=Math.cos(r),l=Math.sin(r),h=Math.cos(o),d=Math.sin(o);if("XYZ"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=c*h,e[4]=-c*d,e[8]=l,e[1]=n+r*l,e[5]=t-o*l,e[9]=-b*c,e[2]=o-t*l,e[6]=r+n*l,e[10]=a*c}else if("YXZ"===t.order){const t=c*h,n=c*d,r=l*h,o=l*d;e[0]=t+o*b,e[4]=r*b-n,e[8]=a*l,e[1]=a*d,e[5]=a*h,e[9]=-b,e[2]=n*b-r,e[6]=o+t*b,e[10]=a*c}else if("ZXY"===t.order){const t=c*h,n=c*d,r=l*h,o=l*d;e[0]=t-o*b,e[4]=-a*d,e[8]=r+n*b,e[1]=n+r*b,e[5]=a*h,e[9]=o-t*b,e[2]=-a*l,e[6]=b,e[10]=a*c}else if("ZYX"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=c*h,e[4]=r*l-n,e[8]=t*l+o,e[1]=c*d,e[5]=o*l+t,e[9]=n*l-r,e[2]=-l,e[6]=b*c,e[10]=a*c}else if("YZX"===t.order){const t=a*c,n=a*l,r=b*c,o=b*l;e[0]=c*h,e[4]=o-t*d,e[8]=r*d+n,e[1]=d,e[5]=a*h,e[9]=-b*h,e[2]=-l*h,e[6]=n*d+r,e[10]=t-o*d}else if("XZY"===t.order){const t=a*c,n=a*l,r=b*c,o=b*l;e[0]=c*h,e[4]=-d,e[8]=l*h,e[1]=t*d+o,e[5]=a*h,e[9]=n*d-r,e[2]=r*d-n,e[6]=b*h,e[10]=o*d+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(q){return this.compose(ht,q,ut)}lookAt(t,e,n){const r=this.elements;return mt.subVectors(t,e),0===mt.lengthSq()&&(mt.z=1),mt.normalize(),pt.crossVectors(n,mt),0===pt.lengthSq()&&(1===Math.abs(n.z)?mt.x+=1e-4:mt.z+=1e-4,mt.normalize(),pt.crossVectors(n,mt)),pt.normalize(),ft.crossVectors(mt,pt),r[0]=pt.x,r[4]=ft.x,r[8]=mt.x,r[1]=pt.y,r[5]=ft.y,r[9]=mt.y,r[2]=pt.z,r[6]=ft.z,r[10]=mt.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[4],c=t[8],l=t[12],h=t[1],d=t[5],f=t[9],m=t[13],v=t[2],y=t[6],x=t[10],_=t[14],w=t[3],M=t[7],S=t[11],T=t[15],E=e[0],A=e[4],L=e[8],R=e[12],P=e[1],C=e[5],N=e[9],I=e[13],D=e[2],O=e[6],z=e[10],U=e[14],B=e[3],F=e[7],H=e[11],G=e[15];return n[0]=r*E+o*P+c*D+l*B,n[4]=r*A+o*C+c*O+l*F,n[8]=r*L+o*N+c*z+l*H,n[12]=r*R+o*I+c*U+l*G,n[1]=h*E+d*P+f*D+m*B,n[5]=h*A+d*C+f*O+m*F,n[9]=h*L+d*N+f*z+m*H,n[13]=h*R+d*I+f*U+m*G,n[2]=v*E+y*P+x*D+_*B,n[6]=v*A+y*C+x*O+_*F,n[10]=v*L+y*N+x*z+_*H,n[14]=v*R+y*I+x*U+_*G,n[3]=w*E+M*P+S*D+T*B,n[7]=w*A+M*C+S*O+T*F,n[11]=w*L+M*N+S*z+T*H,n[15]=w*R+M*I+S*U+T*G,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[4]*=s,t[8]*=s,t[12]*=s,t[1]*=s,t[5]*=s,t[9]*=s,t[13]*=s,t[2]*=s,t[6]*=s,t[10]*=s,t[14]*=s,t[3]*=s,t[7]*=s,t[11]*=s,t[15]*=s,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],o=t[12],c=t[1],l=t[5],h=t[9],d=t[13],f=t[2],m=t[6],v=t[10],y=t[14];return t[3]*(+o*h*m-r*d*m-o*l*v+n*d*v+r*l*y-n*h*y)+t[7]*(+e*h*y-e*d*v+o*c*v-r*c*y+r*d*f-o*h*f)+t[11]*(+e*d*m-e*l*y-o*c*m+n*c*y+o*l*f-n*d*f)+t[15]*(-r*l*f-e*h*m+e*l*v+r*c*m-n*c*v+n*h*f)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],c=t[4],l=t[5],h=t[6],d=t[7],f=t[8],m=t[9],v=t[10],y=t[11],x=t[12],_=t[13],w=t[14],M=t[15],S=m*w*d-_*v*d+_*h*y-l*w*y-m*h*M+l*v*M,T=x*v*d-f*w*d-x*h*y+c*w*y+f*h*M-c*v*M,E=f*_*d-x*m*d+x*l*y-c*_*y-f*l*M+c*m*M,A=x*m*h-f*_*h-x*l*v+c*_*v+f*l*w-c*m*w,L=e*S+n*T+r*E+o*A;if(0===L)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/L;return t[0]=S*R,t[1]=(_*v*o-m*w*o-_*r*y+n*w*y+m*r*M-n*v*M)*R,t[2]=(l*w*o-_*h*o+_*r*d-n*w*d-l*r*M+n*h*M)*R,t[3]=(m*h*o-l*v*o-m*r*d+n*v*d+l*r*y-n*h*y)*R,t[4]=T*R,t[5]=(f*w*o-x*v*o+x*r*y-e*w*y-f*r*M+e*v*M)*R,t[6]=(x*h*o-c*w*o-x*r*d+e*w*d+c*r*M-e*h*M)*R,t[7]=(c*v*o-f*h*o+f*r*d-e*v*d-c*r*y+e*h*y)*R,t[8]=E*R,t[9]=(x*m*o-f*_*o-x*n*y+e*_*y+f*n*M-e*m*M)*R,t[10]=(c*_*o-x*l*o+x*n*d-e*_*d-c*n*M+e*l*M)*R,t[11]=(f*l*o-c*m*o-f*n*d+e*m*d+c*n*y-e*l*y)*R,t[12]=A*R,t[13]=(f*_*r-x*m*r+x*n*v-e*_*v-f*n*w+e*m*w)*R,t[14]=(x*l*r-c*_*r-x*n*h+e*_*h+c*n*w-e*l*w)*R,t[15]=(c*m*r-f*l*r+f*n*h-e*m*h-c*n*v+e*l*v)*R,this}scale(t){const e=this.elements,n=t.x,r=t.y,o=t.z;return e[0]*=n,e[4]*=r,e[8]*=o,e[1]*=n,e[5]*=r,e[9]*=o,e[2]*=n,e[6]*=r,e[10]*=o,e[3]*=n,e[7]*=r,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,c=t.y,l=t.z,h=r*o,d=r*c;return this.set(h*o+n,h*c-s*l,h*l+s*c,0,h*c+s*l,d*c+n,d*l-s*o,0,h*l-s*c,d*l+s*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,o=e._x,c=e._y,l=e._z,h=e._w,d=o+o,f=c+c,m=l+l,v=o*d,y=o*f,x=o*m,_=c*f,w=c*m,M=l*m,S=h*d,T=h*f,E=h*m,A=n.x,L=n.y,R=n.z;return r[0]=(1-(_+M))*A,r[1]=(y+E)*A,r[2]=(x-T)*A,r[3]=0,r[4]=(y-E)*L,r[5]=(1-(v+M))*L,r[6]=(w+S)*L,r[7]=0,r[8]=(x+T)*R,r[9]=(w-S)*R,r[10]=(1-(v+_))*R,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let o=ct.set(r[0],r[1],r[2]).length();const c=ct.set(r[4],r[5],r[6]).length(),l=ct.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),t.x=r[12],t.y=r[13],t.z=r[14],lt.copy(this);const h=1/o,d=1/c,f=1/l;return lt.elements[0]*=h,lt.elements[1]*=h,lt.elements[2]*=h,lt.elements[4]*=d,lt.elements[5]*=d,lt.elements[6]*=d,lt.elements[8]*=f,lt.elements[9]*=f,lt.elements[10]*=f,e.setFromRotationMatrix(lt),n.x=o,n.y=c,n.z=l,this}makePerspective(t,e,n,r,o,c){void 0===c&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const l=this.elements,h=2*o/(e-t),d=2*o/(n-r),a=(e+t)/(e-t),b=(n+r)/(n-r),f=-(c+o)/(c-o),m=-2*c*o/(c-o);return l[0]=h,l[4]=0,l[8]=a,l[12]=0,l[1]=0,l[5]=d,l[9]=b,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,r,o,c){const l=this.elements,h=1/(e-t),d=1/(n-r),p=1/(c-o),f=(e+t)*h,m=(n+r)*d,v=(c+o)*p;return l[0]=2*h,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*d,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=-2*p,l[14]=-v,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const ct=new C,lt=new at,ht=new C(0,0,0),ut=new C(1,1,1),pt=new C,ft=new C,mt=new C;class gt{constructor(t=0,e=0,n=0,r=gt.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const r=y.clamp,o=t.elements,c=o[0],l=o[4],h=o[8],d=o[1],f=o[5],m=o[9],v=o[2],x=o[6],_=o[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-m,_),this._z=Math.atan2(-l,c)):(this._x=Math.atan2(x,f),this._z=0);break;case"YXZ":this._x=Math.asin(-r(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(h,_),this._z=Math.atan2(d,f)):(this._y=Math.atan2(-v,c),this._z=0);break;case"ZXY":this._x=Math.asin(r(x,-1,1)),Math.abs(x)<.9999999?(this._y=Math.atan2(-v,_),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(d,c));break;case"ZYX":this._y=Math.asin(-r(v,-1,1)),Math.abs(v)<.9999999?(this._x=Math.atan2(x,_),this._z=Math.atan2(d,c)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-m,f),this._y=Math.atan2(-v,c)):(this._x=0,this._y=Math.atan2(h,_));break;case"XZY":this._z=Math.asin(-r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(x,f),this._y=Math.atan2(h,c)):(this._x=Math.atan2(-m,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(q,t,e){return vt.makeRotationFromQuaternion(q),this.setFromRotationMatrix(vt,t,e)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return yt.setFromEuler(this),this.setFromQuaternion(yt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new C(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}gt.DefaultOrder="XYZ",gt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const vt=new at,yt=new P;class xt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let _t=0;const bt=new C,wt=new P,Mt=new at,St=new C,Tt=new C,Et=new C,At=new P,Lt=new C(1,0,0),Rt=new C(0,1,0),Pt=new C(0,0,1),Ct={type:"added"},Nt={type:"removed"};function It(){Object.defineProperty(this,"id",{value:_t++}),this.uuid=y.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=It.DefaultUp.clone();const t=new C,e=new gt,n=new P,r=new C(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new at},normalMatrix:{value:new _}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=It.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new xt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}It.DefaultUp=new C(0,1,0),It.DefaultMatrixAutoUpdate=!0,It.prototype=Object.assign(Object.create(f.prototype),{constructor:It,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(q){return this.quaternion.premultiply(q),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},rotateOnAxis:function(t,e){return wt.setFromAxisAngle(t,e),this.quaternion.multiply(wt),this},rotateOnWorldAxis:function(t,e){return wt.setFromAxisAngle(t,e),this.quaternion.premultiply(wt),this},rotateX:function(t){return this.rotateOnAxis(Lt,t)},rotateY:function(t){return this.rotateOnAxis(Rt,t)},rotateZ:function(t){return this.rotateOnAxis(Pt,t)},translateOnAxis:function(t,e){return bt.copy(t).applyQuaternion(this.quaternion),this.position.add(bt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Lt,t)},translateY:function(t){return this.translateOnAxis(Rt,t)},translateZ:function(t){return this.translateOnAxis(Pt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Mt.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?St.copy(t):St.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Tt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Mt.lookAt(Tt,St,this.up):Mt.lookAt(St,Tt,this.up),this.quaternion.setFromRotationMatrix(Mt),r&&(Mt.extractRotation(r.matrixWorld),wt.setFromRotationMatrix(Mt),this.quaternion.premultiply(wt.invert()))},add:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(Ct)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)},remove:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(object);return-1!==t&&(object.parent=null,this.children.splice(t,1),object.dispatchEvent(Nt)),this},clear:function(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null,object.dispatchEvent(Nt)}return this.children.length=0,this},attach:function(object){return this.updateWorldMatrix(!0,!1),Mt.copy(this.matrixWorld).invert(),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),Mt.multiply(object.parent.matrixWorld)),object.applyMatrix4(Mt),object.updateWorldMatrix(!1,!1),this.add(object),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const object=this.children[i].getObjectByProperty(t,e);if(void 0!==object)return object}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new C),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new P),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Tt,t,Et),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new C),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Tt,At,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new C),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let i=0,e=t.length;i<e;i++)t[i].updateWorldMatrix(!1,!0)}},toJSON:function(meta){const t=void 0===meta||"string"==typeof meta,output={};t&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const object={};function e(t,element){return void 0===t[element.uuid]&&(t[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){object.geometry=e(meta.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let i=0,t=n.length;i<t;i++){const t=n[i];e(meta.shapes,t)}else e(meta.shapes,n)}}if(this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(e(meta.materials,this.material[i]));object.material=t}else object.material=e(meta.materials,this.material);if(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const t=this.animations[i];object.animations.push(e(meta.animations,t))}}if(t){const t=n(meta.geometries),e=n(meta.materials),r=n(meta.textures),o=n(meta.images),c=n(meta.shapes),l=n(meta.skeletons),h=n(meta.animations);t.length>0&&(output.geometries=t),e.length>0&&(output.materials=e),r.length>0&&(output.textures=r),o.length>0&&(output.images=o),c.length>0&&(output.shapes=c),l.length>0&&(output.skeletons=l),h.length>0&&(output.animations=h)}return output.object=object,output;function n(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(source,t=!0){if(this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.rotation.order=source.rotation.order,this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===t)for(let i=0;i<source.children.length;i++){const t=source.children[i];this.add(t.clone())}return this}});const Dt=new C,Ot=new C,zt=new _;class Ut{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new C(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(a,b,t){const e=Dt.subVectors(t,b).cross(Ot.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(e,a),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new C),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(line,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new C);const e=line.delta(Dt),n=this.normal.dot(e);if(0===n)return 0===this.distanceToPoint(line.start)?t.copy(line.start):void 0;const r=-(line.start.dot(this.normal)+this.constant)/n;return r<0||r>1?void 0:t.copy(e).multiplyScalar(r).add(line.start)}intersectsLine(line){const t=this.distanceToPoint(line.start),e=this.distanceToPoint(line.end);return t<0&&e>0||e<0&&t>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new C),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||zt.getNormalMatrix(t),r=this.coplanarPoint(Dt).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const Bt=new C,Ft=new C,Ht=new C,Gt=new C,kt=new C,Vt=new C,Wt=new C,jt=new C,qt=new C,Xt=new C;class Yt{constructor(a,b,t){this.a=void 0!==a?a:new C,this.b=void 0!==b?b:new C,this.c=void 0!==t?t:new C}static getNormal(a,b,t,e){void 0===e&&(console.warn("THREE.Triangle: .getNormal() target is now required"),e=new C),e.subVectors(t,b),Bt.subVectors(a,b),e.cross(Bt);const n=e.lengthSq();return n>0?e.multiplyScalar(1/Math.sqrt(n)):e.set(0,0,0)}static getBarycoord(t,a,b,e,n){Bt.subVectors(e,a),Ft.subVectors(b,a),Ht.subVectors(t,a);const r=Bt.dot(Bt),o=Bt.dot(Ft),c=Bt.dot(Ht),l=Ft.dot(Ft),h=Ft.dot(Ht),d=r*l-o*o;if(void 0===n&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),n=new C),0===d)return n.set(-2,-1,-1);const f=1/d,u=(l*c-o*h)*f,m=(r*h-o*c)*f;return n.set(1-u-m,m,u)}static containsPoint(t,a,b,e){return this.getBarycoord(t,a,b,e,Gt),Gt.x>=0&&Gt.y>=0&&Gt.x+Gt.y<=1}static getUV(t,e,n,r,o,c,l,h){return this.getBarycoord(t,e,n,r,Gt),h.set(0,0),h.addScaledVector(o,Gt.x),h.addScaledVector(c,Gt.y),h.addScaledVector(l,Gt.z),h}static isFrontFacing(a,b,t,e){return Bt.subVectors(t,b),Ft.subVectors(a,b),Bt.cross(Ft).dot(e)<0}set(a,b,t){return this.a.copy(a),this.b.copy(b),this.c.copy(t),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Bt.subVectors(this.c,this.b),Ft.subVectors(this.a,this.b),.5*Bt.cross(Ft).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new C),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Yt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Ut),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Yt.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,o){return Yt.getUV(t,this.a,this.b,this.c,e,n,r,o)}containsPoint(t){return Yt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Yt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(p,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new C);const a=this.a,b=this.b,e=this.c;let n,r;kt.subVectors(b,a),Vt.subVectors(e,a),jt.subVectors(p,a);const o=kt.dot(jt),c=Vt.dot(jt);if(o<=0&&c<=0)return t.copy(a);qt.subVectors(p,b);const l=kt.dot(qt),h=Vt.dot(qt);if(l>=0&&h<=l)return t.copy(b);const d=o*h-l*c;if(d<=0&&o>=0&&l<=0)return n=o/(o-l),t.copy(a).addScaledVector(kt,n);Xt.subVectors(p,e);const f=kt.dot(Xt),m=Vt.dot(Xt);if(m>=0&&f<=m)return t.copy(e);const v=f*c-o*m;if(v<=0&&c>=0&&m<=0)return r=c/(c-m),t.copy(a).addScaledVector(Vt,r);const y=l*m-f*h;if(y<=0&&h-l>=0&&f-m>=0)return Wt.subVectors(e,b),r=(h-l)/(h-l+(f-m)),t.copy(b).addScaledVector(Wt,r);const x=1/(y+v+d);return n=v*x,r=d*x,t.copy(a).addScaledVector(kt,n).addScaledVector(Vt,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Zt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Jt={h:0,s:0,l:0},Qt={h:0,s:0,l:0};function Kt(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+6*(q-p)*(2/3-t):p}function $t(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function te(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class ee{constructor(t,g,b){return Object.defineProperty(this,"isColor",{value:!0}),void 0===g&&void 0===b?this.set(t):this.setRGB(t,g,b)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,g,b){return this.r=t,this.g=g,this.b=b,this}setHSL(t,s,e){if(t=y.euclideanModulo(t,1),s=y.clamp(s,0,1),e=y.clamp(e,0,1),0===s)this.r=this.g=this.b=e;else{const p=e<=.5?e*(1+s):e+s-e*s,q=2*e-p;this.r=Kt(q,p,t+1/3),this.g=Kt(q,p,t),this.b=Kt(q,p,t-1/3)}return this}setStyle(style){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(style)){let n;const r=e[1],o=e[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){const e=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,r=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(e,s,r)}}}else if(e=/^\#([A-Fa-f0-9]+)$/.exec(style)){const t=e[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return style&&style.length>0?this.setColorName(style):this}setColorName(style){const t=Zt[style];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+style),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=$t(t.r),this.g=$t(t.g),this.b=$t(t.b),this}copyLinearToSRGB(t){return this.r=te(t.r),this.g=te(t.g),this.b=te(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,g=this.g,b=this.b,n=Math.max(e,g,b),r=Math.min(e,g,b);let o,c;const l=(r+n)/2;if(r===n)o=0,c=0;else{const t=n-r;switch(c=l<=.5?t/(n+r):t/(2-n-r),n){case e:o=(g-b)/t+(g<b?6:0);break;case g:o=(b-e)/t+2;break;case b:o=(e-g)/t+4}o/=6}return t.h=o,t.s=c,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,e){return this.getHSL(Jt),Jt.h+=t,Jt.s+=s,Jt.l+=e,this.setHSL(Jt.h,Jt.s,Jt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(s){return this.r+=s,this.g+=s,this.b+=s,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(s){return this.r*=s,this.g*=s,this.b*=s,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpHSL(t,e){this.getHSL(Jt),t.getHSL(Qt);const n=y.lerp(Jt.h,Qt.h,e),s=y.lerp(Jt.s,Qt.s,e),r=y.lerp(Jt.l,Qt.l,e);return this.setHSL(n,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ee.NAMES=Zt,ee.prototype.r=1,ee.prototype.g=1,ee.prototype.b=1;class ne{constructor(a,b,t,e,n,r=0){this.a=a,this.b=b,this.c=t,this.normal=e&&e.isVector3?e:new C,this.vertexNormals=Array.isArray(e)?e:[],this.color=n&&n.isColor?n:new ee,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=r}clone(){return(new this.constructor).copy(this)}copy(source){this.a=source.a,this.b=source.b,this.c=source.c,this.normal.copy(source.normal),this.color.copy(source.color),this.materialIndex=source.materialIndex;for(let i=0,t=source.vertexNormals.length;i<t;i++)this.vertexNormals[i]=source.vertexNormals[i].clone();for(let i=0,t=source.vertexColors.length;i<t;i++)this.vertexColors[i]=source.vertexColors[i].clone();return this}}let ie=0;function re(){Object.defineProperty(this,"id",{value:ie++}),this.uuid=y.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function oe(t){re.call(this),this.type="MeshBasicMaterial",this.color=new ee(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}re.prototype=Object.assign(Object.create(f.prototype),{constructor:re,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(meta){const t=void 0===meta||"string"==typeof meta;t&&(meta={textures:{},images:{}});const data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function e(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),this.color&&this.color.isColor&&(data.color=this.color.getHex()),void 0!==this.roughness&&(data.roughness=this.roughness),void 0!==this.metalness&&(data.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(data.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex()),void 0!==this.shininess&&(data.shininess=this.shininess),void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid),this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid),this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid),this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid),this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid),this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid),this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,data.reflectivity=this.reflectivity,data.refractionRatio=this.refractionRatio,void 0!==this.combine&&(data.combine=this.combine),void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid),void 0!==this.size&&(data.size=this.size),void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(data.blending=this.blending),!0===this.flatShading&&(data.flatShading=this.flatShading),0!==this.side&&(data.side=this.side),this.vertexColors&&(data.vertexColors=!0),this.opacity<1&&(data.opacity=this.opacity),!0===this.transparent&&(data.transparent=this.transparent),data.depthFunc=this.depthFunc,data.depthTest=this.depthTest,data.depthWrite=this.depthWrite,data.stencilWrite=this.stencilWrite,data.stencilWriteMask=this.stencilWriteMask,data.stencilFunc=this.stencilFunc,data.stencilRef=this.stencilRef,data.stencilFuncMask=this.stencilFuncMask,data.stencilFail=this.stencilFail,data.stencilZFail=this.stencilZFail,data.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(data.rotation=this.rotation),!0===this.polygonOffset&&(data.polygonOffset=!0),0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth),void 0!==this.dashSize&&(data.dashSize=this.dashSize),void 0!==this.gapSize&&(data.gapSize=this.gapSize),void 0!==this.scale&&(data.scale=this.scale),!0===this.dithering&&(data.dithering=!0),this.alphaTest>0&&(data.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(data.wireframe=this.wireframe),this.wireframeLinewidth>1&&(data.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(data.morphTargets=!0),!0===this.morphNormals&&(data.morphNormals=!0),!0===this.skinning&&(data.skinning=!0),!1===this.visible&&(data.visible=!1),!1===this.toneMapped&&(data.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(data.userData=this.userData),t){const t=e(meta.textures),n=e(meta.images);t.length>0&&(data.textures=t),n.length>0&&(data.images=n)}return data},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name,this.fog=source.fog,this.blending=source.blending,this.side=source.side,this.flatShading=source.flatShading,this.vertexColors=source.vertexColors,this.opacity=source.opacity,this.transparent=source.transparent,this.blendSrc=source.blendSrc,this.blendDst=source.blendDst,this.blendEquation=source.blendEquation,this.blendSrcAlpha=source.blendSrcAlpha,this.blendDstAlpha=source.blendDstAlpha,this.blendEquationAlpha=source.blendEquationAlpha,this.depthFunc=source.depthFunc,this.depthTest=source.depthTest,this.depthWrite=source.depthWrite,this.stencilWriteMask=source.stencilWriteMask,this.stencilFunc=source.stencilFunc,this.stencilRef=source.stencilRef,this.stencilFuncMask=source.stencilFuncMask,this.stencilFail=source.stencilFail,this.stencilZFail=source.stencilZFail,this.stencilZPass=source.stencilZPass,this.stencilWrite=source.stencilWrite;const t=source.clippingPlanes;let e=null;if(null!==t){const n=t.length;e=new Array(n);for(let i=0;i!==n;++i)e[i]=t[i].clone()}return this.clippingPlanes=e,this.clipIntersection=source.clipIntersection,this.clipShadows=source.clipShadows,this.shadowSide=source.shadowSide,this.colorWrite=source.colorWrite,this.precision=source.precision,this.polygonOffset=source.polygonOffset,this.polygonOffsetFactor=source.polygonOffsetFactor,this.polygonOffsetUnits=source.polygonOffsetUnits,this.dithering=source.dithering,this.alphaTest=source.alphaTest,this.premultipliedAlpha=source.premultipliedAlpha,this.visible=source.visible,this.toneMapped=source.toneMapped,this.userData=JSON.parse(JSON.stringify(source.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(re.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),oe.prototype=Object.create(re.prototype),oe.prototype.constructor=oe,oe.prototype.isMeshBasicMaterial=!0,oe.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this};const se=new C,ae=new x;function ce(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function le(t,e,n){ce.call(this,new Int8Array(t),e,n)}function he(t,e,n){ce.call(this,new Uint8Array(t),e,n)}function ue(t,e,n){ce.call(this,new Uint8ClampedArray(t),e,n)}function de(t,e,n){ce.call(this,new Int16Array(t),e,n)}function pe(t,e,n){ce.call(this,new Uint16Array(t),e,n)}function fe(t,e,n){ce.call(this,new Int32Array(t),e,n)}function me(t,e,n){ce.call(this,new Uint32Array(t),e,n)}function ge(t,e,n){ce.call(this,new Uint16Array(t),e,n)}function ve(t,e,n){ce.call(this,new Float32Array(t),e,n)}function ye(t,e,n){ce.call(this,new Float64Array(t),e,n)}Object.defineProperty(ce.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ce.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(source){return this.name=source.name,this.array=new source.array.constructor(source.array),this.itemSize=source.itemSize,this.count=source.count,this.normalized=source.normalized,this.usage=source.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new ee),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new x),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new C),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new A),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let i=0,e=this.count;i<e;i++)ae.fromBufferAttribute(this,i),ae.applyMatrix3(t),this.setXY(i,ae.x,ae.y);else if(3===this.itemSize)for(let i=0,e=this.count;i<e;i++)se.fromBufferAttribute(this,i),se.applyMatrix3(t),this.setXYZ(i,se.x,se.y,se.z);return this},applyMatrix4:function(t){for(let i=0,e=this.count;i<e;i++)se.x=this.getX(i),se.y=this.getY(i),se.z=this.getZ(i),se.applyMatrix4(t),this.setXYZ(i,se.x,se.y,se.z);return this},applyNormalMatrix:function(t){for(let i=0,e=this.count;i<e;i++)se.x=this.getX(i),se.y=this.getY(i),se.z=this.getZ(i),se.applyNormalMatrix(t),this.setXYZ(i,se.x,se.y,se.z);return this},transformDirection:function(t){for(let i=0,e=this.count;i<e;i++)se.x=this.getX(i),se.y=this.getY(i),se.z=this.getZ(i),se.transformDirection(t),this.setXYZ(i,se.x,se.y,se.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this},setXYZW:function(t,e,n,r,o){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=o,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),le.prototype=Object.create(ce.prototype),le.prototype.constructor=le,he.prototype=Object.create(ce.prototype),he.prototype.constructor=he,ue.prototype=Object.create(ce.prototype),ue.prototype.constructor=ue,de.prototype=Object.create(ce.prototype),de.prototype.constructor=de,pe.prototype=Object.create(ce.prototype),pe.prototype.constructor=pe,fe.prototype=Object.create(ce.prototype),fe.prototype.constructor=fe,me.prototype=Object.create(ce.prototype),me.prototype.constructor=me,ge.prototype=Object.create(ce.prototype),ge.prototype.constructor=ge,ge.prototype.isFloat16BufferAttribute=!0,ve.prototype=Object.create(ce.prototype),ve.prototype.constructor=ve,ye.prototype=Object.create(ce.prototype),ye.prototype.constructor=ye;class xe{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const e=[];let n,i,r=void 0;const o=t.faces;for(i=0;i<o.length;i++){const t=o[i];t.materialIndex!==r&&(r=t.materialIndex,void 0!==n&&(n.count=3*i-n.start,e.push(n)),n={start:3*i,materialIndex:r})}void 0!==n&&(n.count=3*i-n.start,e.push(n)),this.groups=e}fromGeometry(t){const e=t.faces,n=t.vertices,r=t.faceVertexUvs,o=r[0]&&r[0].length>0,c=r[1]&&r[1].length>0,l=t.morphTargets,h=l.length;let d;if(h>0){d=[];for(let i=0;i<h;i++)d[i]={name:l[i].name,data:[]};this.morphTargets.position=d}const f=t.morphNormals,m=f.length;let v;if(m>0){v=[];for(let i=0;i<m;i++)v[i]={name:f[i].name,data:[]};this.morphTargets.normal=v}const y=t.skinIndices,_=t.skinWeights,w=y.length===n.length,M=_.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let i=0;i<e.length;i++){const t=e[i];this.vertices.push(n[t.a],n[t.b],n[t.c]);const S=t.vertexNormals;if(3===S.length)this.normals.push(S[0],S[1],S[2]);else{const e=t.normal;this.normals.push(e,e,e)}const T=t.vertexColors;if(3===T.length)this.colors.push(T[0],T[1],T[2]);else{const e=t.color;this.colors.push(e,e,e)}if(!0===o){const t=r[0][i];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",i),this.uvs.push(new x,new x,new x))}if(!0===c){const t=r[1][i];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",i),this.uvs2.push(new x,new x,new x))}for(let e=0;e<h;e++){const n=l[e].vertices;d[e].data.push(n[t.a],n[t.b],n[t.c])}for(let t=0;t<m;t++){const e=f[t].vertexNormals[i];v[t].data.push(e.a,e.b,e.c)}w&&this.skinIndices.push(y[t.a],y[t.b],y[t.c]),M&&this.skinWeights.push(_[t.a],_[t.b],_[t.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}function _e(t){if(0===t.length)return-1/0;let e=t[0];for(let i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}const be={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function we(t,e){return new be[t](e)}let Me=1;const Se=new at,Te=new It,Ee=new C,Ae=new D,Le=new D,Re=new C;function Pe(){Object.defineProperty(this,"id",{value:Me+=2}),this.uuid=y.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Pe.prototype=Object.assign(Object.create(f.prototype),{constructor:Pe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(_e(t)>65535?me:pe)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new _).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Se.makeRotationX(t),this.applyMatrix4(Se),this},rotateY:function(t){return Se.makeRotationY(t),this.applyMatrix4(Se),this},rotateZ:function(t){return Se.makeRotationZ(t),this.applyMatrix4(Se),this},translate:function(t,e,n){return Se.makeTranslation(t,e,n),this.applyMatrix4(Se),this},scale:function(t,e,n){return Se.makeScale(t,e,n),this.applyMatrix4(Se),this},lookAt:function(t){return Te.lookAt(t),Te.updateMatrix(),this.applyMatrix4(Te.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ee).negate(),this.translate(Ee.x,Ee.y,Ee.z),this},setFromObject:function(object){const t=object.geometry;if(object.isPoints||object.isLine){const e=new ve(3*t.vertices.length,3),n=new ve(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",n.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new ve(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else object.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ve(e,3)),this},updateFromObject:function(object){let t=object.geometry;if(object.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(object.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new xe).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new ce(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new ce(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new ce(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new ce(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new ce(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const e in t.morphTargets){const n=[],r=t.morphTargets[e];for(let i=0,t=r.length;i<t;i++){const t=r[i],e=new ve(3*t.data.length,3);e.name=t.name,n.push(e.copyVector3sArray(t.data))}this.morphAttributes[e]=n}if(t.skinIndices.length>0){const e=new ve(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new ve(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new D);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];Ae.setFromBufferAttribute(t),this.morphTargetsRelative?(Re.addVectors(this.boundingBox.min,Ae.min),this.boundingBox.expandByPoint(Re),Re.addVectors(this.boundingBox.max,Ae.max),this.boundingBox.expandByPoint(Re)):(this.boundingBox.expandByPoint(Ae.min),this.boundingBox.expandByPoint(Ae.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Q);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new C,1/0);if(t){const n=this.boundingSphere.center;if(Ae.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];Le.setFromBufferAttribute(t),this.morphTargetsRelative?(Re.addVectors(Ae.min,Le.min),Ae.expandByPoint(Re),Re.addVectors(Ae.max,Le.max),Ae.expandByPoint(Re)):(Ae.expandByPoint(Le.min),Ae.expandByPoint(Le.max))}Ae.getCenter(n);let r=0;for(let i=0,e=t.count;i<e;i++)Re.fromBufferAttribute(t,i),r=Math.max(r,n.distanceToSquared(Re));if(e)for(let i=0,o=e.length;i<o;i++){const o=e[i],c=this.morphTargetsRelative;for(let e=0,l=o.count;e<l;e++)Re.fromBufferAttribute(o,e),c&&(Ee.fromBufferAttribute(t,e),Re.add(Ee)),r=Math.max(r,n.distanceToSquared(Re))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new ce(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let i=0,t=n.count;i<t;i++)n.setXYZ(i,0,0,0);const r=new C,o=new C,c=new C,l=new C,h=new C,d=new C,f=new C,m=new C;if(t)for(let i=0,v=t.count;i<v;i+=3){const v=t.getX(i+0),y=t.getX(i+1),x=t.getX(i+2);r.fromBufferAttribute(e,v),o.fromBufferAttribute(e,y),c.fromBufferAttribute(e,x),f.subVectors(c,o),m.subVectors(r,o),f.cross(m),l.fromBufferAttribute(n,v),h.fromBufferAttribute(n,y),d.fromBufferAttribute(n,x),l.add(f),h.add(f),d.add(f),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(y,h.x,h.y,h.z),n.setXYZ(x,d.x,d.y,d.z)}else for(let i=0,t=e.count;i<t;i+=3)r.fromBufferAttribute(e,i+0),o.fromBufferAttribute(e,i+1),c.fromBufferAttribute(e,i+2),f.subVectors(c,o),m.subVectors(r,o),f.cross(m),n.setXYZ(i+0,f.x,f.y,f.z),n.setXYZ(i+1,f.x,f.y,f.z),n.setXYZ(i+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const o=n[r].array,c=t.attributes[r],l=c.array,h=c.itemSize*e,d=Math.min(l.length,o.length-h);for(let i=0,t=h;i<d;i++,t++)o[t]=l[i]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)Re.fromBufferAttribute(t,i),Re.normalize(),t.setXYZ(i,Re.x,Re.y,Re.z)},toNonIndexed:function(){function t(t,e){const n=t.array,r=t.itemSize,o=t.normalized,c=new n.constructor(e.length*r);let l=0,h=0;for(let i=0,t=e.length;i<t;i++){l=e[i]*r;for(let t=0;t<r;t++)c[h++]=n[l++]}return new ce(c,r,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new Pe,n=this.index.array,r=this.attributes;for(const o in r){const c=t(r[o],n);e.setAttribute(o,c)}const o=this.morphAttributes;for(const r in o){const c=[],l=o[r];for(let i=0,e=l.length;i<e;i++){const e=t(l[i],n);c.push(e)}e.morphAttributes[r]=c}e.morphTargetsRelative=this.morphTargetsRelative;const c=this.groups;for(let i=0,t=c.length;i<t;i++){const t=c[i];e.addGroup(t.start,t.count,t.materialIndex)}return e},toJSON:function(){const data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),Object.keys(this.userData).length>0&&(data.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const e in t)void 0!==t[e]&&(data[e]=t[e]);return data}data.data={attributes:{}};const t=this.index;null!==t&&(data.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const e=this.attributes;for(const t in e){const n=e[t],r=n.toJSON(data.data);""!==n.name&&(r.name=n.name),data.data.attributes[t]=r}const n={};let r=!1;for(const t in this.morphAttributes){const e=this.morphAttributes[t],o=[];for(let i=0,t=e.length;i<t;i++){const t=e[i],n=t.toJSON(data.data);""!==t.name&&(n.name=t.name),o.push(n)}o.length>0&&(n[t]=o,r=!0)}r&&(data.data.morphAttributes=n,data.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(data.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return null!==c&&(data.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),data},clone:function(){return(new Pe).copy(this)},copy:function(source){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const data={};this.name=source.name;const t=source.index;null!==t&&this.setIndex(t.clone(data));const e=source.attributes;for(const t in e){const n=e[t];this.setAttribute(t,n.clone(data))}const n=source.morphAttributes;for(const t in n){const e=[],r=n[t];for(let i=0,t=r.length;i<t;i++)e.push(r[i].clone(data));this.morphAttributes[t]=e}this.morphTargetsRelative=source.morphTargetsRelative;const r=source.groups;for(let i=0,t=r.length;i<t;i++){const t=r[i];this.addGroup(t.start,t.count,t.materialIndex)}const o=source.boundingBox;null!==o&&(this.boundingBox=o.clone());const c=source.boundingSphere;return null!==c&&(this.boundingSphere=c.clone()),this.drawRange.start=source.drawRange.start,this.drawRange.count=source.drawRange.count,this.userData=source.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ce=new at,Ne=new st,Ie=new Q,De=new C,Oe=new C,ze=new C,Ue=new C,Be=new C,Fe=new C,He=new C,Ge=new C,ke=new C,Ve=new x,We=new x,je=new x,qe=new C,Xe=new C;function Ye(t,e){It.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new Pe,this.material=void 0!==e?e:new oe,this.updateMorphTargets()}function Ze(object,t,e,n,r,o,l,h){let d;if(d=1===t.side?n.intersectTriangle(l,o,r,!0,h):n.intersectTriangle(r,o,l,t.side!==c,h),null===d)return null;Xe.copy(h),Xe.applyMatrix4(object.matrixWorld);const f=e.ray.origin.distanceTo(Xe);return f<e.near||f>e.far?null:{distance:f,point:Xe.clone(),object:object}}function Je(object,t,e,n,r,o,c,l,h,a,b,d){De.fromBufferAttribute(r,a),Oe.fromBufferAttribute(r,b),ze.fromBufferAttribute(r,d);const f=object.morphTargetInfluences;if(t.morphTargets&&o&&f){He.set(0,0,0),Ge.set(0,0,0),ke.set(0,0,0);for(let i=0,t=o.length;i<t;i++){const t=f[i],e=o[i];0!==t&&(Ue.fromBufferAttribute(e,a),Be.fromBufferAttribute(e,b),Fe.fromBufferAttribute(e,d),c?(He.addScaledVector(Ue,t),Ge.addScaledVector(Be,t),ke.addScaledVector(Fe,t)):(He.addScaledVector(Ue.sub(De),t),Ge.addScaledVector(Be.sub(Oe),t),ke.addScaledVector(Fe.sub(ze),t)))}De.add(He),Oe.add(Ge),ze.add(ke)}object.isSkinnedMesh&&(object.boneTransform(a,De),object.boneTransform(b,Oe),object.boneTransform(d,ze));const m=Ze(object,t,e,n,De,Oe,ze,qe);if(m){l&&(Ve.fromBufferAttribute(l,a),We.fromBufferAttribute(l,b),je.fromBufferAttribute(l,d),m.uv=Yt.getUV(qe,De,Oe,ze,Ve,We,je,new x)),h&&(Ve.fromBufferAttribute(h,a),We.fromBufferAttribute(h,b),je.fromBufferAttribute(h,d),m.uv2=Yt.getUV(qe,De,Oe,ze,Ve,We,je,new x));const t=new ne(a,b,d);Yt.getNormal(De,Oe,ze,t.normal),m.face=t}return m}Ye.prototype=Object.assign(Object.create(It.prototype),{constructor:Ye,isMesh:!0,copy:function(source){return It.prototype.copy.call(this,source),void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice()),void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary)),this.material=source.material,this.geometry=source.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,r=this.material,o=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ie.copy(n.boundingSphere),Ie.applyMatrix4(o),!1===t.ray.intersectsSphere(Ie))return;if(Ce.copy(o).invert(),Ne.copy(t.ray).applyMatrix4(Ce),null!==n.boundingBox&&!1===Ne.intersectsBox(n.boundingBox))return;let c;if(n.isBufferGeometry){const o=n.index,l=n.attributes.position,h=n.morphAttributes.position,d=n.morphTargetsRelative,f=n.attributes.uv,m=n.attributes.uv2,v=n.groups,y=n.drawRange;if(null!==o)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],x=r[n.materialIndex];for(let r=Math.max(n.start,y.start),v=Math.min(n.start+n.count,y.start+y.count);r<v;r+=3){const a=o.getX(r),b=o.getX(r+1),v=o.getX(r+2);c=Je(this,x,t,Ne,l,h,d,f,m,a,b,v),c&&(c.faceIndex=Math.floor(r/3),c.face.materialIndex=n.materialIndex,e.push(c))}}else{for(let i=Math.max(0,y.start),n=Math.min(o.count,y.start+y.count);i<n;i+=3){const a=o.getX(i),b=o.getX(i+1),n=o.getX(i+2);c=Je(this,r,t,Ne,l,h,d,f,m,a,b,n),c&&(c.faceIndex=Math.floor(i/3),e.push(c))}}else if(void 0!==l)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],o=r[n.materialIndex];for(let r=Math.max(n.start,y.start),v=Math.min(n.start+n.count,y.start+y.count);r<v;r+=3){c=Je(this,o,t,Ne,l,h,d,f,m,r,r+1,r+2),c&&(c.faceIndex=Math.floor(r/3),c.face.materialIndex=n.materialIndex,e.push(c))}}else{for(let i=Math.max(0,y.start),n=Math.min(l.count,y.start+y.count);i<n;i+=3){c=Je(this,r,t,Ne,l,h,d,f,m,i,i+1,i+2),c&&(c.faceIndex=Math.floor(i/3),e.push(c))}}}else if(n.isGeometry){const o=Array.isArray(r),l=n.vertices,h=n.faces;let d;const f=n.faceVertexUvs[0];f.length>0&&(d=f);for(let n=0,f=h.length;n<f;n++){const f=h[n],m=o?r[f.materialIndex]:r;if(void 0===m)continue;const v=l[f.a],y=l[f.b],_=l[f.c];if(c=Ze(this,m,t,Ne,v,y,_,qe),c){if(d&&d[n]){const t=d[n];Ve.copy(t[0]),We.copy(t[1]),je.copy(t[2]),c.uv=Yt.getUV(qe,v,y,_,Ve,We,je,new x)}c.face=f,c.faceIndex=n,e.push(c)}}}}});class Qe extends Pe{constructor(t=1,e=1,n=1,r=1,o=1,c=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:o,depthSegments:c};const l=this;r=Math.floor(r),o=Math.floor(o),c=Math.floor(c);const h=[],d=[],f=[],m=[];let v=0,y=0;function x(u,t,e,n,r,o,c,x,_,w,M){const S=o/_,T=c/w,E=o/2,A=c/2,L=x/2,R=_+1,P=w+1;let N=0,I=0;const D=new C;for(let o=0;o<P;o++){const c=o*T-A;for(let l=0;l<R;l++){const h=l*S-E;D[u]=h*n,D[t]=c*r,D[e]=L,d.push(D.x,D.y,D.z),D[u]=0,D[t]=0,D[e]=x>0?1:-1,f.push(D.x,D.y,D.z),m.push(l/_),m.push(1-o/w),N+=1}}for(let t=0;t<w;t++)for(let e=0;e<_;e++){const a=v+e+R*t,b=v+e+R*(t+1),n=v+(e+1)+R*(t+1),r=v+(e+1)+R*t;h.push(a,b,r),h.push(b,n,r),I+=6}l.addGroup(y,I,M),y+=I,v+=N}x("z","y","x",-1,-1,n,e,t,c,o,0),x("z","y","x",1,-1,n,e,-t,c,o,1),x("x","z","y",1,1,t,n,e,r,c,2),x("x","z","y",1,-1,t,n,-e,r,c,3),x("x","y","z",1,-1,t,e,n,r,o,4),x("x","y","z",-1,-1,t,e,-n,r,o,5),this.setIndex(h),this.setAttribute("position",new ve(d,3)),this.setAttribute("normal",new ve(f,3)),this.setAttribute("uv",new ve(m,2))}}function Ke(t){const e={};for(const u in t){e[u]={};for(const p in t[u]){const n=t[u][p];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture)?e[u][p]=n.clone():Array.isArray(n)?e[u][p]=n.slice():e[u][p]=n}}return e}function $e(t){const e={};for(let u=0;u<t.length;u++){const n=Ke(t[u]);for(const p in n)e[p]=n[p]}return e}const tn={clone:Ke,merge:$e};function en(t){re.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function nn(){It.call(this),this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at}function rn(t=50,e=1,n=.1,r=2e3){nn.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}en.prototype=Object.create(re.prototype),en.prototype.constructor=en,en.prototype.isShaderMaterial=!0,en.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.fragmentShader=source.fragmentShader,this.vertexShader=source.vertexShader,this.uniforms=Ke(source.uniforms),this.defines=Object.assign({},source.defines),this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.lights=source.lights,this.clipping=source.clipping,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this.extensions=Object.assign({},source.extensions),this.glslVersion=source.glslVersion,this},en.prototype.toJSON=function(meta){const data=re.prototype.toJSON.call(this,meta);data.glslVersion=this.glslVersion,data.uniforms={};for(const t in this.uniforms){const e=this.uniforms[t].value;e&&e.isTexture?data.uniforms[t]={type:"t",value:e.toJSON(meta).uuid}:e&&e.isColor?data.uniforms[t]={type:"c",value:e.getHex()}:e&&e.isVector2?data.uniforms[t]={type:"v2",value:e.toArray()}:e&&e.isVector3?data.uniforms[t]={type:"v3",value:e.toArray()}:e&&e.isVector4?data.uniforms[t]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?data.uniforms[t]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?data.uniforms[t]={type:"m4",value:e.toArray()}:data.uniforms[t]={value:e}}Object.keys(this.defines).length>0&&(data.defines=this.defines),data.vertexShader=this.vertexShader,data.fragmentShader=this.fragmentShader;const t={};for(const e in this.extensions)!0===this.extensions[e]&&(t[e]=!0);return Object.keys(t).length>0&&(data.extensions=t),data},nn.prototype=Object.assign(Object.create(It.prototype),{constructor:nn,isCamera:!0,copy:function(source,t){return It.prototype.copy.call(this,source,t),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new C),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){It.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){It.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),rn.prototype=Object.assign(Object.create(nn.prototype),{constructor:rn,isPerspectiveCamera:!0,copy:function(source,t){return nn.prototype.copy.call(this,source,t),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*y.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*y.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*y.RAD2DEG*Math.atan(Math.tan(.5*y.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,r,o,c){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=c,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*y.DEG2RAD*this.fov)/this.zoom,n=2*e,r=this.aspect*n,o=-.5*r;const view=this.view;if(null!==this.view&&this.view.enabled){const t=view.fullWidth,c=view.fullHeight;o+=view.offsetX*r/t,e-=view.offsetY*n/c,r*=view.width/t,n*=view.height/c}const c=this.filmOffset;0!==c&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(meta){const data=It.prototype.toJSON.call(this,meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}});function on(t,e,n){if(It.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new rn(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new C(1,0,0)),this.add(r);const o=new rn(90,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new C(-1,0,0)),this.add(o);const c=new rn(90,1,t,e);c.layers=this.layers,c.up.set(0,0,1),c.lookAt(new C(0,1,0)),this.add(c);const l=new rn(90,1,t,e);l.layers=this.layers,l.up.set(0,0,-1),l.lookAt(new C(0,-1,0)),this.add(l);const h=new rn(90,1,t,e);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new C(0,0,1)),this.add(h);const d=new rn(90,1,t,e);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new C(0,0,-1)),this.add(d),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const f=t.xr.enabled,m=t.getRenderTarget();t.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,o),t.setRenderTarget(n,2),t.render(e,c),t.setRenderTarget(n,3),t.render(e,l),t.setRenderTarget(n,4),t.render(e,h),n.texture.generateMipmaps=v,t.setRenderTarget(n,5),t.render(e,d),t.setRenderTarget(m),t.xr.enabled=f}}function sn(t,e,n,r,o,c,l,h,d,f){t=void 0!==t?t:[],e=void 0!==e?e:301,l=void 0!==l?l:1022,T.call(this,t,e,n,r,o,c,l,h,d,f),this.flipY=!1,this._needsFlipEnvMap=!0}function an(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),L.call(this,t,t,e),e=e||{},this.texture=new sn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}function cn(data,t,e,n,r,o,c,l,h,d,f,m){T.call(this,null,o,c,l,h,d,n,r,f,m),this.image={data:data||null,width:t||1,height:e||1},this.magFilter=void 0!==h?h:1003,this.minFilter=void 0!==d?d:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}on.prototype=Object.create(It.prototype),on.prototype.constructor=on,sn.prototype=Object.create(T.prototype),sn.prototype.constructor=sn,sn.prototype.isCubeTexture=!0,Object.defineProperty(sn.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),an.prototype=Object.create(L.prototype),an.prototype.constructor=an,an.prototype.isWebGLCubeRenderTarget=!0,an.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=1023,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},r=new Qe(5,5,5),o=new en({name:"CubemapFromEquirect",uniforms:Ke(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});o.uniforms.tEquirect.value=e;const c=new Ye(r,o),l=e.minFilter;1008===e.minFilter&&(e.minFilter=1006);return new on(1,10,this).update(t,c),e.minFilter=l,c.geometry.dispose(),c.material.dispose(),this},an.prototype.clear=function(t,e,n,r){const o=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(o)},cn.prototype=Object.create(T.prototype),cn.prototype.constructor=cn,cn.prototype.isDataTexture=!0;const ln=new Q,hn=new C;class un{constructor(t,e,n,r,o,c){this.planes=[void 0!==t?t:new Ut,void 0!==e?e:new Ut,void 0!==n?n:new Ut,void 0!==r?r:new Ut,void 0!==o?o:new Ut,void 0!==c?c:new Ut]}set(t,e,n,r,o,c){const l=this.planes;return l[0].copy(t),l[1].copy(e),l[2].copy(n),l[3].copy(r),l[4].copy(o),l[5].copy(c),this}clone(){return(new this.constructor).copy(this)}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],o=n[1],c=n[2],l=n[3],h=n[4],d=n[5],f=n[6],m=n[7],v=n[8],y=n[9],x=n[10],_=n[11],w=n[12],M=n[13],S=n[14],T=n[15];return e[0].setComponents(l-r,m-h,_-v,T-w).normalize(),e[1].setComponents(l+r,m+h,_+v,T+w).normalize(),e[2].setComponents(l+o,m+d,_+y,T+M).normalize(),e[3].setComponents(l-o,m-d,_-y,T-M).normalize(),e[4].setComponents(l-c,m-f,_-x,T-S).normalize(),e[5].setComponents(l+c,m+f,_+x,T+S).normalize(),this}intersectsObject(object){const t=object.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),ln.copy(t.boundingSphere).applyMatrix4(object.matrixWorld),this.intersectsSphere(ln)}intersectsSprite(t){return ln.center.set(0,0,0),ln.radius=.7071067811865476,ln.applyMatrix4(t.matrixWorld),this.intersectsSphere(ln)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(hn.x=n.normal.x>0?t.max.x:t.min.x,hn.y=n.normal.y>0?t.max.y:t.min.y,hn.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(hn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}}function dn(){let t=null,e=!1,n=null,r=null;function o(time,e){n(time,e),r=t.requestAnimationFrame(o)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(o),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function pn(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);data&&(t.deleteBuffer(data.buffer),r.delete(e))},update:function(e,o){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);void 0===data?r.set(e,function(e,r){const o=e.array,c=e.usage,l=t.createBuffer();t.bindBuffer(r,l),t.bufferData(r,o,c),e.onUploadCallback();let h=5126;return o instanceof Float32Array?h=5126:o instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):o instanceof Uint16Array?e.isFloat16BufferAttribute?n?h=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):h=5123:o instanceof Int16Array?h=5122:o instanceof Uint32Array?h=5125:o instanceof Int32Array?h=5124:o instanceof Int8Array?h=5120:o instanceof Uint8Array&&(h=5121),{buffer:l,type:h,bytesPerElement:o.BYTES_PER_ELEMENT,version:e.version}}(e,o)):data.version<e.version&&(!function(e,r,o){const c=r.array,l=r.updateRange;t.bindBuffer(o,e),-1===l.count?t.bufferSubData(o,0,c):(n?t.bufferSubData(o,l.offset*c.BYTES_PER_ELEMENT,c,l.offset,l.count):t.bufferSubData(o,l.offset*c.BYTES_PER_ELEMENT,c.subarray(l.offset,l.offset+l.count)),l.count=-1)}(data.buffer,e,o),data.version=e.version)}}}class fn extends Pe{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const o=t/2,c=e/2,l=Math.floor(n),h=Math.floor(r),d=l+1,f=h+1,m=t/l,v=e/h,y=[],x=[],_=[],w=[];for(let t=0;t<f;t++){const e=t*v-c;for(let n=0;n<d;n++){const r=n*m-o;x.push(r,-e,0),_.push(0,0,1),w.push(n/l),w.push(1-t/h)}}for(let t=0;t<h;t++)for(let e=0;e<l;e++){const a=e+d*t,b=e+d*(t+1),n=e+1+d*(t+1),r=e+1+d*t;y.push(a,b,r),y.push(b,n,r)}this.setIndex(y),this.setAttribute("position",new ve(x,3)),this.setAttribute("normal",new ve(_,3)),this.setAttribute("uv",new ve(w,2))}}const mn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},gn={common:{diffuse:{value:new ee(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new _},uv2Transform:{value:new _},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new x(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ee(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ee(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new _}},sprite:{diffuse:{value:new ee(15658734)},opacity:{value:1},center:{value:new x(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new _}}},vn={basic:{uniforms:$e([gn.common,gn.specularmap,gn.envmap,gn.aomap,gn.lightmap,gn.fog]),vertexShader:mn.meshbasic_vert,fragmentShader:mn.meshbasic_frag},lambert:{uniforms:$e([gn.common,gn.specularmap,gn.envmap,gn.aomap,gn.lightmap,gn.emissivemap,gn.fog,gn.lights,{emissive:{value:new ee(0)}}]),vertexShader:mn.meshlambert_vert,fragmentShader:mn.meshlambert_frag},phong:{uniforms:$e([gn.common,gn.specularmap,gn.envmap,gn.aomap,gn.lightmap,gn.emissivemap,gn.bumpmap,gn.normalmap,gn.displacementmap,gn.fog,gn.lights,{emissive:{value:new ee(0)},specular:{value:new ee(1118481)},shininess:{value:30}}]),vertexShader:mn.meshphong_vert,fragmentShader:mn.meshphong_frag},standard:{uniforms:$e([gn.common,gn.envmap,gn.aomap,gn.lightmap,gn.emissivemap,gn.bumpmap,gn.normalmap,gn.displacementmap,gn.roughnessmap,gn.metalnessmap,gn.fog,gn.lights,{emissive:{value:new ee(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mn.meshphysical_vert,fragmentShader:mn.meshphysical_frag},toon:{uniforms:$e([gn.common,gn.aomap,gn.lightmap,gn.emissivemap,gn.bumpmap,gn.normalmap,gn.displacementmap,gn.gradientmap,gn.fog,gn.lights,{emissive:{value:new ee(0)}}]),vertexShader:mn.meshtoon_vert,fragmentShader:mn.meshtoon_frag},matcap:{uniforms:$e([gn.common,gn.bumpmap,gn.normalmap,gn.displacementmap,gn.fog,{matcap:{value:null}}]),vertexShader:mn.meshmatcap_vert,fragmentShader:mn.meshmatcap_frag},points:{uniforms:$e([gn.points,gn.fog]),vertexShader:mn.points_vert,fragmentShader:mn.points_frag},dashed:{uniforms:$e([gn.common,gn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mn.linedashed_vert,fragmentShader:mn.linedashed_frag},depth:{uniforms:$e([gn.common,gn.displacementmap]),vertexShader:mn.depth_vert,fragmentShader:mn.depth_frag},normal:{uniforms:$e([gn.common,gn.bumpmap,gn.normalmap,gn.displacementmap,{opacity:{value:1}}]),vertexShader:mn.normal_vert,fragmentShader:mn.normal_frag},sprite:{uniforms:$e([gn.sprite,gn.fog]),vertexShader:mn.sprite_vert,fragmentShader:mn.sprite_frag},background:{uniforms:{uvTransform:{value:new _},t2D:{value:null}},vertexShader:mn.background_vert,fragmentShader:mn.background_frag},cube:{uniforms:$e([gn.envmap,{opacity:{value:1}}]),vertexShader:mn.cube_vert,fragmentShader:mn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mn.equirect_vert,fragmentShader:mn.equirect_frag},distanceRGBA:{uniforms:$e([gn.common,gn.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mn.distanceRGBA_vert,fragmentShader:mn.distanceRGBA_frag},shadow:{uniforms:$e([gn.lights,gn.fog,{color:{value:new ee(0)},opacity:{value:1}}]),vertexShader:mn.shadow_vert,fragmentShader:mn.shadow_frag}};function yn(t,e,n,r,o){const c=new ee(0);let l,h,d=0,f=null,m=0,v=null;function y(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,o)}return{getClearColor:function(){return c},setClearColor:function(t,e=1){c.set(t),d=e,y(c,d)},getClearAlpha:function(){return d},setClearAlpha:function(t){d=t,y(c,d)},render:function(n,o,x,_){let w=!0===o.isScene?o.background:null;w&&w.isTexture&&(w=e.get(w));const M=t.xr,S=M.getSession&&M.getSession();S&&"additive"===S.environmentBlendMode&&(w=null),null===w?y(c,d):w&&w.isColor&&(y(w,1),_=!0),(t.autoClear||_)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),w&&(w.isCubeTexture||w.isWebGLCubeRenderTarget||306===w.mapping)?(void 0===h&&(h=new Ye(new Qe(1,1,1),new en({name:"BackgroundCubeMaterial",uniforms:Ke(vn.cube.uniforms),vertexShader:vn.cube.vertexShader,fragmentShader:vn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),w.isWebGLCubeRenderTarget&&(w=w.texture),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w._needsFlipEnvMap?-1:1,f===w&&m===w.version&&v===t.toneMapping||(h.material.needsUpdate=!0,f=w,m=w.version,v=t.toneMapping),n.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(void 0===l&&(l=new Ye(new fn(2,2),new en({name:"BackgroundMaterial",uniforms:Ke(vn.background.uniforms),vertexShader:vn.background.vertexShader,fragmentShader:vn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=w,!0===w.matrixAutoUpdate&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),f===w&&m===w.version&&v===t.toneMapping||(l.material.needsUpdate=!0,f=w,m=w.version,v=t.toneMapping),n.unshift(l,l.geometry,l.material,0,0,null))}}}function xn(t,e,n,r){const o=t.getParameter(34921),c=r.isWebGL2?null:e.get("OES_vertex_array_object"),l=r.isWebGL2||null!==c,h={},d=y(null);let f=d;function m(e){return r.isWebGL2?t.bindVertexArray(e):c.bindVertexArrayOES(e)}function v(e){return r.isWebGL2?t.deleteVertexArray(e):c.deleteVertexArrayOES(e)}function y(t){const e=[],n=[],r=[];for(let i=0;i<o;i++)e[i]=0,n[i]=0,r[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function x(){const t=f.newAttributes;for(let i=0,e=t.length;i<e;i++)t[i]=0}function _(t){w(t,0)}function w(n,o){const c=f.newAttributes,l=f.enabledAttributes,h=f.attributeDivisors;if(c[n]=1,0===l[n]&&(t.enableVertexAttribArray(n),l[n]=1),h[n]!==o){(r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,o),h[n]=o}}function M(){const e=f.newAttributes,n=f.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function S(e,n,o,c,l,h){!0!==r.isWebGL2||5124!==o&&5125!==o?t.vertexAttribPointer(e,n,o,c,l,h):t.vertexAttribIPointer(e,n,o,l,h)}function T(){E(),f!==d&&(f=d,m(f.object))}function E(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:function(object,o,d,v,T){let E=!1;if(l){const e=function(e,n,o){const l=!0===o.wireframe;let d=h[e.id];void 0===d&&(d={},h[e.id]=d);let f=d[n.id];void 0===f&&(f={},d[n.id]=f);let m=f[l];void 0===m&&(m=y(r.isWebGL2?t.createVertexArray():c.createVertexArrayOES()),f[l]=m);return m}(v,d,o);f!==e&&(f=e,m(f.object)),E=function(t,e){const n=f.attributes,r=t.attributes;let o=0;for(const t in r){const e=n[t],c=r[t];if(void 0===e)return!0;if(e.attribute!==c)return!0;if(e.data!==c.data)return!0;o++}return f.attributesNum!==o||f.index!==e}(v,T),E&&function(t,e){const n={},r=t.attributes;let o=0;for(const t in r){const e=r[t],data={};data.attribute=e,e.data&&(data.data=e.data),n[t]=data,o++}f.attributes=n,f.attributesNum=o,f.index=e}(v,T)}else{const t=!0===o.wireframe;f.geometry===v.id&&f.program===d.id&&f.wireframe===t||(f.geometry=v.id,f.program=d.id,f.wireframe=t,E=!0)}!0===object.isInstancedMesh&&(E=!0),null!==T&&n.update(T,34963),E&&(!function(object,o,c,l){if(!1===r.isWebGL2&&(object.isInstancedMesh||l.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;x();const h=l.attributes,d=c.getAttributes(),f=o.defaultAttributeValues;for(const e in d){const r=d[e];if(r>=0){const o=h[e];if(void 0!==o){const e=o.normalized,c=o.itemSize,h=n.get(o);if(void 0===h)continue;const d=h.buffer,f=h.type,m=h.bytesPerElement;if(o.isInterleavedBufferAttribute){const data=o.data,n=data.stride,h=o.offset;data&&data.isInstancedInterleavedBuffer?(w(r,data.meshPerAttribute),void 0===l._maxInstanceCount&&(l._maxInstanceCount=data.meshPerAttribute*data.count)):_(r),t.bindBuffer(34962,d),S(r,c,f,e,n*m,h*m)}else o.isInstancedBufferAttribute?(w(r,o.meshPerAttribute),void 0===l._maxInstanceCount&&(l._maxInstanceCount=o.meshPerAttribute*o.count)):_(r),t.bindBuffer(34962,d),S(r,c,f,e,0,0)}else if("instanceMatrix"===e){const e=n.get(object.instanceMatrix);if(void 0===e)continue;const o=e.buffer,c=e.type;w(r+0,1),w(r+1,1),w(r+2,1),w(r+3,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r+0,4,c,!1,64,0),t.vertexAttribPointer(r+1,4,c,!1,64,16),t.vertexAttribPointer(r+2,4,c,!1,64,32),t.vertexAttribPointer(r+3,4,c,!1,64,48)}else if("instanceColor"===e){const e=n.get(object.instanceColor);if(void 0===e)continue;const o=e.buffer,c=e.type;w(r,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r,3,c,!1,12,0)}else if(void 0!==f){const n=f[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r,n);break;case 3:t.vertexAttrib3fv(r,n);break;case 4:t.vertexAttrib4fv(r,n);break;default:t.vertexAttrib1fv(r,n)}}}}M()}(object,o,d,v),null!==T&&t.bindBuffer(34963,n.get(T).buffer))},reset:T,resetDefaultState:E,dispose:function(){T();for(const t in h){const e=h[t];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t]}},releaseStatesOfGeometry:function(t){if(void 0===h[t.id])return;const e=h[t.id];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t.id]},releaseStatesOfProgram:function(t){for(const e in h){const n=h[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)v(r[t].object),delete r[t];delete n[t.id]}},initAttributes:x,enableAttribute:_,disableUnusedAttributes:M}}function _n(t,e,n,r){const o=r.isWebGL2;let c;this.setMode=function(t){c=t},this.render=function(e,r){t.drawArrays(c,e,r),n.update(r,c,1)},this.renderInstances=function(r,l,h){if(0===h)return;let d,f;if(o)d=t,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](c,r,l,h),n.update(l,c,h)}}function bn(t,e,n){let r;function o(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const c="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let l=void 0!==n.precision?n.precision:"highp";const h=o(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const d=!0===n.logarithmicDepthBuffer,f=t.getParameter(34930),m=t.getParameter(35660),v=t.getParameter(3379),y=t.getParameter(34076),x=t.getParameter(34921),_=t.getParameter(36347),w=t.getParameter(36348),M=t.getParameter(36349),S=m>0,T=c||!!e.get("OES_texture_float");return{isWebGL2:c,getMaxAnisotropy:function(){if(void 0!==r)return r;const n=e.get("EXT_texture_filter_anisotropic");return r=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,r},getMaxPrecision:o,precision:l,logarithmicDepthBuffer:d,maxTextures:f,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:y,maxAttributes:x,maxVertexUniforms:_,maxVaryings:w,maxFragmentUniforms:M,vertexTextures:S,floatFragmentTextures:T,floatVertexTextures:S&&T,maxSamples:c?t.getParameter(36183):0}}function wn(t){const e=this;let n=null,r=0,o=!1,c=!1;const l=new Ut,h=new _,d={value:null,needsUpdate:!1};function f(){d.value!==n&&(d.value=n,d.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function m(t,n,r,o){const c=null!==t?t.length:0;let f=null;if(0!==c){if(f=d.value,!0!==o||null===f){const e=r+4*c,o=n.matrixWorldInverse;h.getNormalMatrix(o),(null===f||f.length<e)&&(f=new Float32Array(e));for(let i=0,e=r;i!==c;++i,e+=4)l.copy(t[i]).applyMatrix4(o,h),l.normal.toArray(f,e),f[e+3]=l.constant}d.value=f,d.needsUpdate=!0}return e.numPlanes=c,e.numIntersection=0,f}this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,c){const l=0!==t.length||e||0!==r||o;return o=e,n=m(t,c,0),r=t.length,l},this.beginShadows=function(){c=!0,m(null)},this.endShadows=function(){c=!1,f()},this.setState=function(e,l,h){const v=e.clippingPlanes,y=e.clipIntersection,x=e.clipShadows,_=t.get(e);if(!o||null===v||0===v.length||c&&!x)c?m(null):f();else{const t=c?0:r,e=4*t;let o=_.clippingState||null;d.value=o,o=m(v,l,e,h);for(let i=0;i!==e;++i)o[i]=n[i];_.clippingState=o,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=t}}}function Mn(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const o=e.get(n);void 0!==o&&(e.delete(n),o.dispose())}return{get:function(o){if(o&&o.isTexture){const c=o.mapping;if(303===c||304===c){if(e.has(o)){return n(e.get(o).texture,o.mapping)}{const image=o.image;if(image&&image.height>0){const c=t.getRenderList(),l=t.getRenderTarget(),h=t.getRenderState(),d=new an(image.height/2);return d.fromEquirectangularTexture(t,o),e.set(o,d),t.setRenderTarget(l),t.setRenderList(c),t.setRenderState(h),o.addEventListener("dispose",r),n(d.texture,o.mapping)}return null}}}return o},dispose:function(){e=new WeakMap}}}function Sn(t){const e={};return{has:function(n){if(void 0!==e[n])return null!==e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,null!==r},get:function(t){return this.has(t)||console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e[t]}}}function Tn(t,e,n,r){const o=new WeakMap,c=new WeakMap;function l(t){const h=t.target,d=o.get(h);null!==d.index&&e.remove(d.index);for(const t in d.attributes)e.remove(d.attributes[t]);h.removeEventListener("dispose",l),o.delete(h);const f=c.get(d);f&&(e.remove(f),c.delete(d)),r.releaseStatesOfGeometry(d),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,n.memory.geometries--}function h(t){const n=[],r=t.index,o=t.attributes.position;let l=0;if(null!==r){const t=r.array;l=r.version;for(let i=0,e=t.length;i<e;i+=3){const a=t[i+0],b=t[i+1],e=t[i+2];n.push(a,b,b,e,e,a)}}else{const t=o.array;l=o.version;for(let i=0,e=t.length/3-1;i<e;i+=3){const a=i+0,b=i+1,t=i+2;n.push(a,b,b,t,t,a)}}const h=new(_e(n)>65535?me:pe)(n,1);h.version=l;const d=c.get(t);d&&e.remove(d),c.set(t,h)}return{get:function(object,t){let e=o.get(t);return e||(t.addEventListener("dispose",l),t.isBufferGeometry?e=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new Pe).setFromObject(object)),e=t._bufferGeometry),o.set(t,e),n.memory.geometries++,e)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let i=0,t=n.length;i<t;i++)e.update(n[i],34962)}},getWireframeAttribute:function(t){const e=c.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&h(t)}else h(t);return c.get(t)}}}function En(t,e,n,r){const o=r.isWebGL2;let c,l,h;this.setMode=function(t){c=t},this.setIndex=function(t){l=t.type,h=t.bytesPerElement},this.render=function(e,r){t.drawElements(c,r,l,e*h),n.update(r,c,1)},this.renderInstances=function(r,d,f){if(0===f)return;let m,v;if(o)m=t,v="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",null===m)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");m[v](c,d,l,r*h,f),n.update(d,c,f)}}function An(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Ln(a,b){return a[0]-b[0]}function Rn(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Pn(t){const e={},n=new Float32Array(8),r=[];for(let i=0;i<8;i++)r[i]=[i,0];return{update:function(object,o,c,l){const h=object.morphTargetInfluences,d=void 0===h?0:h.length;let f=e[o.id];if(void 0===f){f=[];for(let i=0;i<d;i++)f[i]=[i,0];e[o.id]=f}for(let i=0;i<d;i++){const t=f[i];t[0]=i,t[1]=h[i]}f.sort(Rn);for(let i=0;i<8;i++)i<d&&f[i][1]?(r[i][0]=f[i][0],r[i][1]=f[i][1]):(r[i][0]=Number.MAX_SAFE_INTEGER,r[i][1]=0);r.sort(Ln);const m=c.morphTargets&&o.morphAttributes.position,v=c.morphNormals&&o.morphAttributes.normal;let y=0;for(let i=0;i<8;i++){const t=r[i],e=t[0],c=t[1];e!==Number.MAX_SAFE_INTEGER&&c?(m&&o.getAttribute("morphTarget"+i)!==m[e]&&o.setAttribute("morphTarget"+i,m[e]),v&&o.getAttribute("morphNormal"+i)!==v[e]&&o.setAttribute("morphNormal"+i,v[e]),n[i]=c,y+=c):(m&&!0===o.hasAttribute("morphTarget"+i)&&o.deleteAttribute("morphTarget"+i),v&&!0===o.hasAttribute("morphNormal"+i)&&o.deleteAttribute("morphNormal"+i),n[i]=0)}const x=o.morphTargetsRelative?1:1-y;l.getUniforms().setValue(t,"morphTargetBaseInfluence",x),l.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function Cn(t,e,n,r){let o=new WeakMap;return{update:function(object){const t=r.render.frame,c=object.geometry,l=e.get(object,c);return o.get(l)!==t&&(c.isGeometry&&l.updateFromObject(object),e.update(l),o.set(l,t)),object.isInstancedMesh&&(n.update(object.instanceMatrix,34962),null!==object.instanceColor&&n.update(object.instanceColor,34962)),l},dispose:function(){o=new WeakMap}}}function Nn(data=null,t=1,e=1,n=1){T.call(this,null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function In(data=null,t=1,e=1,n=1){T.call(this,null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}vn.physical={uniforms:$e([vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new x(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ee(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:mn.meshphysical_vert,fragmentShader:mn.meshphysical_frag},Nn.prototype=Object.create(T.prototype),Nn.prototype.constructor=Nn,Nn.prototype.isDataTexture2DArray=!0,In.prototype=Object.create(T.prototype),In.prototype.constructor=In,In.prototype.isDataTexture3D=!0;const Dn=new T,On=new Nn,zn=new In,Un=new sn,Bn=[],Fn=[],Hn=new Float32Array(16),Gn=new Float32Array(9),kn=new Float32Array(4);function Vn(t,e,n){const r=t[0];if(r<=0||r>0)return t;const o=e*n;let c=Bn[o];if(void 0===c&&(c=new Float32Array(o),Bn[o]=c),0!==e){r.toArray(c,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(c,r)}return c}function Wn(a,b){if(a.length!==b.length)return!1;for(let i=0,t=a.length;i<t;i++)if(a[i]!==b[i])return!1;return!0}function jn(a,b){for(let i=0,t=b.length;i<t;i++)a[i]=b[i]}function qn(t,e){let n=Fn[e];void 0===n&&(n=new Int32Array(e),Fn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Xn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Yn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Wn(n,e))return;t.uniform2fv(this.addr,e),jn(n,e)}}function Zn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Wn(n,e))return;t.uniform3fv(this.addr,e),jn(n,e)}}function Jn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Wn(n,e))return;t.uniform4fv(this.addr,e),jn(n,e)}}function Qn(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Wn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),jn(n,e)}else{if(Wn(n,r))return;kn.set(r),t.uniformMatrix2fv(this.addr,!1,kn),jn(n,r)}}function Kn(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Wn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),jn(n,e)}else{if(Wn(n,r))return;Gn.set(r),t.uniformMatrix3fv(this.addr,!1,Gn),jn(n,r)}}function $n(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Wn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),jn(n,e)}else{if(Wn(n,r))return;Hn.set(r),t.uniformMatrix4fv(this.addr,!1,Hn),jn(n,r)}}function ti(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTexture2D(e||Dn,o)}function ei(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture2DArray(e||On,o)}function ni(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture3D(e||zn,o)}function ii(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTextureCube(e||Un,o)}function ri(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function oi(t,e){const n=this.cache;Wn(n,e)||(t.uniform2iv(this.addr,e),jn(n,e))}function si(t,e){const n=this.cache;Wn(n,e)||(t.uniform3iv(this.addr,e),jn(n,e))}function ai(t,e){const n=this.cache;Wn(n,e)||(t.uniform4iv(this.addr,e),jn(n,e))}function ci(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function hi(t,e){t.uniform1fv(this.addr,e)}function ui(t,e){t.uniform1iv(this.addr,e)}function di(t,e){t.uniform2iv(this.addr,e)}function pi(t,e){t.uniform3iv(this.addr,e)}function fi(t,e){t.uniform4iv(this.addr,e)}function mi(t,e){const data=Vn(e,this.size,2);t.uniform2fv(this.addr,data)}function gi(t,e){const data=Vn(e,this.size,3);t.uniform3fv(this.addr,data)}function vi(t,e){const data=Vn(e,this.size,4);t.uniform4fv(this.addr,data)}function yi(t,e){const data=Vn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,data)}function xi(t,e){const data=Vn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,data)}function _i(t,e){const data=Vn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,data)}function bi(t,e,n){const r=e.length,o=qn(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTexture2D(e[i]||Dn,o[i])}function wi(t,e,n){const r=e.length,o=qn(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTextureCube(e[i]||Un,o[i])}function Mi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Xn;case 35664:return Yn;case 35665:return Zn;case 35666:return Jn;case 35674:return Qn;case 35675:return Kn;case 35676:return $n;case 5124:case 35670:return ri;case 35667:case 35671:return oi;case 35668:case 35672:return si;case 35669:case 35673:return ai;case 5125:return ci;case 35678:case 36198:case 36298:case 36306:case 35682:return ti;case 35679:case 36299:case 36307:return ni;case 35680:case 36300:case 36308:case 36293:return ii;case 36289:case 36303:case 36311:case 36292:return ei}}(e.type)}function Si(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return hi;case 35664:return mi;case 35665:return gi;case 35666:return vi;case 35674:return yi;case 35675:return xi;case 35676:return _i;case 5124:case 35670:return ui;case 35667:case 35671:return di;case 35668:case 35672:return pi;case 35669:case 35673:return fi;case 35678:case 36198:case 36298:case 36306:case 35682:return bi;case 35680:case 36300:case 36308:case 36293:return wi}}(e.type)}function Ti(t){this.id=t,this.seq=[],this.map={}}Si.prototype.updateCache=function(data){const t=this.cache;data instanceof Float32Array&&t.length!==data.length&&(this.cache=new Float32Array(data.length)),jn(t,data)},Ti.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const u=r[i];u.setValue(t,e[u.id],n)}};const Ei=/([\w\d_]+)(\])?(\[|\.)?/g;function Ai(t,e){t.seq.push(e),t.map[e.id]=e}function Li(t,e,n){const path=t.name,r=path.length;for(Ei.lastIndex=0;;){const o=Ei.exec(path),c=Ei.lastIndex;let l=o[1];const h="]"===o[2],d=o[3];if(h&&(l|=0),void 0===d||"["===d&&c+2===r){Ai(n,void 0===d?new Mi(l,t,e):new Si(l,t,e));break}{let t=n.map[l];void 0===t&&(t=new Ti(l),Ai(n,t)),n=t}}}function Ri(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Li(n,t.getUniformLocation(e,n.name),this)}}function Pi(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}Ri.prototype.setValue=function(t,e,n,r){const u=this.map[e];void 0!==u&&u.setValue(t,n,r)},Ri.prototype.setOptional=function(t,object,e){const n=object[e];void 0!==n&&this.setValue(t,e,n)},Ri.upload=function(t,e,n,r){for(let i=0,o=e.length;i!==o;++i){const u=e[i],o=n[u.id];!1!==o.needsUpdate&&u.setValue(t,o.value,r)}},Ri.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const u=t[i];u.id in e&&n.push(u)}return n};let Ci=0;function Ni(t){switch(t){case 3e3:return["Linear","( value )"];case h:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Ii(t,e,n){const r=t.getShaderParameter(e,35713),o=t.getShaderInfoLog(e).trim();if(r&&""===o)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+o+function(t){const e=t.split("\n");for(let i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(t.getShaderSource(e))}function Di(t,e){const n=Ni(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Oi(t,e){const n=Ni(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function zi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ui(t){return""!==t}function Bi(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fi(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Hi=/^[ \t]*#include +<([\w\d./]+)>/gm;function Gi(t){return t.replace(Hi,ki)}function ki(t,e){const n=mn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Gi(n)}const Vi=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Wi=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ji(t){return t.replace(Wi,Xi).replace(Vi,qi)}function qi(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Xi(t,e,n,r)}function Xi(t,e,n,r){let o="";for(let i=parseInt(e);i<parseInt(n);i++)o+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return o}function Yi(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Zi(t,e,n,r){const o=t.getContext(),c=n.defines;let l=n.vertexShader,h=n.fragmentShader;const d=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),f=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),m=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),v=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),y=t.gammaFactor>0?t.gammaFactor:1,x=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ui).join("\n")}(n),_=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(c),w=o.createProgram();let M,S,T=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(M=[_].filter(Ui).join("\n"),M.length>0&&(M+="\n"),S=[x,_].filter(Ui).join("\n"),S.length>0&&(S+="\n")):(M=[Yi(n),"#define SHADER_NAME "+n.shaderName,_,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+y,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ui).join("\n"),S=[x,Yi(n),"#define SHADER_NAME "+n.shaderName,_,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+y,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.envMap?"#define "+m:"",n.envMap?"#define "+v:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?mn.tonemapping_pars_fragment:"",0!==n.toneMapping?zi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",mn.encodings_pars_fragment,n.map?Di("mapTexelToLinear",n.mapEncoding):"",n.matcap?Di("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Di("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Di("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Di("lightMapTexelToLinear",n.lightMapEncoding):"",Oi("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ui).join("\n")),l=Gi(l),l=Bi(l,n),l=Fi(l,n),h=Gi(h),h=Bi(h,n),h=Fi(h,n),l=ji(l),h=ji(h),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(T="#version 300 es\n",M=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+M,S=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+S);const E=T+S+h,A=Pi(o,35633,T+M+l),L=Pi(o,35632,E);if(o.attachShader(w,A),o.attachShader(w,L),void 0!==n.index0AttributeName?o.bindAttribLocation(w,0,n.index0AttributeName):!0===n.morphTargets&&o.bindAttribLocation(w,0,"position"),o.linkProgram(w),t.debug.checkShaderErrors){const t=o.getProgramInfoLog(w).trim(),e=o.getShaderInfoLog(A).trim(),n=o.getShaderInfoLog(L).trim();let r=!0,c=!0;if(!1===o.getProgramParameter(w,35714)){r=!1;const e=Ii(o,A,"vertex"),n=Ii(o,L,"fragment");console.error("THREE.WebGLProgram: shader error: ",o.getError(),"35715",o.getProgramParameter(w,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(c=!1);c&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:M},fragmentShader:{log:n,prefix:S}})}let R,P;return o.deleteShader(A),o.deleteShader(L),this.getUniforms=function(){return void 0===R&&(R=new Ri(o,w)),R},this.getAttributes=function(){return void 0===P&&(P=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i).name;n[r]=t.getAttribLocation(e,r)}return n}(o,w)),P},this.destroy=function(){r.releaseStatesOfProgram(this),o.deleteProgram(w),this.program=void 0},this.name=n.shaderName,this.id=Ci++,this.cacheKey=e,this.usedTimes=1,this.program=w,this.vertexShader=A,this.fragmentShader=L,this}function Ji(t,e,n,r,o,l){const h=[],d=r.isWebGL2,f=r.logarithmicDepthBuffer,m=r.floatVertexTextures,v=r.maxVertexUniforms,y=r.vertexTextures;let x=r.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},w=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function M(map){let t;return map?map.isTexture?t=map.encoding:map.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=map.texture.encoding):t=3e3,t}return{getParameters:function(o,h,w,S,object){const T=S.fog,E=o.isMeshStandardMaterial?S.environment:null,A=e.get(o.envMap||E),L=_[o.type],R=object.isSkinnedMesh?function(object){const t=object.skeleton.bones;if(m)return 1024;{const e=v,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(object):0;let P,C;if(null!==o.precision&&(x=r.getMaxPrecision(o.precision),x!==o.precision&&console.warn("THREE.WebGLProgram.getParameters:",o.precision,"not supported, using",x,"instead.")),L){const t=vn[L];P=t.vertexShader,C=t.fragmentShader}else P=o.vertexShader,C=o.fragmentShader;const N=t.getRenderTarget();return{isWebGL2:d,shaderID:L,shaderName:o.type,vertexShader:P,fragmentShader:C,defines:o.defines,isRawShaderMaterial:!0===o.isRawShaderMaterial,glslVersion:o.glslVersion,precision:x,instancing:!0===object.isInstancedMesh,instancingColor:!0===object.isInstancedMesh&&null!==object.instanceColor,supportsVertexTextures:y,outputEncoding:null!==N?M(N.texture):t.outputEncoding,map:!!o.map,mapEncoding:M(o.map),matcap:!!o.matcap,matcapEncoding:M(o.matcap),envMap:!!A,envMapMode:A&&A.mapping,envMapEncoding:M(A),envMapCubeUV:!!A&&(306===A.mapping||307===A.mapping),lightMap:!!o.lightMap,lightMapEncoding:M(o.lightMap),aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,emissiveMapEncoding:M(o.emissiveMap),bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,objectSpaceNormalMap:1===o.normalMapType,tangentSpaceNormalMap:0===o.normalMapType,clearcoatMap:!!o.clearcoatMap,clearcoatRoughnessMap:!!o.clearcoatRoughnessMap,clearcoatNormalMap:!!o.clearcoatNormalMap,displacementMap:!!o.displacementMap,roughnessMap:!!o.roughnessMap,metalnessMap:!!o.metalnessMap,specularMap:!!o.specularMap,alphaMap:!!o.alphaMap,gradientMap:!!o.gradientMap,sheen:!!o.sheen,transmissionMap:!!o.transmissionMap,combine:o.combine,vertexTangents:o.normalMap&&o.vertexTangents,vertexColors:o.vertexColors,vertexUvs:!!(o.map||o.bumpMap||o.normalMap||o.specularMap||o.alphaMap||o.emissiveMap||o.roughnessMap||o.metalnessMap||o.clearcoatMap||o.clearcoatRoughnessMap||o.clearcoatNormalMap||o.displacementMap||o.transmissionMap),uvsVertexOnly:!(o.map||o.bumpMap||o.normalMap||o.specularMap||o.alphaMap||o.emissiveMap||o.roughnessMap||o.metalnessMap||o.clearcoatNormalMap||o.transmissionMap||!o.displacementMap),fog:!!T,useFog:o.fog,fogExp2:T&&T.isFogExp2,flatShading:o.flatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:f,skinning:o.skinning&&R>0,maxBones:R,useVertexTexture:m,morphTargets:o.morphTargets,morphNormals:o.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:o.dithering,shadowMapEnabled:t.shadowMap.enabled&&w.length>0,shadowMapType:t.shadowMap.type,toneMapping:o.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:o.premultipliedAlpha,alphaTest:o.alphaTest,doubleSided:o.side===c,flipSided:1===o.side,depthPacking:void 0!==o.depthPacking&&o.depthPacking,index0AttributeName:o.index0AttributeName,extensionDerivatives:o.extensions&&o.extensions.derivatives,extensionFragDepth:o.extensions&&o.extensions.fragDepth,extensionDrawBuffers:o.extensions&&o.extensions.drawBuffers,extensionShaderTextureLOD:o.extensions&&o.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:o.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let i=0;i<w.length;i++)n.push(e[w[i]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=_[t.type];let n;if(e){const t=vn[e];n=tn.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let p=0,t=h.length;p<t;p++){const t=h[p];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new Zi(t,n,e,o),h.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const i=h.indexOf(t);h[i]=h[h.length-1],h.pop(),t.destroy()}},programs:h}}function Qi(){let t=new WeakMap;return{get:function(object){let map=t.get(object);return void 0===map&&(map={},t.set(object,map)),map},remove:function(object){t.delete(object)},update:function(object,e,n){t.get(object)[e]=n},dispose:function(){t=new WeakMap}}}function Ki(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function $i(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function er(t){const e=[];let n=0;const r=[],o=[],c={id:-1};function l(object,r,o,l,h,d){let f=e[n];const m=t.get(o);return void 0===f?(f={id:object.id,object:object,geometry:r,material:o,program:m.program||c,groupOrder:l,renderOrder:object.renderOrder,z:h,group:d},e[n]=f):(f.id=object.id,f.object=object,f.geometry=r,f.material=o,f.program=m.program||c,f.groupOrder=l,f.renderOrder=object.renderOrder,f.z=h,f.group=d),n++,f}return{opaque:r,transparent:o,init:function(){n=0,r.length=0,o.length=0},push:function(object,t,e,n,c,h){const d=l(object,t,e,n,c,h);(!0===e.transparent?o:r).push(d)},unshift:function(object,t,e,n,c,h){const d=l(object,t,e,n,c,h);(!0===e.transparent?o:r).unshift(d)},finish:function(){for(let i=n,t=e.length;i<t;i++){const t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Ki),o.length>1&&o.sort(e||$i)}}}function nr(t){let e=new WeakMap;return{get:function(n,r){const o=e.get(n);let c;return void 0===o?(c=new er(t),e.set(n,new WeakMap),e.get(n).set(r,c)):(c=o.get(r),void 0===c&&(c=new er(t),o.set(r,c))),c},dispose:function(){e=new WeakMap}}}function ir(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new C,color:new ee};break;case"SpotLight":n={position:new C,direction:new C,color:new ee,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new C,color:new ee,distance:0,decay:0};break;case"HemisphereLight":n={direction:new C,skyColor:new ee,groundColor:new ee};break;case"RectAreaLight":n={color:new ee,position:new C,halfWidth:new C,halfHeight:new C}}return t[e.id]=n,n}}}let rr=0;function or(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function sr(t,e){const n=new ir,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new x};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new x,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)o.probe.push(new C);const c=new C,l=new at,h=new at;return{setup:function(d,f,m){let v=0,g=0,b=0;for(let i=0;i<9;i++)o.probe[i].set(0,0,0);let y=0,x=0,_=0,w=0,M=0,S=0,T=0,E=0;const A=m.matrixWorldInverse;d.sort(or);for(let i=0,t=d.length;i<t;i++){const t=d[i],e=t.color,f=t.intensity,m=t.distance,L=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)v+=e.r*f,g+=e.g*f,b+=e.b*f;else if(t.isLightProbe)for(let e=0;e<9;e++)o.probe[e].addScaledVector(t.sh.coefficients[e],f);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.direction.setFromMatrixPosition(t.matrixWorld),c.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(c),e.direction.transformDirection(A),t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.directionalShadow[y]=e,o.directionalShadowMap[y]=L,o.directionalShadowMatrix[y]=t.shadow.matrix,S++}o.directional[y]=e,y++}else if(t.isSpotLight){const l=n.get(t);if(l.position.setFromMatrixPosition(t.matrixWorld),l.position.applyMatrix4(A),l.color.copy(e).multiplyScalar(f),l.distance=m,l.direction.setFromMatrixPosition(t.matrixWorld),c.setFromMatrixPosition(t.target.matrixWorld),l.direction.sub(c),l.direction.transformDirection(A),l.coneCos=Math.cos(t.angle),l.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),l.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.spotShadow[_]=e,o.spotShadowMap[_]=L,o.spotShadowMatrix[_]=t.shadow.matrix,E++}o.spot[_]=l,_++}else if(t.isRectAreaLight){const r=n.get(t);r.color.copy(e).multiplyScalar(f),r.position.setFromMatrixPosition(t.matrixWorld),r.position.applyMatrix4(A),h.identity(),l.copy(t.matrixWorld),l.premultiply(A),h.extractRotation(l),r.halfWidth.set(.5*t.width,0,0),r.halfHeight.set(0,.5*t.height,0),r.halfWidth.applyMatrix4(h),r.halfHeight.applyMatrix4(h),o.rectArea[w]=r,w++}else if(t.isPointLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(A),e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,e.shadowCameraNear=shadow.camera.near,e.shadowCameraFar=shadow.camera.far,o.pointShadow[x]=e,o.pointShadowMap[x]=L,o.pointShadowMatrix[x]=t.shadow.matrix,T++}o.point[x]=e,x++}else if(t.isHemisphereLight){const e=n.get(t);e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(A),e.direction.normalize(),e.skyColor.copy(t.color).multiplyScalar(f),e.groundColor.copy(t.groundColor).multiplyScalar(f),o.hemi[M]=e,M++}}w>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(o.rectAreaLTC1=gn.LTC_FLOAT_1,o.rectAreaLTC2=gn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(o.rectAreaLTC1=gn.LTC_HALF_1,o.rectAreaLTC2=gn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=v,o.ambient[1]=g,o.ambient[2]=b;const L=o.hash;L.directionalLength===y&&L.pointLength===x&&L.spotLength===_&&L.rectAreaLength===w&&L.hemiLength===M&&L.numDirectionalShadows===S&&L.numPointShadows===T&&L.numSpotShadows===E||(o.directional.length=y,o.spot.length=_,o.rectArea.length=w,o.point.length=x,o.hemi.length=M,o.directionalShadow.length=S,o.directionalShadowMap.length=S,o.pointShadow.length=T,o.pointShadowMap.length=T,o.spotShadow.length=E,o.spotShadowMap.length=E,o.directionalShadowMatrix.length=S,o.pointShadowMatrix.length=T,o.spotShadowMatrix.length=E,L.directionalLength=y,L.pointLength=x,L.spotLength=_,L.rectAreaLength=w,L.hemiLength=M,L.numDirectionalShadows=S,L.numPointShadows=T,L.numSpotShadows=E,o.version=rr++)},state:o}}function ar(t,e){const n=new sr(t,e),r=[],o=[];return{init:function(){r.length=0,o.length=0},state:{lightsArray:r,shadowsArray:o,lights:n},setupLights:function(t){n.setup(r,o,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){o.push(t)}}}function cr(t,e){let n=new WeakMap;return{get:function(r,o){let c;return!1===n.has(r)?(c=new ar(t,e),n.set(r,new WeakMap),n.get(r).set(o,c)):!1===n.get(r).has(o)?(c=new ar(t,e),n.get(r).set(o,c)):c=n.get(r).get(o),c},dispose:function(){n=new WeakMap}}}function lr(t){re.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function ur(t){re.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}lr.prototype=Object.create(re.prototype),lr.prototype.constructor=lr,lr.prototype.isMeshDepthMaterial=!0,lr.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.depthPacking=source.depthPacking,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this},ur.prototype=Object.create(re.prototype),ur.prototype.constructor=ur,ur.prototype.isMeshDistanceMaterial=!0,ur.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.referencePosition.copy(source.referencePosition),this.nearDistance=source.nearDistance,this.farDistance=source.farDistance,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this};function dr(t,e,n){let r=new un;const o=new x,l=new x,h=new A,d=[],f=[],m={},v={0:1,1:0,2:c},y=new en({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new x},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=y.clone();_.defines.HORIZONAL_PASS=1;const w=new Pe;w.setAttribute("position",new ce(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new Ye(w,y),S=this;function T(shadow,n){const r=e.update(M);y.uniforms.shadow_pass.value=shadow.map.texture,y.uniforms.resolution.value=shadow.mapSize,y.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.mapPass),t.clear(),t.renderBufferDirect(n,null,r,y,M,null),_.uniforms.shadow_pass.value=shadow.mapPass.texture,_.uniforms.resolution.value=shadow.mapSize,_.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.map),t.clear(),t.renderBufferDirect(n,null,r,_,M,null)}function E(t,e,n){const r=t<<0|e<<1|n<<2;let o=d[r];return void 0===o&&(o=new lr({depthPacking:3201,morphTargets:t,skinning:e}),d[r]=o),o}function R(t,e,n){const r=t<<0|e<<1|n<<2;let o=f[r];return void 0===o&&(o=new ur({morphTargets:t,skinning:e}),f[r]=o),o}function P(object,e,n,r,o,c,l){let h=null,d=E,f=object.customDepthMaterial;if(!0===r.isPointLight&&(d=R,f=object.customDistanceMaterial),void 0===f){let t=!1;!0===n.morphTargets&&(t=e.morphAttributes&&e.morphAttributes.position&&e.morphAttributes.position.length>0);let r=!1;!0===object.isSkinnedMesh&&(!0===n.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",object));h=d(t,r,!0===object.isInstancedMesh)}else h=f;if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const t=h.uuid,e=n.uuid;let r=m[t];void 0===r&&(r={},m[t]=r);let o=r[e];void 0===o&&(o=h.clone(),r[e]=o),h=o}return h.visible=n.visible,h.wireframe=n.wireframe,h.side=3===l?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:v[n.side],h.clipShadows=n.clipShadows,h.clippingPlanes=n.clippingPlanes,h.clipIntersection=n.clipIntersection,h.wireframeLinewidth=n.wireframeLinewidth,h.linewidth=n.linewidth,!0===r.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(r.matrixWorld),h.nearDistance=o,h.farDistance=c),h}function C(object,n,o,c,l){if(!1===object.visible)return;if(object.layers.test(n.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&3===l)&&(!object.frustumCulled||r.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,object.matrixWorld);const n=e.update(object),r=object.material;if(Array.isArray(r)){const e=n.groups;for(let h=0,d=e.length;h<d;h++){const d=e[h],f=r[d.materialIndex];if(f&&f.visible){const e=P(object,n,f,c,o.near,o.far,l);t.renderBufferDirect(o,null,n,e,object,d)}}}else if(r.visible){const e=P(object,n,r,c,o.near,o.far,l);t.renderBufferDirect(o,null,n,e,object,null)}}const h=object.children;for(let i=0,t=h.length;i<t;i++)C(h[i],n,o,c,l)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,c,d){if(!1===S.enabled)return;if(!1===S.autoUpdate&&!1===S.needsUpdate)return;if(0===e.length)return;const f=t.getRenderTarget(),m=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),y=t.state;y.setBlending(0),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);for(let i=0,f=e.length;i<f;i++){const f=e[i],shadow=f.shadow;if(void 0===shadow){console.warn("THREE.WebGLShadowMap:",f,"has no shadow.");continue}if(!1===shadow.autoUpdate&&!1===shadow.needsUpdate)continue;o.copy(shadow.mapSize);const m=shadow.getFrameExtents();if(o.multiply(m),l.copy(shadow.mapSize),(o.x>n||o.y>n)&&(o.x>n&&(l.x=Math.floor(n/m.x),o.x=l.x*m.x,shadow.mapSize.x=l.x),o.y>n&&(l.y=Math.floor(n/m.y),o.y=l.y*m.y,shadow.mapSize.y=l.y)),null===shadow.map&&!shadow.isPointLightShadow&&3===this.type){const t={minFilter:1006,magFilter:1006,format:1023};shadow.map=new L(o.x,o.y,t),shadow.map.texture.name=f.name+".shadowMap",shadow.mapPass=new L(o.x,o.y,t),shadow.camera.updateProjectionMatrix()}if(null===shadow.map){const t={minFilter:1003,magFilter:1003,format:1023};shadow.map=new L(o.x,o.y,t),shadow.map.texture.name=f.name+".shadowMap",shadow.camera.updateProjectionMatrix()}t.setRenderTarget(shadow.map),t.clear();const v=shadow.getViewportCount();for(let t=0;t<v;t++){const e=shadow.getViewport(t);h.set(l.x*e.x,l.y*e.y,l.x*e.z,l.y*e.w),y.viewport(h),shadow.updateMatrices(f,t),r=shadow.getFrustum(),C(c,d,shadow.camera,f,this.type)}shadow.isPointLightShadow||3!==this.type||T(shadow,d),shadow.needsUpdate=!1}S.needsUpdate=!1,t.setRenderTarget(f,m,v)}}function pr(t,e,n){const r=n.isWebGL2;const o=new function(){let e=!1;const n=new A;let r=null;const o=new A(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,g,b,a,r){!0===r&&(e*=a,g*=a,b*=a),n.set(e,g,b,a),!1===o.equals(n)&&(t.clearColor(e,g,b,a),o.copy(n))},reset:function(){e=!1,r=null,o.set(-1,0,0,0)}}},l=new function(){let e=!1,n=null,r=null,o=null;return{setTest:function(t){t?k(2929):V(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,n=null,r=null,o=null}}},h=new function(){let e=!1,n=null,r=null,o=null,c=null,l=null,h=null,d=null,f=null;return{setTest:function(t){e||(t?k(2960):V(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,l){r===e&&o===n&&c===l||(t.stencilFunc(e,n,l),r=e,o=n,c=l)},setOp:function(e,n,r){l===e&&h===n&&d===r||(t.stencilOp(e,n,r),l=e,h=n,d=r)},setLocked:function(t){e=t},setClear:function(e){f!==e&&(t.clearStencil(e),f=e)},reset:function(){e=!1,n=null,r=null,o=null,c=null,l=null,h=null,d=null,f=null}}};let d={},f=null,m=null,v=null,y=null,x=null,_=null,w=null,M=null,S=null,T=!1,E=null,L=null,R=null,P=null,C=null;const N=t.getParameter(35661);let I=!1,D=0;const O=t.getParameter(7938);-1!==O.indexOf("WebGL")?(D=parseFloat(/^WebGL\ ([0-9])/.exec(O)[1]),I=D>=1):-1!==O.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(O)[1]),I=D>=2);let z=null,U={};const B=new A,F=new A;function H(e,n,r){const data=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let i=0;i<r;i++)t.texImage2D(n+i,0,6408,1,1,0,6408,5121,data);return o}const G={};function k(e){!0!==d[e]&&(t.enable(e),d[e]=!0)}function V(e){!1!==d[e]&&(t.disable(e),d[e]=!1)}G[3553]=H(3553,3553,1),G[34067]=H(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),h.setClear(0),k(2929),l.setFunc(3),Y(!1),Z(1),k(2884),X(0);const W={100:32774,101:32778,102:32779};if(r)W[103]=32775,W[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(W[103]=t.MIN_EXT,W[104]=t.MAX_EXT)}const j={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function X(e,n,r,o,c,l,h,d){if(0!==e){if(m||(k(3042),m=!0),5===e)c=c||n,l=l||r,h=h||o,n===y&&c===w||(t.blendEquationSeparate(W[n],W[c]),y=n,w=c),r===x&&o===_&&l===M&&h===S||(t.blendFuncSeparate(j[r],j[o],j[l],j[h]),x=r,_=o,M=l,S=h),v=e,T=null;else if(e!==v||d!==T){if(100===y&&100===w||(t.blendEquation(32774),y=100,w=100),d)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}x=null,_=null,M=null,S=null,v=e,T=d}}else m&&(V(3042),m=!1)}function Y(e){E!==e&&(e?t.frontFace(2304):t.frontFace(2305),E=e)}function Z(e){0!==e?(k(2884),e!==L&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):V(2884),L=e}function J(e,n,r){e?(k(32823),P===n&&C===r||(t.polygonOffset(n,r),P=n,C=r)):V(32823)}function Q(e){void 0===e&&(e=33984+N-1),z!==e&&(t.activeTexture(e),z=e)}return{buffers:{color:o,depth:l,stencil:h},enable:k,disable:V,useProgram:function(e){return f!==e&&(t.useProgram(e),f=e,!0)},setBlending:X,setMaterial:function(t,e){t.side===c?V(2884):k(2884);let n=1===t.side;e&&(n=!n),Y(n),1===t.blending&&!1===t.transparent?X(0):X(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),o.setMask(t.colorWrite);const r=t.stencilWrite;h.setTest(r),r&&(h.setMask(t.stencilWriteMask),h.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),h.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),J(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:Y,setCullFace:Z,setLineWidth:function(e){e!==R&&(I&&t.lineWidth(e),R=e)},setPolygonOffset:J,setScissorTest:function(t){t?k(3089):V(3089)},activeTexture:Q,bindTexture:function(e,n){null===z&&Q();let r=U[z];void 0===r&&(r={type:void 0,texture:void 0},U[z]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||G[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=U[z];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===B.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),B.copy(e))},viewport:function(e){!1===F.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),F.copy(e))},reset:function(){d={},z=null,U={},f=null,m=null,v=null,y=null,x=null,_=null,w=null,M=null,S=null,T=!1,E=null,L=null,R=null,P=null,C=null,o.reset(),l.reset(),h.reset()}}}function fr(t,e,n,r,o,c,l){const h=o.isWebGL2,d=o.maxTextures,f=o.maxCubemapSize,m=o.maxTextureSize,v=o.maxSamples,x=new WeakMap;let _,w=!1;try{w="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function M(t,e){return w?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function S(image,t,e,n){let r=1;if((image.width>n||image.height>n)&&(r=n/Math.max(image.width,image.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const n=t?y.floorPowerOfTwo:Math.floor,o=n(r*image.width),c=n(r*image.height);void 0===_&&(_=M(o,c));const canvas=e?M(o,c):_;canvas.width=o,canvas.height=c;return canvas.getContext("2d").drawImage(image,0,0,o,c),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+o+"x"+c+")."),canvas}return"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+")."),image}return image}function T(image){return y.isPowerOfTwo(image.width)&&y.isPowerOfTwo(image.height)}function E(t,e){return t.generateMipmaps&&e&&1003!==t.minFilter&&1006!==t.minFilter}function A(e,n,o,c){t.generateMipmap(e);r.get(n).__maxMipLevel=Math.log(Math.max(o,c))*Math.LOG2E}function L(n,r,o){if(!1===h)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let c=r;return 6403===r&&(5126===o&&(c=33326),5131===o&&(c=33325),5121===o&&(c=33321)),6407===r&&(5126===o&&(c=34837),5131===o&&(c=34843),5121===o&&(c=32849)),6408===r&&(5126===o&&(c=34836),5131===o&&(c=34842),5121===o&&(c=32856)),33325!==c&&33326!==c&&34842!==c&&34836!==c||e.get("EXT_color_buffer_float"),c}function R(t){return 1003===t||1004===t||1005===t?9728:9729}function P(e){const n=e.target;n.removeEventListener("dispose",P),function(e){const n=r.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),r.remove(e)}(n),n.isVideoTexture&&x.delete(n),l.memory.textures--}function C(e){const n=e.target;n.removeEventListener("dispose",C),function(e){const n=r.get(e),o=r.get(e.texture);if(!e)return;void 0!==o.__webglTexture&&t.deleteTexture(o.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)t.deleteFramebuffer(n.__webglFramebuffer[i]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[i]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);r.remove(e.texture),r.remove(e)}(n),l.memory.textures--}let N=0;function I(t,slot){const e=r.get(t);if(t.isVideoTexture&&function(t){const e=l.render.frame;x.get(t)!==e&&(x.set(t,e),t.update())}(t),t.version>0&&e.__version!==t.version){const image=t.image;if(void 0===image)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==image.complete)return void F(e,t,slot);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+slot),n.bindTexture(3553,e.__webglTexture)}function D(e,slot){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,r,slot){if(6!==r.image.length)return;B(e,r),n.activeTexture(33984+slot),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY);const o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,d=[];for(let i=0;i<6;i++)d[i]=o||l?l?r.image[i].image:r.image[i]:S(r.image[i],!1,!0,f);const image=d[0],m=T(image)||h,v=c.convert(r.format),y=c.convert(r.type),x=L(r.internalFormat,v,y);let _;if(U(34067,r,m),o){for(let i=0;i<6;i++){_=d[i].mipmaps;for(let t=0;t<_.length;t++){const e=_[t];1023!==r.format&&1022!==r.format?null!==v?n.compressedTexImage2D(34069+i,t,x,e.width,e.height,0,e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+i,t,x,e.width,e.height,0,v,y,e.data)}}e.__maxMipLevel=_.length-1}else{_=r.mipmaps;for(let i=0;i<6;i++)if(l){n.texImage2D(34069+i,0,x,d[i].width,d[i].height,0,v,y,d[i].data);for(let t=0;t<_.length;t++){const e=_[t].image[i].image;n.texImage2D(34069+i,t+1,x,e.width,e.height,0,v,y,e.data)}}else{n.texImage2D(34069+i,0,x,v,y,d[i]);for(let t=0;t<_.length;t++){const e=_[t];n.texImage2D(34069+i,t+1,x,v,y,e.image[i])}}e.__maxMipLevel=_.length}E(r,m)&&A(34067,r,image.width,image.height);e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(o,e,slot):(n.activeTexture(33984+slot),n.bindTexture(34067,o.__webglTexture))}const O={1e3:10497,1001:33071,1002:33648},z={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function U(n,c,l){l?(t.texParameteri(n,10242,O[c.wrapS]),t.texParameteri(n,10243,O[c.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,O[c.wrapR]),t.texParameteri(n,10240,z[c.magFilter]),t.texParameteri(n,10241,z[c.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),1001===c.wrapS&&1001===c.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,R(c.magFilter)),t.texParameteri(n,10241,R(c.minFilter)),1003!==c.minFilter&&1006!==c.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const d=e.get("EXT_texture_filter_anisotropic");if(d){if(1015===c.type&&null===e.get("OES_texture_float_linear"))return;if(1016===c.type&&null===(h||e.get("OES_texture_half_float_linear")))return;(c.anisotropy>1||r.get(c).__currentAnisotropy)&&(t.texParameterf(n,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(c.anisotropy,o.getMaxAnisotropy())),r.get(c).__currentAnisotropy=c.anisotropy)}}function B(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",P),e.__webglTexture=t.createTexture(),l.memory.textures++)}function F(e,r,slot){let o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),B(e,r),n.activeTexture(33984+slot),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment);const l=function(t){return!h&&(1001!==t.wrapS||1001!==t.wrapT||1003!==t.minFilter&&1006!==t.minFilter)}(r)&&!1===T(r.image),image=S(r.image,l,!1,m),d=T(image)||h,f=c.convert(r.format);let v,y=c.convert(r.type),x=L(r.internalFormat,f,y);U(o,r,d);const _=r.mipmaps;if(r.isDepthTexture)x=6402,h?x=1015===r.type?36012:1014===r.type?33190:1020===r.type?35056:33189:1015===r.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===r.format&&6402===x&&1012!==r.type&&1014!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=1012,y=c.convert(r.type)),1027===r.format&&6402===x&&(x=34041,1020!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=1020,y=c.convert(r.type))),n.texImage2D(3553,0,x,image.width,image.height,0,f,y,null);else if(r.isDataTexture)if(_.length>0&&d){for(let i=0,t=_.length;i<t;i++)v=_[i],n.texImage2D(3553,i,x,v.width,v.height,0,f,y,v.data);r.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,x,image.width,image.height,0,f,y,image.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let i=0,t=_.length;i<t;i++)v=_[i],1023!==r.format&&1022!==r.format?null!==f?n.compressedTexImage2D(3553,i,x,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,i,x,v.width,v.height,0,f,y,v.data);e.__maxMipLevel=_.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,x,image.width,image.height,image.depth,0,f,y,image.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,x,image.width,image.height,image.depth,0,f,y,image.data),e.__maxMipLevel=0;else if(_.length>0&&d){for(let i=0,t=_.length;i<t;i++)v=_[i],n.texImage2D(3553,i,x,f,y,v);r.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,x,f,y,image),e.__maxMipLevel=0;E(r,d)&&A(o,r,image.width,image.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function H(e,o,l,h){const d=c.convert(o.texture.format),f=c.convert(o.texture.type),m=L(o.texture.internalFormat,d,f);n.texImage2D(h,0,m,o.width,o.height,0,d,f,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,l,h,r.get(o.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function G(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let o=33189;if(r){const e=n.depthTexture;e&&e.isDepthTexture&&(1015===e.type?o=36012:1014===e.type&&(o=33190));const r=V(n);t.renderbufferStorageMultisample(36161,r,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const e=V(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=c.convert(n.texture.format),o=c.convert(n.texture.type),l=L(n.texture.internalFormat,e,o);if(r){const e=V(n);t.renderbufferStorageMultisample(36161,e,l,n.width,n.height)}else t.renderbufferStorage(36161,l,n.width,n.height)}t.bindRenderbuffer(36161,null)}function k(e){const n=r.get(e),o=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(o)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),I(n.depthTexture,0);const o=r.get(n.depthTexture).__webglTexture;if(1026===n.depthTexture.format)t.framebufferTexture2D(36160,36096,3553,o,0);else{if(1027!==n.depthTexture.format)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,o,0)}}(n.__webglFramebuffer,e)}else if(o){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)t.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),G(n.__webglDepthbuffer[i],e,!1)}else t.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),G(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(36160,null)}function V(t){return h&&t.isWebGLMultisampleRenderTarget?Math.min(v,t.samples):0}let W=!1,j=!1;this.allocateTextureUnit=function(){const t=N;return t>=d&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+d),N+=1,t},this.resetTextureUnits=function(){N=0},this.setTexture2D=I,this.setTexture2DArray=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?F(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(35866,e.__webglTexture))},this.setTexture3D=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?F(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(32879,e.__webglTexture))},this.setTextureCube=D,this.setupRenderTarget=function(e){const o=r.get(e),d=r.get(e.texture);e.addEventListener("dispose",C),d.__webglTexture=t.createTexture(),l.memory.textures++;const f=!0===e.isWebGLCubeRenderTarget,m=!0===e.isWebGLMultisampleRenderTarget,v=T(e)||h;if(!h||1022!==e.texture.format||1015!==e.texture.type&&1016!==e.texture.type||(e.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),f){o.__webglFramebuffer=[];for(let i=0;i<6;i++)o.__webglFramebuffer[i]=t.createFramebuffer()}else if(o.__webglFramebuffer=t.createFramebuffer(),m)if(h){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,o.__webglColorRenderbuffer);const n=c.convert(e.texture.format),r=c.convert(e.texture.type),l=L(e.texture.internalFormat,n,r),h=V(e);t.renderbufferStorageMultisample(36161,h,l,e.width,e.height),t.bindFramebuffer(36160,o.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,o.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),G(o.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(f){n.bindTexture(34067,d.__webglTexture),U(34067,e.texture,v);for(let i=0;i<6;i++)H(o.__webglFramebuffer[i],e,36064,34069+i);E(e.texture,v)&&A(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,d.__webglTexture),U(3553,e.texture,v),H(o.__webglFramebuffer,e,36064,3553),E(e.texture,v)&&A(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&k(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(E(e,T(t)||h)){const o=t.isWebGLCubeRenderTarget?34067:3553,c=r.get(e).__webglTexture;n.bindTexture(o,c),A(o,e,t.width,t.height),n.bindTexture(o,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(h){const n=r.get(e);t.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,n.__webglFramebuffer);const o=e.width,c=e.height;let mask=16384;e.depthBuffer&&(mask|=256),e.stencilBuffer&&(mask|=1024),t.blitFramebuffer(0,0,o,c,0,0,o,c,mask,9728),t.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,slot){t&&t.isWebGLRenderTarget&&(!1===W&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),W=!0),t=t.texture),I(t,slot)},this.safeSetTextureCube=function(t,slot){t&&t.isWebGLCubeRenderTarget&&(!1===j&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),j=!0),t=t.texture),D(t,slot)}}function mr(t,e,n){const r=n.isWebGL2;return{convert:function(p){let t;if(1009===p)return 5121;if(1017===p)return 32819;if(1018===p)return 32820;if(1019===p)return 33635;if(1010===p)return 5120;if(1011===p)return 5122;if(1012===p)return 5123;if(1013===p)return 5124;if(1014===p)return 5125;if(1015===p)return 5126;if(1016===p)return r?5131:(t=e.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(1021===p)return 6406;if(1022===p)return 6407;if(1023===p)return 6408;if(p===l)return 6409;if(1025===p)return 6410;if(1026===p)return 6402;if(1027===p)return 34041;if(1028===p)return 6403;if(1029===p)return 36244;if(1030===p)return 33319;if(1031===p)return 33320;if(1032===p)return 36248;if(1033===p)return 36249;if(33776===p||33777===p||33778===p||33779===p){if(t=e.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(33776===p)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===p)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===p)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===p)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===p||35841===p||35842===p||35843===p){if(t=e.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(35840===p)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===p)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===p)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===p)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===p)return t=e.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===p||37496===p)&&(t=e.get("WEBGL_compressed_texture_etc"),null!==t)){if(37492===p)return t.COMPRESSED_RGB8_ETC2;if(37496===p)return t.COMPRESSED_RGBA8_ETC2_EAC}return 37808===p||37809===p||37810===p||37811===p||37812===p||37813===p||37814===p||37815===p||37816===p||37817===p||37818===p||37819===p||37820===p||37821===p||37840===p||37841===p||37842===p||37843===p||37844===p||37845===p||37846===p||37847===p||37848===p||37849===p||37850===p||37851===p||37852===p||37853===p?(t=e.get("WEBGL_compressed_texture_astc"),null!==t?p:null):36492===p?(t=e.get("EXT_texture_compression_bptc"),null!==t?p:null):1020===p?r?34042:(t=e.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function gr(t=[]){rn.call(this),this.cameras=t}function vr(){It.call(this),this.type="Group"}function yr(){this._targetRay=null,this._grip=null,this._hand=null}function xr(t,e){const n=this;let r=null,o=1,c=null,l="local-floor",h=null;const d=[],f=new Map,m=new rn;m.layers.enable(1),m.viewport=new A;const v=new rn;v.layers.enable(2),v.viewport=new A;const y=[m,v],x=new gr;x.layers.enable(1),x.layers.enable(2);let _=null,w=null;function M(t){const e=f.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function S(){f.forEach((function(t,e){t.disconnect(e)})),f.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),I.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function T(t){c=t,I.setContext(r),I.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function E(t){const e=r.inputSources;for(let i=0;i<d.length;i++)f.set(e[i],d[i]);for(let i=0;i<t.removed.length;i++){const e=t.removed[i],n=f.get(e);n&&(n.dispatchEvent({type:"disconnected",data:e}),f.delete(e))}for(let i=0;i<t.added.length;i++){const e=t.added[i],n=f.get(e);n&&n.dispatchEvent({type:"connected",data:e})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=d[t];return void 0===e&&(e=new yr,d[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=d[t];return void 0===e&&(e=new yr,d[t]=e),e.getGripSpace()},this.getHand=function(t){let e=d[t];return void 0===e&&(e=new yr,d[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){l=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c},this.getSession=function(){return r},this.setSession=function(t){if(r=t,null!==r){r.addEventListener("select",M),r.addEventListener("selectstart",M),r.addEventListener("selectend",M),r.addEventListener("squeeze",M),r.addEventListener("squeezestart",M),r.addEventListener("squeezeend",M),r.addEventListener("end",S);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:o},c=new XRWebGLLayer(r,e,n);r.updateRenderState({baseLayer:c}),r.requestReferenceSpace(l).then(T),r.addEventListener("inputsourceschange",E)}};const L=new C,R=new C;function P(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){x.near=v.near=m.near=t.near,x.far=v.far=m.far=t.far,_===x.near&&w===x.far||(r.updateRenderState({depthNear:x.near,depthFar:x.far}),_=x.near,w=x.far);const e=t.parent,n=x.cameras;P(x,e);for(let i=0;i<n.length;i++)P(n[i],e);t.matrixWorld.copy(x.matrixWorld);const o=t.children;for(let i=0,t=o.length;i<t;i++)o[i].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){L.setFromMatrixPosition(e.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);const r=L.distanceTo(R),o=e.projectionMatrix.elements,c=n.projectionMatrix.elements,l=o[14]/(o[10]-1),h=o[14]/(o[10]+1),d=(o[9]+1)/o[5],f=(o[9]-1)/o[5],m=(o[8]-1)/o[0],v=(c[8]+1)/c[0],y=l*m,x=l*v,_=r/(-m+v),w=_*-m;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(w),t.translateZ(_),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const M=l+_,S=h+_,T=y-w,E=x+(r-w),A=d*h/S*M,P=f*h/S*M;t.projectionMatrix.makePerspective(T,E,A,P,M,S)}(x,m,v):x.projectionMatrix.copy(m.projectionMatrix),x};let N=null;const I=new dn;I.setAnimationLoop((function(time,e){if(h=e.getViewerPose(c),null!==h){const e=h.views,n=r.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let o=!1;e.length!==x.cameras.length&&(x.cameras.length=0,o=!0);for(let i=0;i<e.length;i++){const view=e[i],t=n.getViewport(view),r=y[i];r.matrix.fromArray(view.transform.matrix),r.projectionMatrix.fromArray(view.projectionMatrix),r.viewport.set(t.x,t.y,t.width,t.height),0===i&&x.matrix.copy(r.matrix),!0===o&&x.cameras.push(r)}}const n=r.inputSources;for(let i=0;i<d.length;i++){const t=d[i],r=n[i];t.update(r,e,c)}N&&N(time,e)})),this.setAnimationLoop=function(t){N=t},this.dispose=function(){}}function _r(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const r=t.get(n).envMap;if(r){e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const o=t.get(r).__maxMipLevel;void 0!==o&&(e.maxMipLevel.value=o)}let o,c;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?o=n.map:n.specularMap?o=n.specularMap:n.displacementMap?o=n.displacementMap:n.normalMap?o=n.normalMap:n.bumpMap?o=n.bumpMap:n.roughnessMap?o=n.roughnessMap:n.metalnessMap?o=n.metalnessMap:n.alphaMap?o=n.alphaMap:n.emissiveMap?o=n.emissiveMap:n.clearcoatMap?o=n.clearcoatMap:n.clearcoatNormalMap?o=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(o=n.clearcoatRoughnessMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix)),n.aoMap?c=n.aoMap:n.lightMap&&(c=n.lightMap),void 0!==c&&(c.isWebGLRenderTarget&&(c=c.texture),!0===c.matrixAutoUpdate&&c.updateMatrix(),e.uv2Transform.value.copy(c.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,o,c){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,r):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let o;e.map?o=e.map:e.alphaMap&&(o=e.alphaMap);void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix))}(t,r,o,c):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function wr(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return canvas.style.display="block",canvas}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,o=void 0===t.depth||t.depth,c=void 0===t.stencil||t.stencil,l=void 0!==t.antialias&&t.antialias,h=void 0===t.premultipliedAlpha||t.premultipliedAlpha,d=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,f=void 0!==t.powerPreference?t.powerPreference:"default",m=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let v=null,_=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const w=this;let M=!1,S=null,T=0,E=0,L=null,R=null,P=-1,N=null,I=null;const D=new A,O=new A;let z=null,U=e.width,B=e.height,F=1,H=null,G=null;const k=new A(0,0,U,B),V=new A(0,0,U,B);let W=!1;const j=new un;let X=!1,Y=!1;const Z=new at,J=new C,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function K(){return null===L?F:1}let $,tt,et,nt,it,ot,st,ct,lt,ht,ut,pt,ft,mt,gt,vt,yt,xt,_t,bt,wt,Mt=n;function St(t,n){for(let i=0;i<t.length;i++){const r=t[i],o=e.getContext(r,n);if(null!==o)return o}return null}try{const t={alpha:r,depth:o,stencil:c,antialias:l,premultipliedAlpha:h,preserveDrawingBuffer:d,powerPreference:f,failIfMajorPerformanceCaveat:m};if(e.addEventListener("webglcontextlost",Lt,!1),e.addEventListener("webglcontextrestored",Rt,!1),null===Mt){const e=["webgl2","webgl","experimental-webgl"];if(!0===w.isWebGL1Renderer&&e.shift(),Mt=St(e,t),null===Mt)throw St(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Mt.getShaderPrecisionFormat&&(Mt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Tt(){$=new Sn(Mt),tt=new bn(Mt,$,t),!1===tt.isWebGL2&&($.get("WEBGL_depth_texture"),$.get("OES_texture_float"),$.get("OES_texture_half_float"),$.get("OES_texture_half_float_linear"),$.get("OES_standard_derivatives"),$.get("OES_element_index_uint"),$.get("OES_vertex_array_object"),$.get("ANGLE_instanced_arrays")),$.get("OES_texture_float_linear"),bt=new mr(Mt,$,tt),et=new pr(Mt,$,tt),et.scissor(O.copy(V).multiplyScalar(F).floor()),et.viewport(D.copy(k).multiplyScalar(F).floor()),nt=new An(Mt),it=new Qi,ot=new fr(Mt,$,et,it,tt,bt,nt),st=new Mn(w),ct=new pn(Mt,tt),wt=new xn(Mt,$,ct,tt),lt=new Tn(Mt,ct,nt,wt),ht=new Cn(Mt,lt,ct,nt),yt=new Pn(Mt),gt=new wn(it),ut=new Ji(w,st,$,tt,wt,gt),pt=new _r(it),ft=new nr(it),mt=new cr($,tt),vt=new yn(w,st,et,ht,h),xt=new _n(Mt,$,nt,tt),_t=new En(Mt,$,nt,tt),nt.programs=ut.programs,w.capabilities=tt,w.extensions=$,w.properties=it,w.renderLists=ft,w.state=et,w.info=nt}Tt();const Et=new xr(w,Mt);this.xr=Et;const At=new dr(w,ht,tt.maxTextureSize);function Lt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function Rt(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1,Tt()}function Pt(t){const e=t.target;e.removeEventListener("dispose",Pt),function(t){Ct(t),it.remove(t)}(e)}function Ct(t){const e=it.get(t).program;void 0!==e&&ut.releaseProgram(e)}this.shadowMap=At,this.getContext=function(){return Mt},this.getContextAttributes=function(){return Mt.getContextAttributes()},this.forceContextLoss=function(){const t=$.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=$.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(t){void 0!==t&&(F=t,this.setSize(U,B,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new x),t.set(U,B)},this.setSize=function(t,n,r){Et.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(U=t,B=n,e.width=Math.floor(t*F),e.height=Math.floor(n*F),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new x),t.set(U*F,B*F).floor()},this.setDrawingBufferSize=function(t,n,r){U=t,B=n,F=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new A),t.copy(D)},this.getViewport=function(t){return t.copy(k)},this.setViewport=function(t,e,n,r){t.isVector4?k.set(t.x,t.y,t.z,t.w):k.set(t,e,n,r),et.viewport(D.copy(k).multiplyScalar(F).floor())},this.getScissor=function(t){return t.copy(V)},this.setScissor=function(t,e,n,r){t.isVector4?V.set(t.x,t.y,t.z,t.w):V.set(t,e,n,r),et.scissor(O.copy(V).multiplyScalar(F).floor())},this.getScissorTest=function(){return W},this.setScissorTest=function(t){et.setScissorTest(W=t)},this.setOpaqueSort=function(t){H=t},this.setTransparentSort=function(t){G=t},this.getClearColor=function(){return vt.getClearColor()},this.setClearColor=function(){vt.setClearColor.apply(vt,arguments)},this.getClearAlpha=function(){return vt.getClearAlpha()},this.setClearAlpha=function(){vt.setClearAlpha.apply(vt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),Mt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Lt,!1),e.removeEventListener("webglcontextrestored",Rt,!1),ft.dispose(),mt.dispose(),it.dispose(),st.dispose(),ht.dispose(),wt.dispose(),Et.dispose(),It.stop()},this.renderBufferImmediate=function(object,t){wt.initAttributes();const e=it.get(object);object.hasPositions&&!e.position&&(e.position=Mt.createBuffer()),object.hasNormals&&!e.normal&&(e.normal=Mt.createBuffer()),object.hasUvs&&!e.uv&&(e.uv=Mt.createBuffer()),object.hasColors&&!e.color&&(e.color=Mt.createBuffer());const n=t.getAttributes();object.hasPositions&&(Mt.bindBuffer(34962,e.position),Mt.bufferData(34962,object.positionArray,35048),wt.enableAttribute(n.position),Mt.vertexAttribPointer(n.position,3,5126,!1,0,0)),object.hasNormals&&(Mt.bindBuffer(34962,e.normal),Mt.bufferData(34962,object.normalArray,35048),wt.enableAttribute(n.normal),Mt.vertexAttribPointer(n.normal,3,5126,!1,0,0)),object.hasUvs&&(Mt.bindBuffer(34962,e.uv),Mt.bufferData(34962,object.uvArray,35048),wt.enableAttribute(n.uv),Mt.vertexAttribPointer(n.uv,2,5126,!1,0,0)),object.hasColors&&(Mt.bindBuffer(34962,e.color),Mt.bufferData(34962,object.colorArray,35048),wt.enableAttribute(n.color),Mt.vertexAttribPointer(n.color,3,5126,!1,0,0)),wt.disableUnusedAttributes(),Mt.drawArrays(4,0,object.count),object.count=0},this.renderBufferDirect=function(t,e,n,r,object,o){null===e&&(e=Q);const c=object.isMesh&&object.matrixWorld.determinant()<0,l=Bt(t,e,r,object);et.setMaterial(r,c);let h=n.index;const d=n.attributes.position;if(null===h){if(void 0===d||0===d.count)return}else if(0===h.count)return;let f,m=1;!0===r.wireframe&&(h=lt.getWireframeAttribute(n),m=2),(r.morphTargets||r.morphNormals)&&yt.update(object,n,r,l),wt.setup(object,r,l,n,h);let v=xt;null!==h&&(f=ct.get(h),v=_t,v.setIndex(f));const y=null!==h?h.count:d.count,x=n.drawRange.start*m,_=n.drawRange.count*m,w=null!==o?o.start*m:0,M=null!==o?o.count*m:1/0,S=Math.max(x,w),T=Math.min(y,x+_,w+M)-1,E=Math.max(0,T-S+1);if(0!==E){if(object.isMesh)!0===r.wireframe?(et.setLineWidth(r.wireframeLinewidth*K()),v.setMode(1)):v.setMode(4);else if(object.isLine){let t=r.linewidth;void 0===t&&(t=1),et.setLineWidth(t*K()),object.isLineSegments?v.setMode(1):object.isLineLoop?v.setMode(2):v.setMode(3)}else object.isPoints?v.setMode(0):object.isSprite&&v.setMode(4);if(object.isInstancedMesh)v.renderInstances(S,E,object.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);v.renderInstances(S,E,t)}else v.render(S,E)}},this.compile=function(t,e){_=mt.get(t,e),_.init(),t.traverseVisible((function(object){object.isLight&&object.layers.test(e.layers)&&(_.pushLight(object),object.castShadow&&_.pushShadow(object))})),_.setupLights(e);const n=new WeakMap;t.traverse((function(object){const e=object.material;if(e)if(Array.isArray(e))for(let i=0;i<e.length;i++){const r=e[i];!1===n.has(r)&&(Ut(r,t,object),n.set(r))}else!1===n.has(e)&&(Ut(e,t,object),n.set(e))}))};let Nt=null;const It=new dn;function Dt(object,t,e,n){if(!1===object.visible)return;if(object.layers.test(t.layers))if(object.isGroup)e=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(t);else if(object.isLight)_.pushLight(object),object.castShadow&&_.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||j.intersectsSprite(object)){n&&J.setFromMatrixPosition(object.matrixWorld).applyMatrix4(Z);const t=ht.update(object),r=object.material;r.visible&&v.push(object,t,r,e,J.z,null)}}else if(object.isImmediateRenderObject)n&&J.setFromMatrixPosition(object.matrixWorld).applyMatrix4(Z),v.push(object,null,object.material,e,J.z,null);else if((object.isMesh||object.isLine||object.isPoints)&&(object.isSkinnedMesh&&object.skeleton.frame!==nt.render.frame&&(object.skeleton.update(),object.skeleton.frame=nt.render.frame),!object.frustumCulled||j.intersectsObject(object))){n&&J.setFromMatrixPosition(object.matrixWorld).applyMatrix4(Z);const t=ht.update(object),r=object.material;if(Array.isArray(r)){const n=t.groups;for(let i=0,o=n.length;i<o;i++){const o=n[i],c=r[o.materialIndex];c&&c.visible&&v.push(object,t,c,e,J.z,o)}}else r.visible&&v.push(object,t,r,e,J.z,null)}const r=object.children;for(let i=0,o=r.length;i<o;i++)Dt(r[i],t,e,n)}function Ot(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,o=t.length;i<o;i++){const o=t[i],object=o.object,c=o.geometry,l=null===r?o.material:r,h=o.group;if(n.isArrayCamera){I=n;const t=n.cameras;for(let n=0,r=t.length;n<r;n++){const r=t[n];object.layers.test(r.layers)&&(et.viewport(D.copy(r.viewport)),_.setupLights(r),zt(object,e,r,c,l,h))}}else I=null,zt(object,e,n,c,l,h)}}function zt(object,t,e,n,r,o){if(object.onBeforeRender(w,t,e,n,r,o),_=mt.get(t,I||e),object.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,object.matrixWorld),object.normalMatrix.getNormalMatrix(object.modelViewMatrix),object.isImmediateRenderObject){const n=Bt(e,t,r,object);et.setMaterial(r),wt.reset(),function(object,t){object.render((function(object){w.renderBufferImmediate(object,t)}))}(object,n)}else w.renderBufferDirect(e,t,n,r,object,o);object.onAfterRender(w,t,e,n,r,o),_=mt.get(t,I||e)}function Ut(t,e,object){!0!==e.isScene&&(e=Q);const n=it.get(t),r=_.state.lights,o=_.state.shadowsArray,c=r.state.version,l=ut.getParameters(t,r.state,o,e,object),h=ut.getProgramCacheKey(l);let d=n.program,f=!0;if(void 0===d)t.addEventListener("dispose",Pt);else if(d.cacheKey!==h)Ct(t);else if(n.lightsStateVersion!==c)f=!1;else{if(void 0!==l.shaderID){const r=t.isMeshStandardMaterial?e.environment:null;return void(n.envMap=st.get(t.envMap||r))}f=!1}f&&(l.uniforms=ut.getUniforms(t),t.onBeforeCompile(l,w),d=ut.acquireProgram(l,h),n.program=d,n.uniforms=l.uniforms,n.outputEncoding=l.outputEncoding);const m=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=gt.numPlanes,n.numIntersection=gt.numIntersection,m.clippingPlanes=gt.uniform),n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=st.get(t.envMap||n.environment),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=c,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.directionalLightShadows.value=r.state.directionalShadow,m.spotLights.value=r.state.spot,m.spotLightShadows.value=r.state.spotShadow,m.rectAreaLights.value=r.state.rectArea,m.ltc_1.value=r.state.rectAreaLTC1,m.ltc_2.value=r.state.rectAreaLTC2,m.pointLights.value=r.state.point,m.pointLightShadows.value=r.state.pointShadow,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);const v=n.program.getUniforms(),y=Ri.seqWithValue(v.seq,m);n.uniformsList=y}function Bt(t,e,n,object){!0!==e.isScene&&(e=Q),ot.resetTextureUnits();const r=e.fog,o=n.isMeshStandardMaterial?e.environment:null,c=null===L?w.outputEncoding:L.texture.encoding,l=st.get(n.envMap||o),h=it.get(n),d=_.state.lights;if(!0===X&&(!0===Y||t!==N)){const e=t===N&&n.id===P;gt.setState(n,t,e)}n.version===h.__version?n.fog&&h.fog!==r||h.environment!==o||h.needsLights&&h.lightsStateVersion!==d.state.version?Ut(n,e,object):void 0===h.numClippingPlanes||h.numClippingPlanes===gt.numPlanes&&h.numIntersection===gt.numIntersection?(h.outputEncoding!==c||h.envMap!==l)&&Ut(n,e,object):Ut(n,e,object):(Ut(n,e,object),h.__version=n.version);let f=!1,m=!1,v=!1;const x=h.program,M=x.getUniforms(),S=h.uniforms;if(et.useProgram(x.program)&&(f=!0,m=!0,v=!0),n.id!==P&&(P=n.id,m=!0),f||N!==t){if(M.setValue(Mt,"projectionMatrix",t.projectionMatrix),tt.logarithmicDepthBuffer&&M.setValue(Mt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),N!==t&&(N=t,m=!0,v=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=M.map.cameraPosition;void 0!==e&&e.setValue(Mt,J.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&M.setValue(Mt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&M.setValue(Mt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){M.setOptional(Mt,object,"bindMatrix"),M.setOptional(Mt,object,"bindMatrixInverse");const t=object.skeleton;if(t){const e=t.bones;if(tt.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=y.ceilPowerOfTwo(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(t.boneMatrices);const o=new cn(r,n,n,1023,1015);t.boneMatrices=r,t.boneTexture=o,t.boneTextureSize=n}M.setValue(Mt,"boneTexture",t.boneTexture,ot),M.setValue(Mt,"boneTextureSize",t.boneTextureSize)}else M.setOptional(Mt,t,"boneMatrices")}}var T,E;return(m||h.receiveShadow!==object.receiveShadow)&&(h.receiveShadow=object.receiveShadow,M.setValue(Mt,"receiveShadow",object.receiveShadow)),m&&(M.setValue(Mt,"toneMappingExposure",w.toneMappingExposure),h.needsLights&&(E=v,(T=S).ambientLightColor.needsUpdate=E,T.lightProbe.needsUpdate=E,T.directionalLights.needsUpdate=E,T.directionalLightShadows.needsUpdate=E,T.pointLights.needsUpdate=E,T.pointLightShadows.needsUpdate=E,T.spotLights.needsUpdate=E,T.spotLightShadows.needsUpdate=E,T.rectAreaLights.needsUpdate=E,T.hemisphereLights.needsUpdate=E),r&&n.fog&&pt.refreshFogUniforms(S,r),pt.refreshMaterialUniforms(S,n,F,B),Ri.upload(Mt,h.uniformsList,S,ot)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ri.upload(Mt,h.uniformsList,S,ot),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&M.setValue(Mt,"center",object.center),M.setValue(Mt,"modelViewMatrix",object.modelViewMatrix),M.setValue(Mt,"normalMatrix",object.normalMatrix),M.setValue(Mt,"modelMatrix",object.matrixWorld),x}It.setAnimationLoop((function(time){Et.isPresenting||Nt&&Nt(time)})),"undefined"!=typeof window&&It.setContext(window),this.setAnimationLoop=function(t){Nt=t,Et.setAnimationLoop(t),null===t?It.stop():It.start()},this.render=function(t,e){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===M)return;wt.resetDefaultState(),P=-1,N=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Et.enabled&&!0===Et.isPresenting&&(e=Et.getCamera(e)),!0===t.isScene&&t.onBeforeRender(w,t,e,n||L),_=mt.get(t,e),_.init(),Z.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),j.setFromProjectionMatrix(Z),Y=this.localClippingEnabled,X=gt.init(this.clippingPlanes,Y,e),v=ft.get(t,e),v.init(),Dt(t,e,0,w.sortObjects),v.finish(),!0===w.sortObjects&&v.sort(H,G),!0===X&&gt.beginShadows();const o=_.state.shadowsArray;At.render(o,t,e),_.setupLights(e),!0===X&&gt.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),vt.render(v,t,e,r);const c=v.opaque,l=v.transparent;c.length>0&&Ot(c,t,e),l.length>0&&Ot(l,t,e),!0===t.isScene&&t.onAfterRender(w,t,e),null!==L&&(ot.updateRenderTargetMipmap(L),ot.updateMultisampleRenderTarget(L)),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1),v=null,_=null},this.setFramebuffer=function(t){S!==t&&null===L&&Mt.bindFramebuffer(36160,t),S=t},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return E},this.getRenderList=function(){return v},this.setRenderList=function(t){v=t},this.getRenderState=function(){return _},this.setRenderState=function(t){_=t},this.getRenderTarget=function(){return L},this.setRenderTarget=function(t,e=0,n=0){L=t,T=e,E=n,t&&void 0===it.get(t).__webglFramebuffer&&ot.setupRenderTarget(t);let r=S,o=!1;if(t){const n=it.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=n[e],o=!0):r=t.isWebGLMultisampleRenderTarget?it.get(t).__webglMultisampledFramebuffer:n,D.copy(t.viewport),O.copy(t.scissor),z=t.scissorTest}else D.copy(k).multiplyScalar(F).floor(),O.copy(V).multiplyScalar(F).floor(),z=W;if(R!==r&&(Mt.bindFramebuffer(36160,r),R=r),et.viewport(D),et.scissor(O),et.setScissorTest(z),o){const r=it.get(t.texture);Mt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}},this.readRenderTargetPixels=function(t,e,n,r,o,c,l){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let h=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==l&&(h=h[l]),h){let l=!1;h!==R&&(Mt.bindFramebuffer(36160,h),l=!0);try{const h=t.texture,d=h.format,f=h.type;if(1023!==d&&bt.convert(d)!==Mt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===f||bt.convert(f)===Mt.getParameter(35738)||1015===f&&(tt.isWebGL2||$.get("OES_texture_float")||$.get("WEBGL_color_buffer_float"))||1016===f&&(tt.isWebGL2?$.get("EXT_color_buffer_float"):$.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Mt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-o&&Mt.readPixels(e,n,r,o,bt.convert(d),bt.convert(f),c):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{l&&Mt.bindFramebuffer(36160,R)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),o=Math.floor(e.image.width*r),c=Math.floor(e.image.height*r),l=bt.convert(e.format);ot.setTexture2D(e,0),Mt.copyTexImage2D(3553,n,l,t.x,t.y,o,c,0),et.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const o=e.image.width,c=e.image.height,l=bt.convert(n.format),h=bt.convert(n.type);ot.setTexture2D(n,0),Mt.pixelStorei(37440,n.flipY),Mt.pixelStorei(37441,n.premultiplyAlpha),Mt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?Mt.texSubImage2D(3553,r,t.x,t.y,o,c,l,h,e.image.data):e.isCompressedTexture?Mt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,l,e.mipmaps[0].data):Mt.texSubImage2D(3553,r,t.x,t.y,l,h,e.image),0===r&&n.generateMipmaps&&Mt.generateMipmap(3553),et.unbindTexture()},this.initTexture=function(t){ot.setTexture2D(t,0),et.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Mr(t){wr.call(this,t)}gr.prototype=Object.assign(Object.create(rn.prototype),{constructor:gr,isArrayCamera:!0}),vr.prototype=Object.assign(Object.create(It.prototype),{constructor:vr,isGroup:!0}),Object.assign(yr.prototype,{constructor:yr,getHandSpace:function(){if(null===this._hand&&(this._hand=new vr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let i=0;i<=window.XRHand.LITTLE_PHALANX_TIP;i++){const t=new vr;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new vr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new vr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let r=null,o=null,c=null;const l=this._targetRay,h=this._grip,d=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(d&&t.hand){c=!0;for(let i=0;i<=window.XRHand.LITTLE_PHALANX_TIP;i++)if(t.hand[i]){const r=e.getJointPose(t.hand[i],n),o=d.joints[i];null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=r.radius),o.visible=null!==r;const c=d.joints[window.XRHand.INDEX_PHALANX_TIP],l=d.joints[window.XRHand.THUMB_PHALANX_TIP],h=c.position.distanceTo(l.position),f=.02,m=.005;d.inputState.pinching&&h>f+m?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!d.inputState.pinching&&h<=f-m&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else null!==l&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale))),null!==h&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),null!==o&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale)));return null!==l&&(l.visible=null!==r),null!==h&&(h.visible=null!==o),null!==d&&(d.visible=null!==c),this}}),Object.assign(xr.prototype,f.prototype),Mr.prototype=Object.assign(Object.create(wr.prototype),{constructor:Mr,isWebGL1Renderer:!0});class Sr extends It{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(source,t){return super.copy(source,t),null!==source.background&&(this.background=source.background.clone()),null!==source.environment&&(this.environment=source.environment.clone()),null!==source.fog&&(this.fog=source.fog.clone()),null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone()),this.autoUpdate=source.autoUpdate,this.matrixAutoUpdate=source.matrixAutoUpdate,this}toJSON(meta){const data=super.toJSON(meta);return null!==this.background&&(data.object.background=this.background.toJSON(meta)),null!==this.environment&&(data.object.environment=this.environment.toJSON(meta)),null!==this.fog&&(data.object.fog=this.fog.toJSON()),data}}function Tr(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=y.generateUUID()}Object.defineProperty(Tr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Tr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(source){return this.array=new source.array.constructor(source.array),this.count=source.count,this.stride=source.stride,this.usage=source.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(data){void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=y.generateUUID()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new Tr(new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(data){return void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=y.generateUUID()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Er=new C;function Ar(t,e,n,r){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}function Lr(t){re.call(this),this.type="SpriteMaterial",this.color=new ee(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let Rr;Object.defineProperties(Ar.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Ar.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let i=0,e=this.data.count;i<e;i++)Er.x=this.getX(i),Er.y=this.getY(i),Er.z=this.getZ(i),Er.applyMatrix4(t),this.setXYZ(i,Er.x,Er.y,Er.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this},setXYZW:function(t,e,n,r,o){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=o,this},clone:function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return new ce(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data)),new Ar(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),Lr.prototype=Object.create(re.prototype),Lr.prototype.constructor=Lr,Lr.prototype.isSpriteMaterial=!0,Lr.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.rotation=source.rotation,this.sizeAttenuation=source.sizeAttenuation,this};const Pr=new C,Cr=new C,Nr=new C,Ir=new x,Dr=new x,Or=new at,zr=new C,Ur=new C,Br=new C,Fr=new x,Hr=new x,Gr=new x;function kr(t){if(It.call(this),this.type="Sprite",void 0===Rr){Rr=new Pe;const t=new Tr(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Rr.setIndex([0,1,2,0,2,3]),Rr.setAttribute("position",new Ar(t,3,0,!1)),Rr.setAttribute("uv",new Ar(t,2,3,!1))}this.geometry=Rr,this.material=void 0!==t?t:new Lr,this.center=new x(.5,.5)}function Vr(t,e,n,r,o,c){Ir.subVectors(t,n).addScalar(.5).multiply(r),void 0!==o?(Dr.x=c*Ir.x-o*Ir.y,Dr.y=o*Ir.x+c*Ir.y):Dr.copy(Ir),t.copy(e),t.x+=Dr.x,t.y+=Dr.y,t.applyMatrix4(Or)}kr.prototype=Object.assign(Object.create(It.prototype),{constructor:kr,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Cr.setFromMatrixScale(this.matrixWorld),Or.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Nr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Cr.multiplyScalar(-Nr.z);const n=this.material.rotation;let r,o;0!==n&&(o=Math.cos(n),r=Math.sin(n));const c=this.center;Vr(zr.set(-.5,-.5,0),Nr,c,Cr,r,o),Vr(Ur.set(.5,-.5,0),Nr,c,Cr,r,o),Vr(Br.set(.5,.5,0),Nr,c,Cr,r,o),Fr.set(0,0),Hr.set(1,0),Gr.set(1,1);let l=t.ray.intersectTriangle(zr,Ur,Br,!1,Pr);if(null===l&&(Vr(Ur.set(-.5,.5,0),Nr,c,Cr,r,o),Hr.set(0,1),l=t.ray.intersectTriangle(zr,Br,Ur,!1,Pr),null===l))return;const h=t.ray.origin.distanceTo(Pr);h<t.near||h>t.far||e.push({distance:h,point:Pr.clone(),uv:Yt.getUV(Pr,zr,Ur,Br,Fr,Hr,Gr,new x),face:null,object:this})},copy:function(source){return It.prototype.copy.call(this,source),void 0!==source.center&&this.center.copy(source.center),this.material=source.material,this}});const Wr=new C,jr=new C;function qr(){It.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Xr(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Ye.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new at,this.bindMatrixInverse=new at}function Yr(){It.call(this),this.type="Bone"}qr.prototype=Object.assign(Object.create(It.prototype),{constructor:qr,isLOD:!0,copy:function(source){It.prototype.copy.call(this,source,!1);const t=source.levels;for(let i=0,e=t.length;i<e;i++){const e=t[i];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=source.autoUpdate,this},addLevel:function(object,t=0){t=Math.abs(t);const e=this.levels;let n;for(n=0;n<e.length&&!(t<e[n].distance);n++);return e.splice(n,0,{distance:t,object:object}),this.add(object),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Wr.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Wr);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Wr.setFromMatrixPosition(t.matrixWorld),jr.setFromMatrixPosition(this.matrixWorld);const n=Wr.distanceTo(jr)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(meta){const data=It.prototype.toJSON.call(this,meta);!1===this.autoUpdate&&(data.object.autoUpdate=!1),data.object.levels=[];const t=this.levels;for(let i=0,e=t.length;i<e;i++){const e=t[i];data.object.levels.push({object:e.object.uuid,distance:e.distance})}return data}}),Xr.prototype=Object.assign(Object.create(Ye.prototype),{constructor:Xr,isSkinnedMesh:!0,copy:function(source){return Ye.prototype.copy.call(this,source),this.bindMode=source.bindMode,this.bindMatrix.copy(source.bindMatrix),this.bindMatrixInverse.copy(source.bindMatrixInverse),this.skeleton=source.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new A,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Ye.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new C,e=new A,n=new A,r=new C,o=new at;return function(c,l){const h=this.skeleton,d=this.geometry;e.fromBufferAttribute(d.attributes.skinIndex,c),n.fromBufferAttribute(d.attributes.skinWeight,c),t.fromBufferAttribute(d.attributes.position,c).applyMatrix4(this.bindMatrix),l.set(0,0,0);for(let i=0;i<4;i++){const c=n.getComponent(i);if(0!==c){const n=e.getComponent(i);o.multiplyMatrices(h.bones[n].matrixWorld,h.boneInverses[n]),l.addScaledVector(r.copy(t).applyMatrix4(o),c)}}return l.applyMatrix4(this.bindMatrixInverse)}}()}),Yr.prototype=Object.assign(Object.create(It.prototype),{constructor:Yr,isBone:!0});const Zr=new at,Jr=new at;function Qr(t=[],e=[]){this.uuid=y.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Qr.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,t=this.bones.length;i<t;i++)this.boneInverses.push(new at)}},calculateInverses:function(){this.boneInverses.length=0;for(let i=0,t=this.bones.length;i<t;i++){const t=new at;this.bones[i]&&t.copy(this.bones[i].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let i=0,t=this.bones.length;i<t;i++){const t=this.bones[i];t&&t.matrixWorld.copy(this.boneInverses[i]).invert()}for(let i=0,t=this.bones.length;i<t;i++){const t=this.bones[i];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Jr;Zr.multiplyMatrices(r,e[i]),Zr.toArray(n,16*i)}null!==r&&(r.needsUpdate=!0)},clone:function(){return new Qr(this.bones,this.boneInverses)},getBoneByName:function(t){for(let i=0,e=this.bones.length;i<e;i++){const e=this.bones[i];if(e.name===t)return e}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let r=e[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new Yr),this.bones.push(r),this.boneInverses.push((new at).fromArray(t.boneInverses[i]))}return this.init(),this},toJSON:function(){const data={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};data.uuid=this.uuid;const t=this.bones,e=this.boneInverses;for(let i=0,n=t.length;i<n;i++){const n=t[i];data.bones.push(n.uuid);const r=e[i];data.boneInverses.push(r.toArray())}return data}});const Kr=new at,$r=new at,to=[],eo=new Ye;function no(t,e,n){Ye.call(this,t,e),this.instanceMatrix=new ce(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function io(t){re.call(this),this.type="LineBasicMaterial",this.color=new ee(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}no.prototype=Object.assign(Object.create(Ye.prototype),{constructor:no,isInstancedMesh:!0,copy:function(source){return Ye.prototype.copy.call(this,source),this.instanceMatrix.copy(source.instanceMatrix),this.count=source.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,r=this.count;if(eo.geometry=this.geometry,eo.material=this.material,void 0!==eo.material)for(let o=0;o<r;o++){this.getMatrixAt(o,Kr),$r.multiplyMatrices(n,Kr),eo.matrixWorld=$r,eo.raycast(t,to);for(let i=0,t=to.length;i<t;i++){const t=to[i];t.instanceId=o,t.object=this,e.push(t)}to.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new ce(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),io.prototype=Object.create(re.prototype),io.prototype.constructor=io,io.prototype.isLineBasicMaterial=!0,io.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.linewidth=source.linewidth,this.linecap=source.linecap,this.linejoin=source.linejoin,this.morphTargets=source.morphTargets,this};const ro=new C,oo=new C,so=new at,ao=new st,co=new Q;function lo(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),It.call(this),this.type="Line",this.geometry=void 0!==t?t:new Pe,this.material=void 0!==e?e:new io,this.updateMorphTargets()}lo.prototype=Object.assign(Object.create(It.prototype),{constructor:lo,isLine:!0,copy:function(source){return It.prototype.copy.call(this,source),this.material=source.material,this.geometry=source.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let i=1,t=e.count;i<t;i++)ro.fromBufferAttribute(e,i-1),oo.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=ro.distanceTo(oo);t.setAttribute("lineDistance",new ve(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let i=1,t=e.length;i<t;i++)n[i]=n[i-1],n[i]+=e[i-1].distanceTo(e[i])}return this},raycast:function(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),co.copy(n.boundingSphere),co.applyMatrix4(r),co.radius+=o,!1===t.ray.intersectsSphere(co))return;so.copy(r).invert(),ao.copy(t.ray).applyMatrix4(so);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),l=c*c,h=new C,d=new C,f=new C,m=new C,v=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){const n=r.array;for(let i=0,r=n.length-1;i<r;i+=v){const a=n[i],b=n[i+1];h.fromBufferAttribute(o,a),d.fromBufferAttribute(o,b);if(ao.distanceSqToSegment(h,d,m,f)>l)continue;m.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(m);r<t.near||r>t.far||e.push({distance:r,point:f.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else for(let i=0,n=o.count-1;i<n;i+=v){h.fromBufferAttribute(o,i),d.fromBufferAttribute(o,i+1);if(ao.distanceSqToSegment(h,d,m,f)>l)continue;m.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(m);n<t.near||n>t.far||e.push({distance:n,point:f.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const r=n.vertices,o=r.length;for(let i=0;i<o-1;i+=v){if(ao.distanceSqToSegment(r[i],r[i+1],m,f)>l)continue;m.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(m);n<t.near||n>t.far||e.push({distance:n,point:f.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const ho=new C,uo=new C;function po(t,e){lo.call(this,t,e),this.type="LineSegments"}function fo(t,e){lo.call(this,t,e),this.type="LineLoop"}function mo(t){re.call(this),this.type="PointsMaterial",this.color=new ee(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}po.prototype=Object.assign(Object.create(lo.prototype),{constructor:po,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let i=0,t=e.count;i<t;i+=2)ho.fromBufferAttribute(e,i),uo.fromBufferAttribute(e,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+ho.distanceTo(uo);t.setAttribute("lineDistance",new ve(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let i=0,t=e.length;i<t;i+=2)ho.copy(e[i]),uo.copy(e[i+1]),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+ho.distanceTo(uo)}return this}}),fo.prototype=Object.assign(Object.create(lo.prototype),{constructor:fo,isLineLoop:!0}),mo.prototype=Object.create(re.prototype),mo.prototype.constructor=mo,mo.prototype.isPointsMaterial=!0,mo.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.size=source.size,this.sizeAttenuation=source.sizeAttenuation,this.morphTargets=source.morphTargets,this};const go=new at,vo=new st,yo=new Q,xo=new C;function _o(t,e){It.call(this),this.type="Points",this.geometry=void 0!==t?t:new Pe,this.material=void 0!==e?e:new mo,this.updateMorphTargets()}function bo(t,e,n,r,o,c,object){const l=vo.distanceSqToPoint(t);if(l<n){const n=new C;vo.closestPointToPoint(t,n),n.applyMatrix4(r);const h=o.ray.origin.distanceTo(n);if(h<o.near||h>o.far)return;c.push({distance:h,distanceToRay:Math.sqrt(l),point:n,index:e,face:null,object:object})}}function wo(video,t,e,n,r,o,c,l,h){T.call(this,video,t,e,n,r,o,c,l,h),this.format=void 0!==c?c:1022,this.minFilter=void 0!==o?o:1006,this.magFilter=void 0!==r?r:1006,this.generateMipmaps=!1;const d=this;"requestVideoFrameCallback"in video&&video.requestVideoFrameCallback((function t(){d.needsUpdate=!0,video.requestVideoFrameCallback(t)}))}function Mo(t,e,n,r,o,c,l,h,d,f,m,v){T.call(this,null,c,l,h,d,f,r,o,m,v),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function So(canvas,t,e,n,r,o,c,l,h){T.call(this,canvas,t,e,n,r,o,c,l,h),this.needsUpdate=!0}function To(t,e,n,r,o,c,l,h,d,f){if(1026!==(f=void 0!==f?f:1026)&&1027!==f)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===f&&(n=1012),void 0===n&&1027===f&&(n=1020),T.call(this,null,r,o,c,l,h,f,n,d),this.image={width:t,height:e},this.magFilter=void 0!==l?l:1003,this.minFilter=void 0!==h?h:1003,this.flipY=!1,this.generateMipmaps=!1}_o.prototype=Object.assign(Object.create(It.prototype),{constructor:_o,isPoints:!0,copy:function(source){return It.prototype.copy.call(this,source),this.material=source.material,this.geometry=source.geometry,this},raycast:function(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),yo.copy(n.boundingSphere),yo.applyMatrix4(r),yo.radius+=o,!1===t.ray.intersectsSphere(yo))return;go.copy(r).invert(),vo.copy(t.ray).applyMatrix4(go);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),l=c*c;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position;if(null!==o){const n=o.array;for(let i=0,o=n.length;i<o;i++){const a=n[i];xo.fromBufferAttribute(c,a),bo(xo,a,l,r,t,e,this)}}else for(let i=0,n=c.count;i<n;i++)xo.fromBufferAttribute(c,i),bo(xo,i,l,r,t,e,this)}else{const o=n.vertices;for(let i=0,n=o.length;i<n;i++)bo(o[i],i,l,r,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),wo.prototype=Object.assign(Object.create(T.prototype),{constructor:wo,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const video=this.image;!1==="requestVideoFrameCallback"in video&&video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Mo.prototype=Object.create(T.prototype),Mo.prototype.constructor=Mo,Mo.prototype.isCompressedTexture=!0,So.prototype=Object.create(T.prototype),So.prototype.constructor=So,So.prototype.isCanvasTexture=!0,To.prototype=Object.create(T.prototype),To.prototype.constructor=To,To.prototype.isDepthTexture=!0;let Eo=0;const Ao=new at,Lo=new It,Ro=new C;function Po(){Object.defineProperty(this,"id",{value:Eo+=2}),this.uuid=y.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Po.prototype=Object.assign(Object.create(f.prototype),{constructor:Po,isGeometry:!0,applyMatrix4:function(t){const e=(new _).getNormalMatrix(t);for(let i=0,e=this.vertices.length;i<e;i++){this.vertices[i].applyMatrix4(t)}for(let i=0,t=this.faces.length;i<t;i++){const t=this.faces[i];t.normal.applyMatrix3(e).normalize();for(let n=0,r=t.vertexNormals.length;n<r;n++)t.vertexNormals[n].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Ao.makeRotationX(t),this.applyMatrix4(Ao),this},rotateY:function(t){return Ao.makeRotationY(t),this.applyMatrix4(Ao),this},rotateZ:function(t){return Ao.makeRotationZ(t),this.applyMatrix4(Ao),this},translate:function(t,e,n){return Ao.makeTranslation(t,e,n),this.applyMatrix4(Ao),this},scale:function(t,e,n){return Ao.makeScale(t,e,n),this.applyMatrix4(Ao),this},lookAt:function(t){return Lo.lookAt(t),Lo.updateMatrix(),this.applyMatrix4(Lo.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,r=t.attributes;if(void 0===r.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const o=r.position,c=r.normal,l=r.color,h=r.uv,d=r.uv2;void 0!==d&&(this.faceVertexUvs[1]=[]);for(let i=0;i<o.count;i++)e.vertices.push((new C).fromBufferAttribute(o,i)),void 0!==l&&e.colors.push((new ee).fromBufferAttribute(l,i));function f(a,b,t,n){const r=void 0===l?[]:[e.colors[a].clone(),e.colors[b].clone(),e.colors[t].clone()],o=void 0===c?[]:[(new C).fromBufferAttribute(c,a),(new C).fromBufferAttribute(c,b),(new C).fromBufferAttribute(c,t)],f=new ne(a,b,t,o,r,n);e.faces.push(f),void 0!==h&&e.faceVertexUvs[0].push([(new x).fromBufferAttribute(h,a),(new x).fromBufferAttribute(h,b),(new x).fromBufferAttribute(h,t)]),void 0!==d&&e.faceVertexUvs[1].push([(new x).fromBufferAttribute(d,a),(new x).fromBufferAttribute(d,b),(new x).fromBufferAttribute(d,t)])}const m=t.groups;if(m.length>0)for(let i=0;i<m.length;i++){const t=m[i],e=t.start;for(let r=e,o=e+t.count;r<o;r+=3)void 0!==n?f(n.getX(r),n.getX(r+1),n.getX(r+2),t.materialIndex):f(r,r+1,r+2,t.materialIndex)}else if(void 0!==n)for(let i=0;i<n.count;i+=3)f(n.getX(i),n.getX(i+1),n.getX(i+2));else for(let i=0;i<o.count;i+=3)f(i,i+1,i+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ro).negate(),this.translate(Ro.x,Ro.y,Ro.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,s=0===e?1:1/e,n=new at;return n.set(s,0,0,-s*t.x,0,s,0,-s*t.y,0,0,s,-s*t.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const t=new C,e=new C;for(let n=0,r=this.faces.length;n<r;n++){const r=this.faces[n],o=this.vertices[r.a],c=this.vertices[r.b],l=this.vertices[r.c];t.subVectors(l,c),e.subVectors(o,c),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t=!0){const e=new Array(this.vertices.length);for(let t=0,n=this.vertices.length;t<n;t++)e[t]=new C;if(t){const t=new C,n=new C;for(let r=0,o=this.faces.length;r<o;r++){const o=this.faces[r],c=this.vertices[o.a],l=this.vertices[o.b],h=this.vertices[o.c];t.subVectors(h,l),n.subVectors(c,l),t.cross(n),e[o.a].add(t),e[o.b].add(t),e[o.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let t=0,n=this.vertices.length;t<n;t++)e[t].normalize();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],r=n.vertexNormals;3===r.length?(r[0].copy(e[n.a]),r[1].copy(e[n.b]),r[2].copy(e[n.c])):(r[0]=e[n.a].clone(),r[1]=e[n.b].clone(),r[2]=e[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(let i=0,t=e.vertexNormals.length;i<t;i++)e.__originalVertexNormals[i]?e.__originalVertexNormals[i].copy(e.vertexNormals[i]):e.__originalVertexNormals[i]=e.vertexNormals[i].clone()}const t=new Po;t.faces=this.faces;for(let i=0,e=this.morphTargets.length;i<e;i++){if(!this.morphNormals[i]){this.morphNormals[i]={},this.morphNormals[i].faceNormals=[],this.morphNormals[i].vertexNormals=[];const t=this.morphNormals[i].faceNormals,e=this.morphNormals[i].vertexNormals;for(let n=0,r=this.faces.length;n<r;n++){const n=new C,r={a:new C,b:new C,c:new C};t.push(n),e.push(r)}}const e=this.morphNormals[i];t.vertices=this.morphTargets[i].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],r=e.faceNormals[t],o=e.vertexNormals[t];r.copy(n.normal),o.a.copy(n.vertexNormals[0]),o.b.copy(n.vertexNormals[1]),o.c.copy(n.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new D),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Q),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n=0){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let r;const o=this.vertices.length,c=this.vertices,l=t.vertices,h=this.faces,d=t.faces,f=this.colors,m=t.colors;void 0!==e&&(r=(new _).getNormalMatrix(e));for(let i=0,t=l.length;i<t;i++){const t=l[i].clone();void 0!==e&&t.applyMatrix4(e),c.push(t)}for(let i=0,t=m.length;i<t;i++)f.push(m[i].clone());for(let i=0,t=d.length;i<t;i++){const t=d[i];let e,c;const l=t.vertexNormals,f=t.vertexColors,m=new ne(t.a+o,t.b+o,t.c+o);m.normal.copy(t.normal),void 0!==r&&m.normal.applyMatrix3(r).normalize();for(let t=0,n=l.length;t<n;t++)e=l[t].clone(),void 0!==r&&e.applyMatrix3(r).normalize(),m.vertexNormals.push(e);m.color.copy(t.color);for(let t=0,e=f.length;t<e;t++)c=f[t],m.vertexColors.push(c.clone());m.materialIndex=t.materialIndex+n,h.push(m)}for(let i=0,e=t.faceVertexUvs.length;i<e;i++){const e=t.faceVertexUvs[i];void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);for(let t=0,n=e.length;t<n;t++){const n=e[t],r=[];for(let t=0,e=n.length;t<e;t++)r.push(n[t].clone());this.faceVertexUvs[i].push(r)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(t=4){const e={},n=[],r=[],o=Math.pow(10,t);for(let i=0,t=this.vertices.length;i<t;i++){const t=this.vertices[i],c=Math.round(t.x*o)+"_"+Math.round(t.y*o)+"_"+Math.round(t.z*o);void 0===e[c]?(e[c]=i,n.push(this.vertices[i]),r[i]=n.length-1):r[i]=r[e[c]]}const c=[];for(let i=0,t=this.faces.length;i<t;i++){const t=this.faces[i];t.a=r[t.a],t.b=r[t.b],t.c=r[t.c];const e=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(e[t]===e[(t+1)%3]){c.push(i);break}}for(let i=c.length-1;i>=0;i--){const t=c[i];this.faces.splice(t,1);for(let e=0,n=this.faceVertexUvs.length;e<n;e++)this.faceVertexUvs[e].splice(t,1)}const l=this.vertices.length-n.length;return this.vertices=n,l},setFromPoints:function(t){this.vertices=[];for(let i=0,e=t.length;i<e;i++){const e=t[i];this.vertices.push(new C(e.x,e.y,e.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let i=0;i<e;i++)t[i]._id=i;t.sort((function(a,b){return a.materialIndex-b.materialIndex}));const n=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let o,c;n&&n.length===e&&(o=[]),r&&r.length===e&&(c=[]);for(let i=0;i<e;i++){const e=t[i]._id;o&&o.push(n[e]),c&&c.push(r[e])}o&&(this.faceVertexUvs[0]=o),c&&(this.faceVertexUvs[1]=c)},toJSON:function(){const data={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const e in t)void 0!==t[e]&&(data[e]=t[e]);return data}const t=[];for(let i=0;i<this.vertices.length;i++){const e=this.vertices[i];t.push(e.x,e.y,e.z)}const e=[],n=[],r={},o=[],c={},l=[],h={};for(let i=0;i<this.faces.length;i++){const t=this.faces[i],n=!0,r=!1,o=void 0!==this.faceVertexUvs[0][i],c=t.normal.length()>0,l=t.vertexNormals.length>0,h=1!==t.color.r||1!==t.color.g||1!==t.color.b,y=t.vertexColors.length>0;let x=0;if(x=d(x,0,0),x=d(x,1,n),x=d(x,2,r),x=d(x,3,o),x=d(x,4,c),x=d(x,5,l),x=d(x,6,h),x=d(x,7,y),e.push(x),e.push(t.a,t.b,t.c),e.push(t.materialIndex),o){const t=this.faceVertexUvs[0][i];e.push(v(t[0]),v(t[1]),v(t[2]))}if(c&&e.push(f(t.normal)),l){const n=t.vertexNormals;e.push(f(n[0]),f(n[1]),f(n[2]))}if(h&&e.push(m(t.color)),y){const n=t.vertexColors;e.push(m(n[0]),m(n[1]),m(n[2]))}}function d(t,e,n){return n?t|1<<e:t&~(1<<e)}function f(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==r[e]||(r[e]=n.length/3,n.push(t.x,t.y,t.z)),r[e]}function m(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==c[e]||(c[e]=o.length,o.push(t.getHex())),c[e]}function v(t){const e=t.x.toString()+t.y.toString();return void 0!==h[e]||(h[e]=l.length/2,l.push(t.x,t.y)),h[e]}return data.data={},data.data.vertices=t,data.data.normals=n,o.length>0&&(data.data.colors=o),l.length>0&&(data.data.uvs=[l]),data.data.faces=e,data},clone:function(){return(new Po).copy(this)},copy:function(source){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=source.name;const t=source.vertices;for(let i=0,e=t.length;i<e;i++)this.vertices.push(t[i].clone());const e=source.colors;for(let i=0,t=e.length;i<t;i++)this.colors.push(e[i].clone());const n=source.faces;for(let i=0,t=n.length;i<t;i++)this.faces.push(n[i].clone());for(let i=0,t=source.faceVertexUvs.length;i<t;i++){const t=source.faceVertexUvs[i];void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);for(let e=0,n=t.length;e<n;e++){const n=t[e],r=[];for(let t=0,e=n.length;t<e;t++){const e=n[t];r.push(e.clone())}this.faceVertexUvs[i].push(r)}}const r=source.morphTargets;for(let i=0,t=r.length;i<t;i++){const t={};if(t.name=r[i].name,void 0!==r[i].vertices){t.vertices=[];for(let e=0,n=r[i].vertices.length;e<n;e++)t.vertices.push(r[i].vertices[e].clone())}if(void 0!==r[i].normals){t.normals=[];for(let e=0,n=r[i].normals.length;e<n;e++)t.normals.push(r[i].normals[e].clone())}this.morphTargets.push(t)}const o=source.morphNormals;for(let i=0,t=o.length;i<t;i++){const t={};if(void 0!==o[i].vertexNormals){t.vertexNormals=[];for(let e=0,n=o[i].vertexNormals.length;e<n;e++){const n=o[i].vertexNormals[e],r={};r.a=n.a.clone(),r.b=n.b.clone(),r.c=n.c.clone(),t.vertexNormals.push(r)}}if(void 0!==o[i].faceNormals){t.faceNormals=[];for(let e=0,n=o[i].faceNormals.length;e<n;e++)t.faceNormals.push(o[i].faceNormals[e].clone())}this.morphNormals.push(t)}const c=source.skinWeights;for(let i=0,t=c.length;i<t;i++)this.skinWeights.push(c[i].clone());const l=source.skinIndices;for(let i=0,t=l.length;i<t;i++)this.skinIndices.push(l[i].clone());const h=source.lineDistances;for(let i=0,t=h.length;i<t;i++)this.lineDistances.push(h[i]);const d=source.boundingBox;null!==d&&(this.boundingBox=d.clone());const f=source.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),this.elementsNeedUpdate=source.elementsNeedUpdate,this.verticesNeedUpdate=source.verticesNeedUpdate,this.uvsNeedUpdate=source.uvsNeedUpdate,this.normalsNeedUpdate=source.normalsNeedUpdate,this.colorsNeedUpdate=source.colorsNeedUpdate,this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate,this.groupsNeedUpdate=source.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});new C,new C,new C,new Yt;const Co=function(data,t,e){e=e||2;const n=t&&t.length,r=n?t[0]*e:data.length;let o=No(data,0,r,e,!0);const c=[];if(!o||o.next===o.prev)return c;let l,h,d,f,m,v,y;if(n&&(o=function(data,t,e,n){const r=[];let i,o,c,l,h;for(i=0,o=t.length;i<o;i++)c=t[i]*n,l=i<o-1?t[i+1]*n:data.length,h=No(data,c,l,n,!1),h===h.next&&(h.steiner=!0),r.push(Vo(h));for(r.sort(Fo),i=0;i<r.length;i++)Ho(r[i],e),e=Io(e,e.next);return e}(data,t,o,e)),data.length>80*e){l=d=data[0],h=f=data[1];for(let i=e;i<r;i+=e)m=data[i],v=data[i+1],m<l&&(l=m),v<h&&(h=v),m>d&&(d=m),v>f&&(f=v);y=Math.max(d-l,f-h),y=0!==y?1/y:0}return Do(o,c,e,l,h,y),c};function No(data,t,e,n,r){let i,o;if(r===function(data,t,e,n){let r=0;for(let i=t,o=e-n;i<e;i+=n)r+=(data[o]-data[i])*(data[i+1]+data[o+1]),o=i;return r}(data,t,e,n)>0)for(i=t;i<e;i+=n)o=Ko(i,data[i],data[i+1],o);else for(i=e-n;i>=t;i-=n)o=Ko(i,data[i],data[i+1],o);return o&&qo(o,o.next)&&($o(o),o=o.next),o}function Io(t,e){if(!t)return t;e||(e=t);let n,p=t;do{if(n=!1,p.steiner||!qo(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if($o(p),p=e=p.prev,p===p.next)break;n=!0}}while(n||p!==e);return e}function Do(t,e,n,r,o,c,l){if(!t)return;!l&&c&&function(t,e,n,r){let p=t;do{null===p.z&&(p.z=ko(p.x,p.y,e,n,r)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==t);p.prevZ.nextZ=null,p.prevZ=null,function(t){let i,p,q,e,n,r,o,c,l=1;do{for(p=t,t=null,n=null,r=0;p;){for(r++,q=p,o=0,i=0;i<l&&(o++,q=q.nextZ,q);i++);for(c=l;o>0||c>0&&q;)0!==o&&(0===c||!q||p.z<=q.z)?(e=p,p=p.nextZ,o--):(e=q,q=q.nextZ,c--),n?n.nextZ=e:t=e,e.prevZ=n,n=e;p=q}n.nextZ=null,l*=2}while(r>1)}(p)}(t,r,o,c);let h,d,f=t;for(;t.prev!==t.next;)if(h=t.prev,d=t.next,c?zo(t,r,o,c):Oo(t))e.push(h.i/n),e.push(t.i/n),e.push(d.i/n),$o(t),t=d.next,f=d.next;else if((t=d)===f){l?1===l?Do(t=Uo(Io(t),e,n),e,n,r,o,c,2):2===l&&Bo(t,e,n,r,o,c):Do(Io(t),e,n,r,o,c,1);break}}function Oo(t){const a=t.prev,b=t,e=t.next;if(area(a,b,e)>=0)return!1;let p=t.next.next;for(;p!==t.prev;){if(Wo(a.x,a.y,b.x,b.y,e.x,e.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function zo(t,e,n,r){const a=t.prev,b=t,o=t.next;if(area(a,b,o)>=0)return!1;const c=a.x<b.x?a.x<o.x?a.x:o.x:b.x<o.x?b.x:o.x,l=a.y<b.y?a.y<o.y?a.y:o.y:b.y<o.y?b.y:o.y,h=a.x>b.x?a.x>o.x?a.x:o.x:b.x>o.x?b.x:o.x,d=a.y>b.y?a.y>o.y?a.y:o.y:b.y>o.y?b.y:o.y,f=ko(c,l,e,n,r),m=ko(h,d,e,n,r);let p=t.prevZ,v=t.nextZ;for(;p&&p.z>=f&&v&&v.z<=m;){if(p!==t.prev&&p!==t.next&&Wo(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,v!==t.prev&&v!==t.next&&Wo(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}for(;p&&p.z>=f;){if(p!==t.prev&&p!==t.next&&Wo(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;v&&v.z<=m;){if(v!==t.prev&&v!==t.next&&Wo(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function Uo(t,e,n){let p=t;do{const a=p.prev,b=p.next.next;!qo(a,b)&&Xo(a,p,p.next,b)&&Jo(a,b)&&Jo(b,a)&&(e.push(a.i/n),e.push(p.i/n),e.push(b.i/n),$o(p),$o(p.next),p=t=b),p=p.next}while(p!==t);return Io(p)}function Bo(t,e,n,r,o,c){let a=t;do{let b=a.next.next;for(;b!==a.prev;){if(a.i!==b.i&&jo(a,b)){let t=Qo(a,b);return a=Io(a,a.next),t=Io(t,t.next),Do(a,e,n,r,o,c),void Do(t,e,n,r,o,c)}b=b.next}a=a.next}while(a!==t)}function Fo(a,b){return a.x-b.x}function Ho(t,e){if(e=function(t,e){let p=e;const n=t.x,r=t.y;let o,c=-1/0;do{if(r<=p.y&&r>=p.next.y&&p.next.y!==p.y){const t=p.x+(r-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(t<=n&&t>c){if(c=t,t===n){if(r===p.y)return p;if(r===p.next.y)return p.next}o=p.x<p.next.x?p:p.next}}p=p.next}while(p!==e);if(!o)return null;if(n===c)return o;const l=o,h=o.x,d=o.y;let f,m=1/0;p=o;do{n>=p.x&&p.x>=h&&n!==p.x&&Wo(r<d?n:c,r,h,d,r<d?c:n,r,p.x,p.y)&&(f=Math.abs(r-p.y)/(n-p.x),Jo(p,t)&&(f<m||f===m&&(p.x>o.x||p.x===o.x&&Go(o,p)))&&(o=p,m=f)),p=p.next}while(p!==l);return o}(t,e)){const b=Qo(e,t);Io(e,e.next),Io(b,b.next)}}function Go(t,p){return area(t.prev,t,p.prev)<0&&area(p.next,t,t.next)<0}function ko(t,e,n,r,o){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*o)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*o)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Vo(t){let p=t,e=t;do{(p.x<e.x||p.x===e.x&&p.y<e.y)&&(e=p),p=p.next}while(p!==t);return e}function Wo(t,e,n,r,o,c,l,h){return(o-l)*(e-h)-(t-l)*(c-h)>=0&&(t-l)*(r-h)-(n-l)*(e-h)>=0&&(n-l)*(c-h)-(o-l)*(r-h)>=0}function jo(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&Xo(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(Jo(a,b)&&Jo(b,a)&&function(a,b){let p=a,t=!1;const e=(a.x+b.x)/2,n=(a.y+b.y)/2;do{p.y>n!=p.next.y>n&&p.next.y!==p.y&&e<(p.next.x-p.x)*(n-p.y)/(p.next.y-p.y)+p.x&&(t=!t),p=p.next}while(p!==a);return t}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||qo(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,t){return(q.y-p.y)*(t.x-q.x)-(q.x-p.x)*(t.y-q.y)}function qo(t,e){return t.x===e.x&&t.y===e.y}function Xo(t,e,n,r){const o=Zo(area(t,e,n)),c=Zo(area(t,e,r)),l=Zo(area(n,r,t)),h=Zo(area(n,r,e));return o!==c&&l!==h||(!(0!==o||!Yo(t,n,e))||(!(0!==c||!Yo(t,r,e))||(!(0!==l||!Yo(n,t,r))||!(0!==h||!Yo(n,e,r)))))}function Yo(p,q,t){return q.x<=Math.max(p.x,t.x)&&q.x>=Math.min(p.x,t.x)&&q.y<=Math.max(p.y,t.y)&&q.y>=Math.min(p.y,t.y)}function Zo(t){return t>0?1:t<0?-1:0}function Jo(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function Qo(a,b){const t=new ts(a.i,a.x,a.y),e=new ts(b.i,b.x,b.y),n=a.next,r=b.prev;return a.next=b,b.prev=a,t.next=n,n.prev=t,e.next=t,t.prev=e,r.next=e,e.prev=r,e}function Ko(i,t,e,n){const p=new ts(i,t,e);return n?(p.next=n.next,p.prev=n,n.next.prev=p,n.next=p):(p.prev=p,p.next=p),p}function $o(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function ts(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const es={area:function(t){const e=t.length;let a=0;for(let p=e-1,q=0;q<e;p=q++)a+=t[p].x*t[q].y-t[q].x*t[p].y;return.5*a},isClockWise:function(t){return es.area(t)<0},triangulateShape:function(t,e){const n=[],r=[],o=[];ns(t),is(n,t);let c=t.length;e.forEach(ns);for(let i=0;i<e.length;i++)r.push(c),c+=e[i].length,is(n,e[i]);const l=Co(n,r);for(let i=0;i<l.length;i+=3)o.push(l.slice(i,i+3));return o}};function ns(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function is(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class rs extends Pe{constructor(t,e){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],o=[];for(let i=0,e=t.length;i<e;i++){c(t[i])}function c(t){const c=[],l=void 0!==e.curveSegments?e.curveSegments:12,h=void 0!==e.steps?e.steps:1;let d=void 0!==e.depth?e.depth:100,f=void 0===e.bevelEnabled||e.bevelEnabled,m=void 0!==e.bevelThickness?e.bevelThickness:6,v=void 0!==e.bevelSize?e.bevelSize:m-2,y=void 0!==e.bevelOffset?e.bevelOffset:0,_=void 0!==e.bevelSegments?e.bevelSegments:3;const w=e.extrudePath,M=void 0!==e.UVGenerator?e.UVGenerator:os;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=e.amount);let S,T,E,A,L,R=!1;w&&(S=w.getSpacedPoints(h),R=!0,f=!1,T=w.computeFrenetFrames(h,!1),E=new C,A=new C,L=new C),f||(_=0,m=0,v=0,y=0);const P=t.extractPoints(l);let N=P.shape;const I=P.holes;if(!es.isClockWise(N)){N=N.reverse();for(let t=0,e=I.length;t<e;t++){const e=I[t];es.isClockWise(e)&&(I[t]=e.reverse())}}const D=es.triangulateShape(N,I),O=N;for(let t=0,e=I.length;t<e;t++){const e=I[t];N=N.concat(e)}function z(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const U=N.length,B=D.length;function F(t,e,n){let r,o,c;const l=t.x-e.x,h=t.y-e.y,d=n.x-t.x,f=n.y-t.y,m=l*l+h*h,v=l*f-h*d;if(Math.abs(v)>Number.EPSILON){const v=Math.sqrt(m),y=Math.sqrt(d*d+f*f),_=e.x-h/v,w=e.y+l/v,M=((n.x-f/y-_)*f-(n.y+d/y-w)*d)/(l*f-h*d);r=_+l*M-t.x,o=w+h*M-t.y;const S=r*r+o*o;if(S<=2)return new x(r,o);c=Math.sqrt(S/2)}else{let t=!1;l>Number.EPSILON?d>Number.EPSILON&&(t=!0):l<-Number.EPSILON?d<-Number.EPSILON&&(t=!0):Math.sign(h)===Math.sign(f)&&(t=!0),t?(r=-h,o=l,c=Math.sqrt(m)):(r=l,o=h,c=Math.sqrt(m/2))}return new x(r/c,o/c)}const H=[];for(let i=0,t=O.length,e=t-1,n=i+1;i<t;i++,e++,n++)e===t&&(e=0),n===t&&(n=0),H[i]=F(O[i],O[e],O[n]);const G=[];let k,V=H.concat();for(let t=0,e=I.length;t<e;t++){const e=I[t];k=[];for(let i=0,t=e.length,n=t-1,r=i+1;i<t;i++,n++,r++)n===t&&(n=0),r===t&&(r=0),k[i]=F(e[i],e[n],e[r]);G.push(k),V=V.concat(k)}for(let b=0;b<_;b++){const t=b/_,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+y;for(let i=0,t=O.length;i<t;i++){const t=z(O[i],H[i],n);X(t.x,t.y,-e)}for(let t=0,r=I.length;t<r;t++){const r=I[t];k=G[t];for(let i=0,t=r.length;i<t;i++){const t=z(r[i],k[i],n);X(t.x,t.y,-e)}}}const W=v+y;for(let i=0;i<U;i++){const t=f?z(N[i],V[i],W):N[i];R?(A.copy(T.normals[0]).multiplyScalar(t.x),E.copy(T.binormals[0]).multiplyScalar(t.y),L.copy(S[0]).add(A).add(E),X(L.x,L.y,L.z)):X(t.x,t.y,0)}for(let s=1;s<=h;s++)for(let i=0;i<U;i++){const t=f?z(N[i],V[i],W):N[i];R?(A.copy(T.normals[s]).multiplyScalar(t.x),E.copy(T.binormals[s]).multiplyScalar(t.y),L.copy(S[s]).add(A).add(E),X(L.x,L.y,L.z)):X(t.x,t.y,d/h*s)}for(let b=_-1;b>=0;b--){const t=b/_,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+y;for(let i=0,t=O.length;i<t;i++){const t=z(O[i],H[i],n);X(t.x,t.y,d+e)}for(let t=0,r=I.length;t<r;t++){const r=I[t];k=G[t];for(let i=0,t=r.length;i<t;i++){const t=z(r[i],k[i],n);R?X(t.x,t.y+S[h-1].y,S[h-1].x+e):X(t.x,t.y,d+e)}}}function j(t,e){let i=t.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=t.length-1);for(let s=0,t=h+2*_;s<t;s++){const t=U*s,o=U*(s+1);Z(e+n+t,e+r+t,e+r+o,e+n+o)}}}function X(t,e,n){c.push(t),c.push(e),c.push(n)}function Y(a,b,t){J(a),J(b),J(t);const e=r.length/3,o=M.generateTopUV(n,r,e-3,e-2,e-1);Q(o[0]),Q(o[1]),Q(o[2])}function Z(a,b,t,e){J(a),J(b),J(e),J(b),J(t),J(e);const o=r.length/3,c=M.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);Q(c[0]),Q(c[1]),Q(c[3]),Q(c[1]),Q(c[2]),Q(c[3])}function J(t){r.push(c[3*t+0]),r.push(c[3*t+1]),r.push(c[3*t+2])}function Q(t){o.push(t.x),o.push(t.y)}!function(){const t=r.length/3;if(f){let t=0,e=U*t;for(let i=0;i<B;i++){const t=D[i];Y(t[2]+e,t[1]+e,t[0]+e)}t=h+2*_,e=U*t;for(let i=0;i<B;i++){const t=D[i];Y(t[0]+e,t[1]+e,t[2]+e)}}else{for(let i=0;i<B;i++){const t=D[i];Y(t[2],t[1],t[0])}for(let i=0;i<B;i++){const t=D[i];Y(t[0]+U*h,t[1]+U*h,t[2]+U*h)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;j(O,e),e+=O.length;for(let t=0,n=I.length;t<n;t++){const n=I[t];j(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new ve(r,3)),this.setAttribute("uv",new ve(o,2)),this.computeVertexNormals()}toJSON(){const data=Pe.prototype.toJSON.call(this);return function(t,e,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);void 0!==e.extrudePath&&(data.options.extrudePath=e.extrudePath.toJSON());return data}(this.parameters.shapes,this.parameters.options,data)}}const os={generateTopUV:function(t,e,n,r,o){const c=e[3*n],l=e[3*n+1],h=e[3*r],d=e[3*r+1],f=e[3*o],m=e[3*o+1];return[new x(c,l),new x(h,d),new x(f,m)]},generateSideWallUV:function(t,e,n,r,o,c){const l=e[3*n],h=e[3*n+1],d=e[3*n+2],f=e[3*r],m=e[3*r+1],v=e[3*r+2],y=e[3*o],_=e[3*o+1],w=e[3*o+2],M=e[3*c],S=e[3*c+1],T=e[3*c+2];return Math.abs(h-m)<.01?[new x(l,1-d),new x(f,1-v),new x(y,1-w),new x(M,1-T)]:[new x(h,1-d),new x(m,1-v),new x(_,1-w),new x(S,1-T)]}};class ss extends Po{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new rs(t,e)),this.mergeVertices()}toJSON(){const data=super.toJSON();return function(t,e,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);void 0!==e.extrudePath&&(data.options.extrudePath=e.extrudePath.toJSON());return data}(this.parameters.shapes,this.parameters.options,data)}}function as(t,e,n){Pe.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const r=[],o=[],c=[],l=[],h=1e-5,d=new C,f=new C,m=new C,v=new C,y=new C;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const x=e+1;for(let i=0;i<=n;i++){const r=i/n;for(let n=0;n<=e;n++){const u=n/e;t(u,r,f),o.push(f.x,f.y,f.z),u-h>=0?(t(u-h,r,m),v.subVectors(f,m)):(t(u+h,r,m),v.subVectors(m,f)),r-h>=0?(t(u,r-h,m),y.subVectors(f,m)):(t(u,r+h,m),y.subVectors(m,f)),d.crossVectors(v,y).normalize(),c.push(d.x,d.y,d.z),l.push(u,r)}}for(let i=0;i<n;i++)for(let t=0;t<e;t++){const a=i*x+t,b=i*x+t+1,e=(i+1)*x+t+1,n=(i+1)*x+t;r.push(a,b,n),r.push(b,e,n)}this.setIndex(r),this.setAttribute("position",new ve(o,3)),this.setAttribute("normal",new ve(c,3)),this.setAttribute("uv",new ve(l,2))}function cs(t,e,n){Po.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new as(t,e,n)),this.mergeVertices()}as.prototype=Object.create(Pe.prototype),as.prototype.constructor=as,cs.prototype=Object.create(Po.prototype),cs.prototype.constructor=cs;class ls extends Pe{constructor(t,e=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],o=[],c=[];let l=0,h=0;if(!1===Array.isArray(t))d(t);else for(let i=0;i<t.length;i++)d(t[i]),this.addGroup(l,h,i),l+=h,h=0;function d(t){const l=r.length/3,d=t.extractPoints(e);let f=d.shape;const m=d.holes;!1===es.isClockWise(f)&&(f=f.reverse());for(let i=0,t=m.length;i<t;i++){const t=m[i];!0===es.isClockWise(t)&&(m[i]=t.reverse())}const v=es.triangulateShape(f,m);for(let i=0,t=m.length;i<t;i++){const t=m[i];f=f.concat(t)}for(let i=0,t=f.length;i<t;i++){const t=f[i];r.push(t.x,t.y,0),o.push(0,0,1),c.push(t.x,t.y)}for(let i=0,t=v.length;i<t;i++){const t=v[i],a=t[0]+l,b=t[1]+l,e=t[2]+l;n.push(a,b,e),h+=3}}this.setIndex(n),this.setAttribute("position",new ve(r,3)),this.setAttribute("normal",new ve(o,3)),this.setAttribute("uv",new ve(c,2))}toJSON(){const data=Pe.prototype.toJSON.call(this);return function(t,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);return data}(this.parameters.shapes,data)}}class hs extends Po{constructor(t,e){super(),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new ls(t,e)),this.mergeVertices()}toJSON(){const data=Po.prototype.toJSON.call(this);return function(t,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);return data}(this.parameters.shapes,data)}}class us extends Pe{constructor(t=1,e=8,n=6,r=0,o=2*Math.PI,c=0,l=Math.PI){super(),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:o,thetaStart:c,thetaLength:l},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(c+l,Math.PI);let d=0;const f=[],m=new C,v=new C,y=[],x=[],_=[],w=[];for(let y=0;y<=n;y++){const M=[],S=y/n;let T=0;0==y&&0==c?T=.5/e:y==n&&h==Math.PI&&(T=-.5/e);for(let n=0;n<=e;n++){const u=n/e;m.x=-t*Math.cos(r+u*o)*Math.sin(c+S*l),m.y=t*Math.cos(c+S*l),m.z=t*Math.sin(r+u*o)*Math.sin(c+S*l),x.push(m.x,m.y,m.z),v.copy(m).normalize(),_.push(v.x,v.y,v.z),w.push(u+T,1-S),M.push(d++)}f.push(M)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const a=f[t][r+1],b=f[t][r],e=f[t+1][r],o=f[t+1][r+1];(0!==t||c>0)&&y.push(a,b,o),(t!==n-1||h<Math.PI)&&y.push(b,e,o)}this.setIndex(y),this.setAttribute("position",new ve(x,3)),this.setAttribute("normal",new ve(_,3)),this.setAttribute("uv",new ve(w,2))}}class ds extends Po{constructor(t,e,n,r,o,c,l){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:o,thetaStart:c,thetaLength:l},this.fromBufferGeometry(new us(t,e,n,r,o,c,l)),this.mergeVertices()}}function ps(t){re.call(this),this.type="ShadowMaterial",this.color=new ee(0),this.transparent=!0,this.setValues(t)}function fs(t){en.call(this,t),this.type="RawShaderMaterial"}function ms(t){re.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ee(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function gs(t){ms.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new x(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=y.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function vs(t){re.call(this),this.type="MeshPhongMaterial",this.color=new ee(16777215),this.specular=new ee(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ys(t){re.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ee(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function xs(t){re.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function _s(t){re.call(this),this.type="MeshLambertMaterial",this.color=new ee(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ee(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function bs(t){re.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ee(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ws(t){io.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}ps.prototype=Object.create(re.prototype),ps.prototype.constructor=ps,ps.prototype.isShadowMaterial=!0,ps.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this},fs.prototype=Object.create(en.prototype),fs.prototype.constructor=fs,fs.prototype.isRawShaderMaterial=!0,ms.prototype=Object.create(re.prototype),ms.prototype.constructor=ms,ms.prototype.isMeshStandardMaterial=!0,ms.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.defines={STANDARD:""},this.color.copy(source.color),this.roughness=source.roughness,this.metalness=source.metalness,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.roughnessMap=source.roughnessMap,this.metalnessMap=source.metalnessMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.envMapIntensity=source.envMapIntensity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this.vertexTangents=source.vertexTangents,this},gs.prototype=Object.create(ms.prototype),gs.prototype.constructor=gs,gs.prototype.isMeshPhysicalMaterial=!0,gs.prototype.copy=function(source){return ms.prototype.copy.call(this,source),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=source.clearcoat,this.clearcoatMap=source.clearcoatMap,this.clearcoatRoughness=source.clearcoatRoughness,this.clearcoatRoughnessMap=source.clearcoatRoughnessMap,this.clearcoatNormalMap=source.clearcoatNormalMap,this.clearcoatNormalScale.copy(source.clearcoatNormalScale),this.reflectivity=source.reflectivity,source.sheen?this.sheen=(this.sheen||new ee).copy(source.sheen):this.sheen=null,this.transmission=source.transmission,this.transmissionMap=source.transmissionMap,this},vs.prototype=Object.create(re.prototype),vs.prototype.constructor=vs,vs.prototype.isMeshPhongMaterial=!0,vs.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},ys.prototype=Object.create(re.prototype),ys.prototype.constructor=ys,ys.prototype.isMeshToonMaterial=!0,ys.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.gradientMap=source.gradientMap,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},xs.prototype=Object.create(re.prototype),xs.prototype.constructor=xs,xs.prototype.isMeshNormalMaterial=!0,xs.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},_s.prototype=Object.create(re.prototype),_s.prototype.constructor=_s,_s.prototype.isMeshLambertMaterial=!0,_s.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},bs.prototype=Object.create(re.prototype),bs.prototype.constructor=bs,bs.prototype.isMeshMatcapMaterial=!0,bs.prototype.copy=function(source){return re.prototype.copy.call(this,source),this.defines={MATCAP:""},this.color.copy(source.color),this.matcap=source.matcap,this.map=source.map,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},ws.prototype=Object.create(io.prototype),ws.prototype.constructor=ws,ws.prototype.isLineDashedMaterial=!0,ws.prototype.copy=function(source){return io.prototype.copy.call(this,source),this.scale=source.scale,this.dashSize=source.dashSize,this.gapSize=source.gapSize,this};var Ms=Object.freeze({__proto__:null,ShadowMaterial:ps,SpriteMaterial:Lr,RawShaderMaterial:fs,ShaderMaterial:en,PointsMaterial:mo,MeshPhysicalMaterial:gs,MeshStandardMaterial:ms,MeshPhongMaterial:vs,MeshToonMaterial:ys,MeshNormalMaterial:xs,MeshLambertMaterial:_s,MeshDepthMaterial:lr,MeshDistanceMaterial:ur,MeshBasicMaterial:oe,MeshMatcapMaterial:bs,LineDashedMaterial:ws,LineBasicMaterial:io,Material:re});const Ss={arraySlice:function(t,e,n){return Ss.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort((function(i,e){return t[i]-t[e]})),n},sortedArray:function(t,e,n){const r=t.length,o=new t.constructor(r);for(let i=0,c=0;c!==r;++i){const r=n[i]*e;for(let n=0;n!==e;++n)o[c++]=t[r+n]}return o},flattenJSON:function(t,e,n,r){let i=1,o=t[0];for(;void 0!==o&&void 0===o[r];)o=t[i++];if(void 0===o)return;let c=o[r];if(void 0!==c)if(Array.isArray(c))do{c=o[r],void 0!==c&&(e.push(o.time),n.push.apply(n,c)),o=t[i++]}while(void 0!==o);else if(void 0!==c.toArray)do{c=o[r],void 0!==c&&(e.push(o.time),c.toArray(n,n.length)),o=t[i++]}while(void 0!==o);else do{c=o[r],void 0!==c&&(e.push(o.time),n.push(c)),o=t[i++]}while(void 0!==o)},subclip:function(t,e,n,r,o=30){const c=t.clone();c.name=e;const l=[];for(let i=0;i<c.tracks.length;++i){const track=c.tracks[i],t=track.getValueSize(),e=[],h=[];for(let c=0;c<track.times.length;++c){const l=track.times[c]*o;if(!(l<n||l>=r)){e.push(track.times[c]);for(let e=0;e<t;++e)h.push(track.values[c*t+e])}}0!==e.length&&(track.times=Ss.convertArray(e,track.times.constructor),track.values=Ss.convertArray(h,track.values.constructor),l.push(track))}c.tracks=l;let h=1/0;for(let i=0;i<c.tracks.length;++i)h>c.tracks[i].times[0]&&(h=c.tracks[i].times[0]);for(let i=0;i<c.tracks.length;++i)c.tracks[i].shift(-1*h);return c.resetDuration(),c},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const o=n.tracks.length,c=e/r;for(let i=0;i<o;++i){const e=n.tracks[i],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const o=t.tracks.find((function(track){return track.name===e.name&&track.ValueTypeName===r}));if(void 0===o)continue;let l=0;const h=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);let d=0;const f=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const m=e.times.length-1;let v;if(c<=e.times[0]){const t=l,n=h-l;v=Ss.arraySlice(e.values,t,n)}else if(c>=e.times[m]){const t=m*h+l,n=t+h-l;v=Ss.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=l,r=h-l;t.evaluate(c),v=Ss.arraySlice(t.resultBuffer,n,r)}if("quaternion"===r){(new P).fromArray(v).normalize().conjugate().toArray(v)}const y=o.times.length;for(let t=0;t<y;++t){const e=t*f+d;if("quaternion"===r)P.multiplyQuaternionsFlat(o.values,e,v,0,o.values,e);else{const t=f-2*d;for(let n=0;n<t;++n)o.values[e+n]-=v[n]}}}return t.blendMode=2501,t}};function Ts(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Es(t,e,n,r){Ts.call(this,t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function As(t,e,n,r){Ts.call(this,t,e,n,r)}function Ls(t,e,n,r){Ts.call(this,t,e,n,r)}function Rs(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ss.convertArray(e,this.TimeBufferType),this.values=Ss.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function Ps(t,e,n){Rs.call(this,t,e,n)}function Cs(t,e,n,r){Rs.call(this,t,e,n,r)}function Ns(t,e,n,r){Rs.call(this,t,e,n,r)}function Is(t,e,n,r){Ts.call(this,t,e,n,r)}function Ds(t,e,n,r){Rs.call(this,t,e,n,r)}function Os(t,e,n,r){Rs.call(this,t,e,n,r)}function zs(t,e,n,r){Rs.call(this,t,e,n,r)}function Us(t,e,n,r){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.blendMode=void 0!==r?r:2500,this.uuid=y.generateUUID(),this.duration<0&&this.resetDuration()}function Bs(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ns;case"vector":case"vector2":case"vector3":case"vector4":return zs;case"color":return Cs;case"quaternion":return Ds;case"bool":case"boolean":return Ps;case"string":return Os}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Ss.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Ts.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],o=e[n-1];t:{e:{let c;n:{i:if(!(t<r)){for(let c=n+2;;){if(void 0===r){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,o)}if(n===c)break;if(o=r,r=e[++n],t<r)break e}c=e.length;break n}if(t>=o)break t;{const l=e[1];t<l&&(n=2,o=l);for(let c=n-2;;){if(void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===c)break;if(r=o,o=e[--n-1],t>=o)break e}c=n,n=0}}for(;n<c;){const r=n+c>>>1;t<e[r]?c=r:n=r+1}if(r=e[n],o=e[n-1],void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,o,t)}this._cachedIndex=n,this.intervalChanged_(n,o,r)}return this.interpolate_(n,o,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,o=t*r;for(let i=0;i!==r;++i)e[i]=n[o+i];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Ts.prototype,{beforeStart_:Ts.prototype.copySampleValue_,afterEnd_:Ts.prototype.copySampleValue_}),Es.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Es,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(t,e,n){const r=this.parameterPositions;let o=t-2,c=t+1,l=r[o],h=r[c];if(void 0===l)switch(this.getSettings_().endingStart){case 2401:o=t,l=2*e-n;break;case 2402:o=r.length-2,l=e+r[o]-r[o+1];break;default:o=t,l=n}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:c=t,h=2*n-e;break;case 2402:c=1,h=n+r[1]-r[0];break;default:c=t-1,h=e}const d=.5*(n-e),f=this.valueSize;this._weightPrev=d/(e-l),this._weightNext=d/(h-n),this._offsetPrev=o*f,this._offsetNext=c*f},interpolate_:function(t,e,n,r){const o=this.resultBuffer,c=this.sampleValues,l=this.valueSize,h=t*l,d=h-l,f=this._offsetPrev,m=this._offsetNext,v=this._weightPrev,y=this._weightNext,p=(n-e)/(r-e),x=p*p,_=x*p,w=-v*_+2*v*x-v*p,M=(1+v)*_+(-1.5-2*v)*x+(-.5+v)*p+1,S=(-1-y)*_+(1.5+y)*x+.5*p,T=y*_-y*x;for(let i=0;i!==l;++i)o[i]=w*c[f+i]+M*c[d+i]+S*c[h+i]+T*c[m+i];return o}}),As.prototype=Object.assign(Object.create(Ts.prototype),{constructor:As,interpolate_:function(t,e,n,r){const o=this.resultBuffer,c=this.sampleValues,l=this.valueSize,h=t*l,d=h-l,f=(n-e)/(r-e),m=1-f;for(let i=0;i!==l;++i)o[i]=c[d+i]*m+c[h+i]*f;return o}}),Ls.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Ls,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(Rs,{toJSON:function(track){const t=track.constructor;let e;if(void 0!==t.toJSON)e=t.toJSON(track);else{e={name:track.name,times:Ss.convertArray(track.times,Array),values:Ss.convertArray(track.values,Array)};const t=track.getInterpolation();t!==track.DefaultInterpolation&&(e.interpolation=t)}return e.type=track.ValueTypeName,e}}),Object.assign(Rs.prototype,{constructor:Rs,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Ls(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new As(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Es(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this},trim:function(t,e){const n=this.times,r=n.length;let o=0,c=r-1;for(;o!==r&&n[o]<t;)++o;for(;-1!==c&&n[c]>e;)--c;if(++c,0!==o||c!==r){o>=c&&(c=Math.max(c,1),o=c-1);const t=this.getValueSize();this.times=Ss.arraySlice(n,o,c),this.values=Ss.arraySlice(this.values,o*t,c*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,o=n.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let c=null;for(let i=0;i!==o;i++){const e=n[i];if("number"==typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,e),t=!1;break}if(null!==c&&c>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,e,c),t=!1;break}c=e}if(void 0!==r&&Ss.isTypedArray(r))for(let i=0,e=r.length;i!==e;++i){const e=r[i];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,e),t=!1;break}}return t},optimize:function(){const t=Ss.arraySlice(this.times),e=Ss.arraySlice(this.values),n=this.getValueSize(),r=2302===this.getInterpolation(),o=t.length-1;let c=1;for(let i=1;i<o;++i){let o=!1;const time=t[i];if(time!==t[i+1]&&(1!==i||time!==time[0]))if(r)o=!0;else{const t=i*n,r=t-n,c=t+n;for(let l=0;l!==n;++l){const n=e[t+l];if(n!==e[r+l]||n!==e[c+l]){o=!0;break}}}if(o){if(i!==c){t[c]=t[i];const r=i*n,o=c*n;for(let t=0;t!==n;++t)e[o+t]=e[r+t]}++c}}if(o>0){t[c]=t[o];for(let t=o*n,r=c*n,l=0;l!==n;++l)e[r+l]=e[t+l];++c}return c!==t.length?(this.times=Ss.arraySlice(t,0,c),this.values=Ss.arraySlice(e,0,c*n)):(this.times=t,this.values=e),this},clone:function(){const t=Ss.arraySlice(this.times,0),e=Ss.arraySlice(this.values,0),track=new(0,this.constructor)(this.name,t,e);return track.createInterpolant=this.createInterpolant,track}}),Ps.prototype=Object.assign(Object.create(Rs.prototype),{constructor:Ps,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Cs.prototype=Object.assign(Object.create(Rs.prototype),{constructor:Cs,ValueTypeName:"color"}),Ns.prototype=Object.assign(Object.create(Rs.prototype),{constructor:Ns,ValueTypeName:"number"}),Is.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Is,interpolate_:function(t,e,n,r){const o=this.resultBuffer,c=this.sampleValues,l=this.valueSize,h=(n-e)/(r-e);let d=t*l;for(let t=d+l;d!==t;d+=4)P.slerpFlat(o,0,c,d-l,c,d,h);return o}}),Ds.prototype=Object.assign(Object.create(Rs.prototype),{constructor:Ds,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new Is(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Os.prototype=Object.assign(Object.create(Rs.prototype),{constructor:Os,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),zs.prototype=Object.assign(Object.create(Rs.prototype),{constructor:zs,ValueTypeName:"vector"}),Object.assign(Us,{parse:function(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let i=0,t=n.length;i!==t;++i)e.push(Bs(n[i]).scale(r));const o=new Us(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o},toJSON:function(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,t=n.length;i!==t;++i)e.push(Rs.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(t,e,n,r){const o=e.length,c=[];for(let i=0;i<o;i++){let t=[],l=[];t.push((i+o-1)%o,i,(i+1)%o),l.push(0,1,0);const h=Ss.getKeyframeOrder(t);t=Ss.sortedArray(t,1,h),l=Ss.sortedArray(l,1,h),r||0!==t[0]||(t.push(o),l.push(l[0])),c.push(new Ns(".morphTargetInfluences["+e[i].name+"]",t,l).scale(1/n))}return new Us(t,-1,c)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const r={},pattern=/^([\w-]*?)([\d]+)$/;for(let i=0,e=t.length;i<e;i++){const e=t[i],n=e.name.match(pattern);if(n&&n.length>1){const t=n[1];let o=r[t];o||(r[t]=o=[]),o.push(e)}}const o=[];for(const t in r)o.push(Us.CreateFromMorphTargetSequence(t,r[t],e,n));return o},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,o){if(0!==n.length){const c=[],l=[];Ss.flattenJSON(n,c,l,r),0!==c.length&&o.push(new t(e,c,l))}},r=[],o=t.name||"default",c=t.fps||30,l=t.blendMode;let h=t.length||-1;const d=t.hierarchy||[];for(let t=0;t<d.length;t++){const o=d[t].keys;if(o&&0!==o.length)if(o[0].morphTargets){const t={};let e;for(e=0;e<o.length;e++)if(o[e].morphTargets)for(let n=0;n<o[e].morphTargets.length;n++)t[o[e].morphTargets[n]]=-1;for(const n in t){const t=[],c=[];for(let r=0;r!==o[e].morphTargets.length;++r){const r=o[e];t.push(r.time),c.push(r.morphTarget===n?1:0)}r.push(new Ns(".morphTargetInfluence["+n+"]",t,c))}h=t.length*(c||1)}else{const c=".bones["+e[t].name+"]";n(zs,c+".position",o,"pos",r),n(Ds,c+".quaternion",o,"rot",r),n(zs,c+".scale",o,"scl",r)}}if(0===r.length)return null;return new Us(o,h,r,l)}}),Object.assign(Us.prototype,{resetDuration:function(){let t=0;for(let i=0,e=this.tracks.length;i!==e;++i){const track=this.tracks[i];t=Math.max(t,track.times[track.times.length-1])}return this.duration=t,this},trim:function(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this},validate:function(){let t=!0;for(let i=0;i<this.tracks.length;i++)t=t&&this.tracks[i].validate();return t},optimize:function(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].optimize();return this},clone:function(){const t=[];for(let i=0;i<this.tracks.length;i++)t.push(this.tracks[i].clone());return new Us(this.name,this.duration,t,this.blendMode)},toJSON:function(){return Us.toJSON(this)}});const Fs={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Hs(t,e,n){const r=this;let o=!1,c=0,l=0,h=void 0;const d=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){l++,!1===o&&void 0!==r.onStart&&r.onStart(t,c,l),o=!0},this.itemEnd=function(t){c++,void 0!==r.onProgress&&r.onProgress(t,c,l),c===l&&(o=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return h?h(t):t},this.setURLModifier=function(t){return h=t,this},this.addHandler=function(t,e){return d.push(t,e),this},this.removeHandler=function(t){const e=d.indexOf(t);return-1!==e&&d.splice(e,2),this},this.getHandler=function(t){for(let i=0,e=d.length;i<e;i+=2){const e=d[i],n=d[i+1];if(e.global&&(e.lastIndex=0),e.test(t))return n}return null}}const Gs=new Hs;function ks(t){this.manager=void 0!==t?t:Gs,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(ks.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(r,o){n.load(t,r,e,o)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(path){return this.path=path,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Vs={};function Ws(t){ks.call(this,t)}function js(t){ks.call(this,t)}function qs(t){ks.call(this,t)}function Xs(t){ks.call(this,t)}function Ys(t){ks.call(this,t)}function Zs(t){ks.call(this,t)}function Js(t){ks.call(this,t)}function Qs(){this.type="Curve",this.arcLengthDivisions=200}function Ks(t,e,n,r,o,c,l,h){Qs.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=o||0,this.aEndAngle=c||2*Math.PI,this.aClockwise=l||!1,this.aRotation=h||0}function $s(t,e,n,r,o,c){Ks.call(this,t,e,n,n,r,o,c),this.type="ArcCurve"}function ta(){let t=0,e=0,n=0,r=0;function o(o,c,l,h){t=o,e=l,n=-3*o+3*c-2*l-h,r=2*o-2*c+l+h}return{initCatmullRom:function(t,e,n,r,c){o(e,n,c*(n-t),c*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,c,l,h){let d=(e-t)/c-(n-t)/(c+l)+(n-e)/l,f=(n-e)/l-(r-e)/(l+h)+(r-n)/h;d*=l,f*=l,o(e,n,d,f)},calc:function(o){const c=o*o;return t+e*o+n*c+r*(c*o)}}}Ws.prototype=Object.assign(Object.create(ks.prototype),{constructor:Ws,load:function(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,c=Fs.get(t);if(void 0!==c)return o.manager.itemStart(t),setTimeout((function(){e&&e(c),o.manager.itemEnd(t)}),0),c;if(void 0!==Vs[t])return void Vs[t].push({onLoad:e,onProgress:n,onError:r});const l=t.match(/^data:(.*?)(;base64)?,(.*)$/);let h;if(l){const n=l[1],c=!!l[2];let data=l[3];data=decodeURIComponent(data),c&&(data=atob(data));try{let r;const c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":const view=new Uint8Array(data.length);for(let i=0;i<data.length;i++)view[i]=data.charCodeAt(i);r="blob"===c?new Blob([view.buffer],{type:n}):view.buffer;break;case"document":const t=new DOMParser;r=t.parseFromString(data,n);break;case"json":r=JSON.parse(data);break;default:r=data}setTimeout((function(){e&&e(r),o.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)}),0)}}else{Vs[t]=[],Vs[t].push({onLoad:e,onProgress:n,onError:r}),h=new XMLHttpRequest,h.open("GET",t,!0),h.addEventListener("load",(function(e){const n=this.response,r=Vs[t];if(delete Vs[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Fs.add(t,n);for(let i=0,t=r.length;i<t;i++){const t=r[i];t.onLoad&&t.onLoad(n)}o.manager.itemEnd(t)}else{for(let i=0,t=r.length;i<t;i++){const t=r[i];t.onError&&t.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}}),!1),h.addEventListener("progress",(function(e){const n=Vs[t];for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onProgress&&t.onProgress(e)}}),!1),h.addEventListener("error",(function(e){const n=Vs[t];delete Vs[t];for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onError&&t.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}),!1),h.addEventListener("abort",(function(e){const n=Vs[t];delete Vs[t];for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onError&&t.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(h.responseType=this.responseType),void 0!==this.withCredentials&&(h.withCredentials=this.withCredentials),h.overrideMimeType&&h.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const header in this.requestHeader)h.setRequestHeader(header,this.requestHeader[header]);h.send(null)}return o.manager.itemStart(t),h},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),js.prototype=Object.assign(Object.create(ks.prototype),{constructor:js,load:function(t,e,n,r){const o=this,c=new Ws(o.manager);c.setPath(o.path),c.setRequestHeader(o.requestHeader),c.setWithCredentials(o.withCredentials),c.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)},parse:function(t){const e=[];for(let i=0;i<t.length;i++){const n=Us.parse(t[i]);e.push(n)}return e}}),qs.prototype=Object.assign(Object.create(ks.prototype),{constructor:qs,load:function(t,e,n,r){const o=this,c=[],l=new Mo;l.image=c;const h=new Ws(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let d=0;function f(i){h.load(t[i],(function(t){const n=o.parse(t,!0);c[i]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},d+=1,6===d&&(1===n.mipmapCount&&(l.minFilter=1006),l.format=n.format,l.needsUpdate=!0,e&&e(l))}),n,r)}if(Array.isArray(t))for(let i=0,e=t.length;i<e;++i)f(i);else h.load(t,(function(t){const n=o.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){c[e]={mipmaps:[]};for(let i=0;i<n.mipmapCount;i++)c[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+i]),c[e].format=n.format,c[e].width=n.width,c[e].height=n.height}}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=1006),l.format=n.format,l.needsUpdate=!0,e&&e(l)}),n,r);return l}}),Xs.prototype=Object.assign(Object.create(ks.prototype),{constructor:Xs,load:function(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,c=Fs.get(t);if(void 0!==c)return o.manager.itemStart(t),setTimeout((function(){e&&e(c),o.manager.itemEnd(t)}),0),c;const image=document.createElementNS("http://www.w3.org/1999/xhtml","img");function l(){image.removeEventListener("load",l,!1),image.removeEventListener("error",h,!1),Fs.add(t,this),e&&e(this),o.manager.itemEnd(t)}function h(e){image.removeEventListener("load",l,!1),image.removeEventListener("error",h,!1),r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)}return image.addEventListener("load",l,!1),image.addEventListener("error",h,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),o.manager.itemStart(t),image.src=t,image}}),Ys.prototype=Object.assign(Object.create(ks.prototype),{constructor:Ys,load:function(t,e,n,r){const o=new sn,c=new Xs(this.manager);c.setCrossOrigin(this.crossOrigin),c.setPath(this.path);let l=0;function h(i){c.load(t[i],(function(image){o.images[i]=image,l++,6===l&&(o.needsUpdate=!0,e&&e(o))}),void 0,r)}for(let i=0;i<t.length;++i)h(i);return o}}),Zs.prototype=Object.assign(Object.create(ks.prototype),{constructor:Zs,load:function(t,e,n,r){const o=this,c=new cn,l=new Ws(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(o.withCredentials),l.load(t,(function(t){const n=o.parse(t);n&&(void 0!==n.image?c.image=n.image:void 0!==n.data&&(c.image.width=n.width,c.image.height=n.height,c.image.data=n.data),c.wrapS=void 0!==n.wrapS?n.wrapS:1001,c.wrapT=void 0!==n.wrapT?n.wrapT:1001,c.magFilter=void 0!==n.magFilter?n.magFilter:1006,c.minFilter=void 0!==n.minFilter?n.minFilter:1006,c.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(c.format=n.format),void 0!==n.type&&(c.type=n.type),void 0!==n.mipmaps&&(c.mipmaps=n.mipmaps,c.minFilter=1008),1===n.mipmapCount&&(c.minFilter=1006),c.needsUpdate=!0,e&&e(c,n))}),n,r),c}}),Js.prototype=Object.assign(Object.create(ks.prototype),{constructor:Js,load:function(t,e,n,r){const o=new T,c=new Xs(this.manager);return c.setCrossOrigin(this.crossOrigin),c.setPath(this.path),c.load(t,(function(image){o.image=image;const n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);o.format=n?1022:1023,o.needsUpdate=!0,void 0!==e&&e(o)}),n,r),o}}),Object.assign(Qs.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(u,t){const e=this.getUtoTmapping(u);return this.getPoint(e,t)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),o=0;e.push(0);for(let p=1;p<=t;p++)n=this.getPoint(p/t),o+=n.distanceTo(r),e.push(o),r=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(u,t){const e=this.getLengths();let i=0;const n=e.length;let r;r=t||u*e[n-1];let o,c=0,l=n-1;for(;c<=l;)if(i=Math.floor(c+(l-c)/2),o=e[i]-r,o<0)c=i+1;else{if(!(o>0)){l=i;break}l=i-1}if(i=l,e[i]===r)return i/(n-1);const h=e[i];return(i+(r-h)/(e[i+1]-h))/(n-1)},getTangent:function(t,e){let n=t-1e-4,r=t+1e-4;n<0&&(n=0),r>1&&(r=1);const o=this.getPoint(n),c=this.getPoint(r),l=e||(o.isVector2?new x:new C);return l.copy(c).sub(o).normalize(),l},getTangentAt:function(u,t){const e=this.getUtoTmapping(u);return this.getTangent(e,t)},computeFrenetFrames:function(t,e){const n=new C,r=[],o=[],c=[],l=new C,h=new at;for(let i=0;i<=t;i++){const u=i/t;r[i]=this.getTangentAt(u,new C),r[i].normalize()}o[0]=new C,c[0]=new C;let d=Number.MAX_VALUE;const f=Math.abs(r[0].x),m=Math.abs(r[0].y),v=Math.abs(r[0].z);f<=d&&(d=f,n.set(1,0,0)),m<=d&&(d=m,n.set(0,1,0)),v<=d&&n.set(0,0,1),l.crossVectors(r[0],n).normalize(),o[0].crossVectors(r[0],l),c[0].crossVectors(r[0],o[0]);for(let i=1;i<=t;i++){if(o[i]=o[i-1].clone(),c[i]=c[i-1].clone(),l.crossVectors(r[i-1],r[i]),l.length()>Number.EPSILON){l.normalize();const t=Math.acos(y.clamp(r[i-1].dot(r[i]),-1,1));o[i].applyMatrix4(h.makeRotationAxis(l,t))}c[i].crossVectors(r[i],o[i])}if(!0===e){let e=Math.acos(y.clamp(o[0].dot(o[t]),-1,1));e/=t,r[0].dot(l.crossVectors(o[0],o[t]))>0&&(e=-e);for(let i=1;i<=t;i++)o[i].applyMatrix4(h.makeRotationAxis(r[i],e*i)),c[i].crossVectors(r[i],o[i])}return{tangents:r,normals:o,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.arcLengthDivisions=source.arcLengthDivisions,this},toJSON:function(){const data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return data.arcLengthDivisions=this.arcLengthDivisions,data.type=this.type,data},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Ks.prototype=Object.create(Qs.prototype),Ks.prototype.constructor=Ks,Ks.prototype.isEllipseCurve=!0,Ks.prototype.getPoint=function(t,e){const n=e||new x,r=2*Math.PI;let o=this.aEndAngle-this.aStartAngle;const c=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=r;for(;o>r;)o-=r;o<Number.EPSILON&&(o=c?0:r),!0!==this.aClockwise||c||(o===r?o=-r:o-=r);const l=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(l),d=this.aY+this.yRadius*Math.sin(l);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=h-this.aX,r=d-this.aY;h=n*t-r*e+this.aX,d=n*e+r*t+this.aY}return n.set(h,d)},Ks.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.aX=source.aX,this.aY=source.aY,this.xRadius=source.xRadius,this.yRadius=source.yRadius,this.aStartAngle=source.aStartAngle,this.aEndAngle=source.aEndAngle,this.aClockwise=source.aClockwise,this.aRotation=source.aRotation,this},Ks.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.aX=this.aX,data.aY=this.aY,data.xRadius=this.xRadius,data.yRadius=this.yRadius,data.aStartAngle=this.aStartAngle,data.aEndAngle=this.aEndAngle,data.aClockwise=this.aClockwise,data.aRotation=this.aRotation,data},Ks.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},$s.prototype=Object.create(Ks.prototype),$s.prototype.constructor=$s,$s.prototype.isArcCurve=!0;const ea=new C,na=new ta,ia=new ta,ra=new ta;function oa(t=[],e=!1,n="centripetal",r=.5){Qs.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}function sa(t,e,n,r,o){const c=.5*(r-e),l=.5*(o-n),h=t*t;return(2*n-2*r+c+l)*(t*h)+(-3*n+3*r-2*c-l)*h+c*t+n}function aa(t,e,n,r){return function(t,p){const e=1-t;return e*e*p}(t,e)+function(t,p){return 2*(1-t)*t*p}(t,n)+function(t,p){return t*t*p}(t,r)}function ca(t,e,n,r,o){return function(t,p){const e=1-t;return e*e*e*p}(t,e)+function(t,p){const e=1-t;return 3*e*e*t*p}(t,n)+function(t,p){return 3*(1-t)*t*t*p}(t,r)+function(t,p){return t*t*t*p}(t,o)}function la(t=new x,e=new x,n=new x,r=new x){Qs.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}function ha(t=new C,e=new C,n=new C,r=new C){Qs.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}function ua(t=new x,e=new x){Qs.call(this),this.type="LineCurve",this.v1=t,this.v2=e}function da(t=new C,e=new C){Qs.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}function pa(t=new x,e=new x,n=new x){Qs.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}function fa(t=new C,e=new C,n=new C){Qs.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}function ma(t=[]){Qs.call(this),this.type="SplineCurve",this.points=t}oa.prototype=Object.create(Qs.prototype),oa.prototype.constructor=oa,oa.prototype.isCatmullRomCurve3=!0,oa.prototype.getPoint=function(t,e=new C){const n=e,r=this.points,o=r.length,p=(o-(this.closed?0:1))*t;let c,l,h=Math.floor(p),d=p-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/o)+1)*o:0===d&&h===o-1&&(h=o-2,d=1),this.closed||h>0?c=r[(h-1)%o]:(ea.subVectors(r[0],r[1]).add(r[0]),c=ea);const f=r[h%o],m=r[(h+1)%o];if(this.closed||h+2<o?l=r[(h+2)%o]:(ea.subVectors(r[o-1],r[o-2]).add(r[o-1]),l=ea),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(c.distanceToSquared(f),t),n=Math.pow(f.distanceToSquared(m),t),r=Math.pow(m.distanceToSquared(l),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),na.initNonuniformCatmullRom(c.x,f.x,m.x,l.x,e,n,r),ia.initNonuniformCatmullRom(c.y,f.y,m.y,l.y,e,n,r),ra.initNonuniformCatmullRom(c.z,f.z,m.z,l.z,e,n,r)}else"catmullrom"===this.curveType&&(na.initCatmullRom(c.x,f.x,m.x,l.x,this.tension),ia.initCatmullRom(c.y,f.y,m.y,l.y,this.tension),ra.initCatmullRom(c.z,f.z,m.z,l.z,this.tension));return n.set(na.calc(d),ia.calc(d),ra.calc(d)),n},oa.prototype.copy=function(source){Qs.prototype.copy.call(this,source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this.closed=source.closed,this.curveType=source.curveType,this.tension=source.tension,this},oa.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data.closed=this.closed,data.curveType=this.curveType,data.tension=this.tension,data},oa.prototype.fromJSON=function(t){Qs.prototype.fromJSON.call(this,t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new C).fromArray(e))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},la.prototype=Object.create(Qs.prototype),la.prototype.constructor=la,la.prototype.isCubicBezierCurve=!0,la.prototype.getPoint=function(t,e=new x){const n=e,r=this.v0,o=this.v1,c=this.v2,l=this.v3;return n.set(ca(t,r.x,o.x,c.x,l.x),ca(t,r.y,o.y,c.y,l.y)),n},la.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this},la.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data},la.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},ha.prototype=Object.create(Qs.prototype),ha.prototype.constructor=ha,ha.prototype.isCubicBezierCurve3=!0,ha.prototype.getPoint=function(t,e=new C){const n=e,r=this.v0,o=this.v1,c=this.v2,l=this.v3;return n.set(ca(t,r.x,o.x,c.x,l.x),ca(t,r.y,o.y,c.y,l.y),ca(t,r.z,o.z,c.z,l.z)),n},ha.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this},ha.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data},ha.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},ua.prototype=Object.create(Qs.prototype),ua.prototype.constructor=ua,ua.prototype.isLineCurve=!0,ua.prototype.getPoint=function(t,e=new x){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},ua.prototype.getPointAt=function(u,t){return this.getPoint(u,t)},ua.prototype.getTangent=function(t,e){const n=e||new x;return n.copy(this.v2).sub(this.v1).normalize(),n},ua.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v1.copy(source.v1),this.v2.copy(source.v2),this},ua.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},ua.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},da.prototype=Object.create(Qs.prototype),da.prototype.constructor=da,da.prototype.isLineCurve3=!0,da.prototype.getPoint=function(t,e=new C){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},da.prototype.getPointAt=function(u,t){return this.getPoint(u,t)},da.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v1.copy(source.v1),this.v2.copy(source.v2),this},da.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},da.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},pa.prototype=Object.create(Qs.prototype),pa.prototype.constructor=pa,pa.prototype.isQuadraticBezierCurve=!0,pa.prototype.getPoint=function(t,e=new x){const n=e,r=this.v0,o=this.v1,c=this.v2;return n.set(aa(t,r.x,o.x,c.x),aa(t,r.y,o.y,c.y)),n},pa.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this},pa.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},pa.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},fa.prototype=Object.create(Qs.prototype),fa.prototype.constructor=fa,fa.prototype.isQuadraticBezierCurve3=!0,fa.prototype.getPoint=function(t,e=new C){const n=e,r=this.v0,o=this.v1,c=this.v2;return n.set(aa(t,r.x,o.x,c.x),aa(t,r.y,o.y,c.y),aa(t,r.z,o.z,c.z)),n},fa.prototype.copy=function(source){return Qs.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this},fa.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},fa.prototype.fromJSON=function(t){return Qs.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},ma.prototype=Object.create(Qs.prototype),ma.prototype.constructor=ma,ma.prototype.isSplineCurve=!0,ma.prototype.getPoint=function(t,e=new x){const n=e,r=this.points,p=(r.length-1)*t,o=Math.floor(p),c=p-o,l=r[0===o?o:o-1],h=r[o],d=r[o>r.length-2?r.length-1:o+1],f=r[o>r.length-3?r.length-1:o+2];return n.set(sa(c,l.x,h.x,d.x,f.x),sa(c,l.y,h.y,d.y,f.y)),n},ma.prototype.copy=function(source){Qs.prototype.copy.call(this,source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this},ma.prototype.toJSON=function(){const data=Qs.prototype.toJSON.call(this);data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data},ma.prototype.fromJSON=function(t){Qs.prototype.fromJSON.call(this,t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new x).fromArray(e))}return this};var ga=Object.freeze({__proto__:null,ArcCurve:$s,CatmullRomCurve3:oa,CubicBezierCurve:la,CubicBezierCurve3:ha,EllipseCurve:Ks,LineCurve:ua,LineCurve3:da,QuadraticBezierCurve:pa,QuadraticBezierCurve3:fa,SplineCurve:ma});function va(){Qs.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function ya(t){va.call(this),this.type="Path",this.currentPoint=new x,t&&this.setFromPoints(t)}function xa(t){ya.call(this,t),this.uuid=y.generateUUID(),this.type="Shape",this.holes=[]}function _a(t,e=1){It.call(this),this.type="Light",this.color=new ee(t),this.intensity=e}function ba(t,e,n){_a.call(this,t,n),this.type="HemisphereLight",this.position.copy(It.DefaultUp),this.updateMatrix(),this.groundColor=new ee(e)}function wa(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new x(512,512),this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new un,this._frameExtents=new x(1,1),this._viewportCount=1,this._viewports=[new A(0,0,1,1)]}function Ma(){wa.call(this,new rn(50,1,.5,500)),this.focus=1}function Sa(t,e,n,r,o,c){_a.call(this,t,e),this.type="SpotLight",this.position.copy(It.DefaultUp),this.updateMatrix(),this.target=new It,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==o?o:0,this.decay=void 0!==c?c:1,this.shadow=new Ma}function Ta(){wa.call(this,new rn(90,1,.5,500)),this._frameExtents=new x(4,2),this._viewportCount=6,this._viewports=[new A(2,1,1,1),new A(0,1,1,1),new A(3,1,1,1),new A(1,1,1,1),new A(3,0,1,1),new A(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}function Ea(t,e,n,r){_a.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new Ta}function Aa(t,e,n,r,o,c){nn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==r?r:-1,this.near=void 0!==o?o:.1,this.far=void 0!==c?c:2e3,this.updateProjectionMatrix()}function La(){wa.call(this,new Aa(-5,5,5,-5,.5,500))}function Ra(t,e){_a.call(this,t,e),this.type="DirectionalLight",this.position.copy(It.DefaultUp),this.updateMatrix(),this.target=new It,this.shadow=new La}function Pa(t,e){_a.call(this,t,e),this.type="AmbientLight"}function Ca(t,e,n,r){_a.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}va.prototype=Object.assign(Object.create(Qs.prototype),{constructor:va,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new ua(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],o=r.getLength(),u=0===o?0:1-t/o;return r.getPointAt(u)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],c=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,l=o.getPoints(c);for(let t=0;t<l.length;t++){const r=l[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(source){Qs.prototype.copy.call(this,source),this.curves=[];for(let i=0,t=source.curves.length;i<t;i++){const t=source.curves[i];this.curves.push(t.clone())}return this.autoClose=source.autoClose,this},toJSON:function(){const data=Qs.prototype.toJSON.call(this);data.autoClose=this.autoClose,data.curves=[];for(let i=0,t=this.curves.length;i<t;i++){const t=this.curves[i];data.curves.push(t.toJSON())}return data},fromJSON:function(t){Qs.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let i=0,e=t.curves.length;i<e;i++){const e=t.curves[i];this.curves.push((new ga[e.type]).fromJSON(e))}return this}}),ya.prototype=Object.assign(Object.create(va.prototype),{constructor:ya,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let i=1,e=t.length;i<e;i++)this.lineTo(t[i].x,t[i].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new ua(this.currentPoint.clone(),new x(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,r){const o=new pa(this.currentPoint.clone(),new x(t,e),new x(n,r));return this.curves.push(o),this.currentPoint.set(n,r),this},bezierCurveTo:function(t,e,n,r,o,c){const l=new la(this.currentPoint.clone(),new x(t,e),new x(n,r),new x(o,c));return this.curves.push(l),this.currentPoint.set(o,c),this},splineThru:function(t){const e=new ma([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,r,o,c){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+l,e+h,n,r,o,c),this},absarc:function(t,e,n,r,o,c){return this.absellipse(t,e,n,n,r,o,c),this},ellipse:function(t,e,n,r,o,c,l,h){const d=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(t+d,e+f,n,r,o,c,l,h),this},absellipse:function(t,e,n,r,o,c,l,h){const d=new Ks(t,e,n,r,o,c,l,h);if(this.curves.length>0){const t=d.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(d);const f=d.getPoint(1);return this.currentPoint.copy(f),this},copy:function(source){return va.prototype.copy.call(this,source),this.currentPoint.copy(source.currentPoint),this},toJSON:function(){const data=va.prototype.toJSON.call(this);return data.currentPoint=this.currentPoint.toArray(),data},fromJSON:function(t){return va.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),xa.prototype=Object.assign(Object.create(ya.prototype),{constructor:xa,getPointsHoles:function(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(source){ya.prototype.copy.call(this,source),this.holes=[];for(let i=0,t=source.holes.length;i<t;i++){const t=source.holes[i];this.holes.push(t.clone())}return this},toJSON:function(){const data=ya.prototype.toJSON.call(this);data.uuid=this.uuid,data.holes=[];for(let i=0,t=this.holes.length;i<t;i++){const t=this.holes[i];data.holes.push(t.toJSON())}return data},fromJSON:function(t){ya.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let i=0,e=t.holes.length;i<e;i++){const e=t.holes[i];this.holes.push((new ya).fromJSON(e))}return this}}),_a.prototype=Object.assign(Object.create(It.prototype),{constructor:_a,isLight:!0,copy:function(source){return It.prototype.copy.call(this,source),this.color.copy(source.color),this.intensity=source.intensity,this},toJSON:function(meta){const data=It.prototype.toJSON.call(this,meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}),ba.prototype=Object.assign(Object.create(_a.prototype),{constructor:ba,isHemisphereLight:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.groundColor.copy(source.groundColor),this}}),Object.assign(wa.prototype,{_projScreenMatrix:new at,_lightPositionWorld:new C,_lookTarget:new C,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,r=this._projScreenMatrix,o=this._lookTarget,c=this._lightPositionWorld;c.setFromMatrixPosition(t.matrixWorld),e.position.copy(c),o.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(o),e.updateMatrixWorld(),r.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const object={};return 0!==this.bias&&(object.bias=this.bias),0!==this.normalBias&&(object.normalBias=this.normalBias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}),Ma.prototype=Object.assign(Object.create(wa.prototype),{constructor:Ma,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*y.RAD2DEG*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;n===e.fov&&r===e.aspect&&o===e.far||(e.fov=n,e.aspect=r,e.far=o,e.updateProjectionMatrix()),wa.prototype.updateMatrices.call(this,t)}}),Sa.prototype=Object.assign(Object.create(_a.prototype),{constructor:Sa,isSpotLight:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.distance=source.distance,this.angle=source.angle,this.penumbra=source.penumbra,this.decay=source.decay,this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}),Ta.prototype=Object.assign(Object.create(wa.prototype),{constructor:Ta,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,r=this.matrix,o=this._lightPositionWorld,c=this._lookTarget,l=this._projScreenMatrix;o.setFromMatrixPosition(t.matrixWorld),n.position.copy(o),c.copy(n.position),c.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(c),n.updateMatrixWorld(),r.makeTranslation(-o.x,-o.y,-o.z),l.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(l)}}),Ea.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ea,isPointLight:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}),Aa.prototype=Object.assign(Object.create(nn.prototype),{constructor:Aa,isOrthographicCamera:!0,copy:function(source,t){return nn.prototype.copy.call(this,source,t),this.left=source.left,this.right=source.right,this.top=source.top,this.bottom=source.bottom,this.near=source.near,this.far=source.far,this.zoom=source.zoom,this.view=null===source.view?null:Object.assign({},source.view),this},setViewOffset:function(t,e,n,r,o,c){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=c,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let o=n-t,c=n+t,l=r+e,h=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=t*this.view.offsetX,c=o+t*this.view.width,l-=e*this.view.offsetY,h=l-e*this.view.height}this.projectionMatrix.makeOrthographic(o,c,l,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(meta){const data=It.prototype.toJSON.call(this,meta);return data.object.zoom=this.zoom,data.object.left=this.left,data.object.right=this.right,data.object.top=this.top,data.object.bottom=this.bottom,data.object.near=this.near,data.object.far=this.far,null!==this.view&&(data.object.view=Object.assign({},this.view)),data}}),La.prototype=Object.assign(Object.create(wa.prototype),{constructor:La,isDirectionalLightShadow:!0,updateMatrices:function(t){wa.prototype.updateMatrices.call(this,t)}}),Ra.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ra,isDirectionalLight:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}),Pa.prototype=Object.assign(Object.create(_a.prototype),{constructor:Pa,isAmbientLight:!0}),Ca.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ca,isRectAreaLight:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.width=source.width,this.height=source.height,this},toJSON:function(meta){const data=_a.prototype.toJSON.call(this,meta);return data.object.width=this.width,data.object.height=this.height,data}});class Na{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let i=0;i<9;i++)this.coefficients.push(new C)}set(t){for(let i=0;i<9;i++)this.coefficients[i].copy(t[i]);return this}zero(){for(let i=0;i<9;i++)this.coefficients[i].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,o=t.z,c=this.coefficients;return e.copy(c[0]).multiplyScalar(.282095),e.addScaledVector(c[1],.488603*r),e.addScaledVector(c[2],.488603*o),e.addScaledVector(c[3],.488603*n),e.addScaledVector(c[4],n*r*1.092548),e.addScaledVector(c[5],r*o*1.092548),e.addScaledVector(c[6],.315392*(3*o*o-1)),e.addScaledVector(c[7],n*o*1.092548),e.addScaledVector(c[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,o=t.z,c=this.coefficients;return e.copy(c[0]).multiplyScalar(.886227),e.addScaledVector(c[1],1.023328*r),e.addScaledVector(c[2],1.023328*o),e.addScaledVector(c[3],1.023328*n),e.addScaledVector(c[4],.858086*n*r),e.addScaledVector(c[5],.858086*r*o),e.addScaledVector(c[6],.743125*o*o-.247708),e.addScaledVector(c[7],.858086*n*o),e.addScaledVector(c[8],.429043*(n*n-r*r)),e}add(t){for(let i=0;i<9;i++)this.coefficients[i].add(t.coefficients[i]);return this}addScaledSH(t,s){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],s);return this}scale(s){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(s);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(t.coefficients[i]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,r=t.y,o=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-r*r)}}function Ia(t,e){_a.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new Na}function Da(t){ks.call(this,t),this.textures={}}Ia.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ia,isLightProbe:!0,copy:function(source){return _a.prototype.copy.call(this,source),this.sh.copy(source.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(meta){const data=_a.prototype.toJSON.call(this,meta);return data.object.sh=this.sh.toArray(),data}}),Da.prototype=Object.assign(Object.create(ks.prototype),{constructor:Da,load:function(t,e,n,r){const o=this,c=new Ws(o.manager);c.setPath(o.path),c.setRequestHeader(o.requestHeader),c.setWithCredentials(o.withCredentials),c.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new Ms[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new ee).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const o=t.uniforms[e];switch(r.uniforms[e]={},o.type){case"t":r.uniforms[e].value=n(o.value);break;case"c":r.uniforms[e].value=(new ee).setHex(o.value);break;case"v2":r.uniforms[e].value=(new x).fromArray(o.value);break;case"v3":r.uniforms[e].value=(new C).fromArray(o.value);break;case"v4":r.uniforms[e].value=(new A).fromArray(o.value);break;case"m3":r.uniforms[e].value=(new _).fromArray(o.value);break;case"m4":r.uniforms[e].value=(new at).fromArray(o.value);break;default:r.uniforms[e].value=o.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new x).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new x).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),r},setTextures:function(t){return this.textures=t,this}});const Oa=function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)};function za(){Pe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Ua(t,e,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),ce.call(this,t,e,n),this.meshPerAttribute=r||1}function Ba(t){ks.call(this,t)}za.prototype=Object.assign(Object.create(Pe.prototype),{constructor:za,isInstancedBufferGeometry:!0,copy:function(source){return Pe.prototype.copy.call(this,source),this.instanceCount=source.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const data=Pe.prototype.toJSON.call(this);return data.instanceCount=this.instanceCount,data.isInstancedBufferGeometry=!0,data}}),Ua.prototype=Object.assign(Object.create(ce.prototype),{constructor:Ua,isInstancedBufferAttribute:!0,copy:function(source){return ce.prototype.copy.call(this,source),this.meshPerAttribute=source.meshPerAttribute,this},toJSON:function(){const data=ce.prototype.toJSON.call(this);return data.meshPerAttribute=this.meshPerAttribute,data.isInstancedBufferAttribute=!0,data}}),Ba.prototype=Object.assign(Object.create(ks.prototype),{constructor:Ba,load:function(t,e,n,r){const o=this,c=new Ws(o.manager);c.setPath(o.path),c.setRequestHeader(o.requestHeader),c.setWithCredentials(o.withCredentials),c.load(t,(function(text){try{e(o.parse(JSON.parse(text)))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)},parse:function(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const o=t.interleavedBuffers[r],c=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],o=new Uint32Array(r).buffer;return n[e]=o,o}(t,o.buffer),l=new Tr(we(o.type,c),o.stride);return l.uuid=o.uuid,e[r]=l,l}const o=t.isInstancedBufferGeometry?new za:new Pe,c=t.data.index;if(void 0!==c){const t=we(c.type,c.array);o.setIndex(new ce(t,1))}const l=t.data.attributes;for(const e in l){const n=l[e];let c;if(n.isInterleavedBufferAttribute){c=new Ar(r(t.data,n.data),n.itemSize,n.offset,n.normalized)}else{const t=we(n.type,n.array);c=new(n.isInstancedBufferAttribute?Ua:ce)(t,n.itemSize,n.normalized)}void 0!==n.name&&(c.name=n.name),o.setAttribute(e,c)}const h=t.data.morphAttributes;if(h)for(const e in h){const n=h[e],c=[];for(let i=0,e=n.length;i<e;i++){const e=n[i];let o;if(e.isInterleavedBufferAttribute){o=new Ar(r(t.data,e.data),e.itemSize,e.offset,e.normalized)}else{o=new ce(we(e.type,e.array),e.itemSize,e.normalized)}void 0!==e.name&&(o.name=e.name),c.push(o)}o.morphAttributes[e]=c}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==d)for(let i=0,t=d.length;i!==t;++i){const t=d[i];o.addGroup(t.start,t.count,t.materialIndex)}const f=t.data.boundingSphere;if(void 0!==f){const t=new C;void 0!==f.center&&t.fromArray(f.center),o.boundingSphere=new Q(t,f.radius)}return t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}});function Fa(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),ks.call(this,t),this.options={premultiplyAlpha:"none"}}function Ha(){this.type="ShapePath",this.color=new ee,this.subPaths=[],this.currentPath=null}function Ga(data){this.type="Font",this.data=data}function ka(t,e,n,r,data){const glyph=data.glyphs[t]||data.glyphs["?"];if(!glyph)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+data.familyName+".");const path=new Ha;let o,c,l,h,d,f,m,v;if(glyph.o){const t=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" "));for(let i=0,y=t.length;i<y;){switch(t[i++]){case"m":o=t[i++]*e+n,c=t[i++]*e+r,path.moveTo(o,c);break;case"l":o=t[i++]*e+n,c=t[i++]*e+r,path.lineTo(o,c);break;case"q":l=t[i++]*e+n,h=t[i++]*e+r,d=t[i++]*e+n,f=t[i++]*e+r,path.quadraticCurveTo(d,f,l,h);break;case"b":l=t[i++]*e+n,h=t[i++]*e+r,d=t[i++]*e+n,f=t[i++]*e+r,m=t[i++]*e+n,v=t[i++]*e+r,path.bezierCurveTo(d,f,m,v,l,h)}}}return{offsetX:glyph.ha*e,path:path}}function Va(t){ks.call(this,t)}let Wa;Fa.prototype=Object.assign(Object.create(ks.prototype),{constructor:Fa,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,c=Fs.get(t);if(void 0!==c)return o.manager.itemStart(t),setTimeout((function(){e&&e(c),o.manager.itemEnd(t)}),0),c;const l={};l.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(t,l).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,o.options)})).then((function(n){Fs.add(t,n),e&&e(n),o.manager.itemEnd(t)})).catch((function(e){r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)})),o.manager.itemStart(t)}}),Object.assign(Ha.prototype,{moveTo:function(t,e){return this.currentPath=new ya,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this},bezierCurveTo:function(t,e,n,r,o,c){return this.currentPath.bezierCurveTo(t,e,n,r,o,c),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i],r=new xa;r.curves=n.curves,e.push(r)}return e}function r(t,e){const n=e.length;let r=!1;for(let p=n-1,q=0;q<n;p=q++){let n=e[p],o=e[q],c=o.x-n.x,l=o.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[q],c=-c,o=e[p],l=-l),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-c*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return r}const o=es.isClockWise,c=this.subPaths;if(0===c.length)return[];if(!0===e)return n(c);let l,h,d;const f=[];if(1===c.length)return h=c[0],d=new xa,d.curves=h.curves,f.push(d),f;let m=!o(c[0].getPoints());m=t?!m:m;const v=[],y=[];let x,_,w=[],M=0;y[M]=void 0,w[M]=[];for(let i=0,e=c.length;i<e;i++)h=c[i],x=h.getPoints(),l=o(x),l=t?!l:l,l?(!m&&y[M]&&M++,y[M]={s:new xa,p:x},y[M].s.curves=h.curves,m&&M++,w[M]=[]):w[M].push({h:h,p:x[0]});if(!y[0])return n(c);if(y.length>1){let t=!1;const e=[];for(let t=0,e=y.length;t<e;t++)v[t]=[];for(let n=0,o=y.length;n<o;n++){const o=w[n];for(let c=0;c<o.length;c++){const l=o[c];let h=!0;for(let o=0;o<y.length;o++)r(l.p,y[o].p)&&(n!==o&&e.push({froms:n,tos:o,hole:c}),h?(h=!1,v[o].push(l)):t=!0);h&&v[n].push(l)}}e.length>0&&(t||(w=v))}for(let i=0,t=y.length;i<t;i++){d=y[i].s,f.push(d),_=w[i];for(let t=0,e=_.length;t<e;t++)d.holes.push(_[t].h)}return f}}),Object.assign(Ga.prototype,{isFont:!0,generateShapes:function(text,t=100){const e=[],n=function(text,t,data){const e=Array.from?Array.from(text):String(text).split(""),n=t/data.resolution,r=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*n,o=[];let c=0,l=0;for(let i=0;i<e.length;i++){const t=e[i];if("\n"===t)c=0,l-=r;else{const e=ka(t,n,c,l,data);c+=e.offsetX,o.push(e.path)}}return o}(text,t,this.data);for(let p=0,t=n.length;p<t;p++)Array.prototype.push.apply(e,n[p].toShapes());return e}}),Va.prototype=Object.assign(Object.create(ks.prototype),{constructor:Va,load:function(t,e,n,r){const o=this,c=new Ws(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(o.withCredentials),c.load(t,(function(text){let t;try{t=JSON.parse(text)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),t=JSON.parse(text.substring(65,text.length-2))}const n=o.parse(t);e&&e(n)}),n,r)},parse:function(t){return new Ga(t)}});const ja=function(){return void 0===Wa&&(Wa=new(window.AudioContext||window.webkitAudioContext)),Wa};function qa(t){ks.call(this,t)}function Xa(t,e,n){Ia.call(this,void 0,n);const r=(new ee).set(t),o=(new ee).set(e),c=new C(r.r,r.g,r.b),l=new C(o.r,o.g,o.b),h=Math.sqrt(Math.PI),d=h*Math.sqrt(.75);this.sh.coefficients[0].copy(c).add(l).multiplyScalar(h),this.sh.coefficients[1].copy(c).sub(l).multiplyScalar(d)}function Ya(t,e){Ia.call(this,void 0,e);const n=(new ee).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}qa.prototype=Object.assign(Object.create(ks.prototype),{constructor:qa,load:function(t,e,n,r){const o=this,c=new Ws(o.manager);c.setResponseType("arraybuffer"),c.setPath(o.path),c.setRequestHeader(o.requestHeader),c.setWithCredentials(o.withCredentials),c.load(t,(function(n){try{const t=n.slice(0);ja().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}}),Xa.prototype=Object.assign(Object.create(Ia.prototype),{constructor:Xa,isHemisphereLightProbe:!0,copy:function(source){return Ia.prototype.copy.call(this,source),this},toJSON:function(meta){return Ia.prototype.toJSON.call(this,meta)}}),Ya.prototype=Object.assign(Object.create(Ia.prototype),{constructor:Ya,isAmbientLightProbe:!0,copy:function(source){return Ia.prototype.copy.call(this,source),this},toJSON:function(meta){return Ia.prototype.toJSON.call(this,meta)}});const Za=new at,Ja=new at;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),r=e.eyeSep/2,o=r*e.near/e.focus,c=e.near*Math.tan(y.DEG2RAD*e.fov*.5)/e.zoom;let l,h;Ja.elements[12]=-r,Za.elements[12]=r,l=-c*e.aspect+o,h=c*e.aspect+o,n.elements[0]=2*e.near/(h-l),n.elements[8]=(h+l)/(h-l),this.cameraL.projectionMatrix.copy(n),l=-c*e.aspect-o,h=c*e.aspect-o,n.elements[0]=2*e.near/(h-l),n.elements[8]=(h+l)/(h-l),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Ja),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Za)}});class Qa{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Ka(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Ka();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Ka(){return("undefined"==typeof performance?Date:performance).now()}const $a=new C,tc=new P,ec=new C,nc=new C;class ic extends It{constructor(){super(),this.type="AudioListener",this.context=ja(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Qa}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose($a,tc,ec),nc.set(0,0,-1).applyQuaternion(tc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime($a.x,t),e.positionY.linearRampToValueAtTime($a.y,t),e.positionZ.linearRampToValueAtTime($a.z,t),e.forwardX.linearRampToValueAtTime(nc.x,t),e.forwardY.linearRampToValueAtTime(nc.y,t),e.forwardZ.linearRampToValueAtTime(nc.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition($a.x,$a.y,$a.z),e.setOrientation(nc.x,nc.y,nc.z,n.x,n.y,n.z)}}class rc extends It{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const source=this.context.createBufferSource();return source.buffer=this.buffer,source.loop=this.loop,source.loopStart=this.loopStart,source.loopEnd=this.loopEnd,source.onended=this.onEnded.bind(this),source.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=source,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(filter){return this.setFilters(filter?[filter]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const oc=new C,sc=new P,ac=new C,cc=new C;class lc extends rc{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(oc,sc,ac),cc.set(0,0,1).applyQuaternion(sc);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(oc.x,t),e.positionY.linearRampToValueAtTime(oc.y,t),e.positionZ.linearRampToValueAtTime(oc.z,t),e.orientationX.linearRampToValueAtTime(cc.x,t),e.orientationY.linearRampToValueAtTime(cc.y,t),e.orientationZ.linearRampToValueAtTime(cc.z,t)}else e.setPosition(oc.x,oc.y,oc.z),e.setOrientation(cc.x,cc.y,cc.z)}}class hc{constructor(audio,t=2048){this.analyser=audio.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),audio.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++)t+=data[i];return t/data.length}}function uc(t,e,n){let r,o,c;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,o=this._slerpAdditive,c=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,o=this._select,c=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,o=this._lerpAdditive,c=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=o,this._setIdentity=c,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(uc.prototype,{accumulate:function(t,e){const n=this.buffer,r=this.valueSize,o=t*r+r;let c=this.cumulativeWeight;if(0===c){for(let i=0;i!==r;++i)n[o+i]=n[i];c=e}else{c+=e;const t=e/c;this._mixBufferRegion(n,o,0,t,r)}this.cumulativeWeight=c},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,r=t*e+e,o=this.cumulativeWeight,c=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-o,e)}c>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let i=e,t=e+e;i!==t;++i)if(n[i]!==n[i+e]){l.setValue(n,r);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,t=r;i!==t;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]},_select:function(t,e,n,r,o){if(r>=.5)for(let i=0;i!==o;++i)t[e+i]=t[n+i]},_slerp:function(t,e,n,r){P.slerpFlat(t,e,t,e,t,n,r)},_slerpAdditive:function(t,e,n,r,o){const c=this._workIndex*o;P.multiplyQuaternionsFlat(t,c,t,e,t,n),P.slerpFlat(t,e,t,e,t,c,r)},_lerp:function(t,e,n,r,o){const s=1-r;for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]*s+t[n+i]*r}},_lerpAdditive:function(t,e,n,r,o){for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]+t[n+i]*r}}});const dc=new RegExp("[\\[\\]\\.:\\/]","g"),pc="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",fc=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),mc=/(WCOD+)?/.source.replace("WCOD",pc),gc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),vc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),yc=new RegExp("^"+fc+mc+gc+vc+"$"),xc=["material","materials","bones"];function _c(t,path,e){const n=e||bc.parseTrackName(path);this._targetGroup=t,this._bindings=t.subscribe_(path,n)}function bc(t,path,e){this.path=path,this.parsedPath=e||bc.parseTrackName(path),this.node=bc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(_c.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].bind()},unbind:function(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].unbind()}}),Object.assign(bc,{Composite:_c,create:function(t,path,e){return t&&t.isAnimationObjectGroup?new bc.Composite(t,path,e):new bc(t,path,e)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(dc,"")},parseTrackName:function(t){const e=yc.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==xc.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const o=n(r.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(bc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i)t[e++]=source[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let o=e.propertyIndex;if(t||(t=bc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let i=0;i<t.length;i++)if(t[i].name===r){r=i;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const c=t[r];if(void 0===c){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=c,this.propertyIndex=o}else void 0!==c.fromArray&&void 0!==c.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=c):Array.isArray(c)?(h=this.BindingType.EntireArray,this.resolvedProperty=c):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][l]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(bc.prototype,{_getValue_unbound:bc.prototype.getValue,_setValue_unbound:bc.prototype.setValue}),Object.assign(function(){this.uuid=y.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let i=0,e=arguments.length;i!==e;++i)t[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,o=this._bindings,c=o.length;let l=void 0,h=t.length,d=this.nCachedObjects_;for(let i=0,f=arguments.length;i!==f;++i){const object=arguments[i],f=object.uuid;let m=e[f];if(void 0===m){m=h++,e[f]=m,t.push(object);for(let t=0,e=c;t!==e;++t)o[t].push(new bc(object,n[t],r[t]))}else if(m<d){l=t[m];const h=--d,v=t[h];e[v.uuid]=m,t[m]=v,e[f]=h,t[h]=object;for(let t=0,e=c;t!==e;++t){const e=o[t],c=e[h];let l=e[m];e[m]=c,void 0===l&&(l=new bc(object,n[t],r[t])),e[h]=l}}else t[m]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=d},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let o=this.nCachedObjects_;for(let i=0,c=arguments.length;i!==c;++i){const object=arguments[i],c=object.uuid,l=e[c];if(void 0!==l&&l>=o){const h=o++,d=t[h];e[d.uuid]=l,t[l]=d,e[c]=h,t[h]=object;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[h],o=e[l];e[l]=r,e[h]=o}}}this.nCachedObjects_=o},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let o=this.nCachedObjects_,c=t.length;for(let i=0,l=arguments.length;i!==l;++i){const l=arguments[i].uuid,h=e[l];if(void 0!==h)if(delete e[l],h<o){const l=--o,d=t[l],f=--c,m=t[f];e[d.uuid]=h,t[h]=d,e[m.uuid]=l,t[l]=m,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[l],o=e[f];e[h]=r,e[l]=o,e.pop()}}else{const o=--c,l=t[o];o>0&&(e[l.uuid]=h),t[h]=l,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[h]=e[o],e.pop()}}}this.nCachedObjects_=o},subscribe_:function(path,t){const e=this._bindingsIndicesByPath;let n=e[path];const r=this._bindings;if(void 0!==n)return r[n];const o=this._paths,c=this._parsedPaths,l=this._objects,h=l.length,d=this.nCachedObjects_,f=new Array(h);n=r.length,e[path]=n,o.push(path),c.push(t),r.push(f);for(let i=d,e=l.length;i!==e;++i){const object=l[i];f[i]=new bc(object,path,t)}return f},unsubscribe_:function(path){const t=this._bindingsIndicesByPath,e=t[path];if(void 0!==e){const n=this._paths,r=this._parsedPaths,o=this._bindings,c=o.length-1,l=o[c];t[path[c]]=e,o[e]=l,o.pop(),r[e]=r[c],r.pop(),n[e]=n[c],n.pop()}}});class wc{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const o=e.tracks,c=o.length,l=new Array(c),h={endingStart:2400,endingEnd:2400};for(let i=0;i!==c;++i){const t=o[i].createInterpolant(null);l[i]=t,t.settings=h}this._interpolantSettings=h,this._interpolants=l,this._propertyBindings=new Array(c),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(time){return this._startTime=time,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,o=r/n,c=n/r;t.warp(1,o,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,o=r.time,c=this.timeScale;let l=this._timeScaleInterpolant;null===l&&(l=r._lendControlInterpolant(),this._timeScaleInterpolant=l);const h=l.parameterPositions,d=l.sampleValues;return h[0]=o,h[1]=o+n,d[0]=t/c,d[1]=e/c,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(time,t,e,n){if(!this.enabled)return void this._updateWeight(time);const r=this._startTime;if(null!==r){const n=(time-r)*e;if(n<0||0===e)return;this._startTime=null,t=e*n}t*=this._updateTimeScale(time);const o=this._updateTime(t),c=this._updateWeight(time);if(c>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulateAdditive(c);break;case 2500:default:for(let r=0,l=t.length;r!==l;++r)t[r].evaluate(o),e[r].accumulate(n,c)}}}_updateWeight(time){let t=0;if(this.enabled){t=this.weight;const e=this._weightInterpolant;if(null!==e){const n=e.evaluate(time)[0];t*=n,time>e.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(time){let t=0;if(!this.paused){t=this.timeScale;const e=this._timeScaleInterpolant;if(null!==e){t*=e.evaluate(time)[0],time>e.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(t){const e=this._clip.duration,n=this.loop;let time=this.time+t,r=this._loopCount;const o=2202===n;if(0===t)return-1===r?time:o&&1==(1&r)?e-time:time;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(time>=e)time=e;else{if(!(time<0)){this.time=time;break t}time=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),time>=e||time<0){const n=Math.floor(time/e);time-=e*n,r+=Math.abs(n);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=t>0?e:0,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===c){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=time;if(o&&1==(1&r))return e-time}return time}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=t?this.zeroSlopeAtStart?2401:2400:2402,r.endingEnd=e?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(t,e,n){const r=this._mixer,o=r.time;let c=this._weightInterpolant;null===c&&(c=r._lendControlInterpolant(),this._weightInterpolant=c);const l=c.parameterPositions,h=c.sampleValues;return l[0]=o,h[0]=e,l[1]=o+t,h[1]=n,this}}function Mc(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Mc.prototype=Object.assign(Object.create(f.prototype),{constructor:Mc,_bindAction:function(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,o=r.length,c=t._propertyBindings,l=t._interpolants,h=n.uuid,d=this._bindingsByRootAndName;let f=d[h];void 0===f&&(f={},d[h]=f);for(let i=0;i!==o;++i){const track=r[i],t=track.name;let o=f[t];if(void 0!==o)c[i]=o;else{if(o=c[i],void 0!==o){null===o._cacheIndex&&(++o.referenceCount,this._addInactiveBinding(o,h,t));continue}const path=e&&e._propertyBindings[i].binding.parsedPath;o=new uc(bc.create(n,t,path),track.ValueTypeName,track.getValueSize()),++o.referenceCount,this._addInactiveBinding(o,h,t),c[i]=o}l[i].resultBuffer=o.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==t.useCount++&&(this._lendBinding(t),t.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.useCount&&(t.restoreOriginalState(),this._takeBackBinding(t))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const r=this._actions,o=this._actionsByClip;let c=o[e];if(void 0===c)c={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=c;else{const e=c.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),c.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,c=this._actionsByClip,l=c[o],h=l.knownActions,d=h[h.length-1],f=t._byClipCacheIndex;d._byClipCacheIndex=f,h[f]=d,h.pop(),t._byClipCacheIndex=null;delete l.actionByRoot[(t._localRoot||this._root).uuid],0===h.length&&delete c[o],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.referenceCount&&this._removeInactiveBinding(t)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o},_addInactiveBinding:function(t,e,n){const r=this._bindingsByRootAndName,o=this._bindings;let c=r[e];void 0===c&&(c={},r[e]=c),c[n]=t,t._cacheIndex=o.length,o.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,o=n.path,c=this._bindingsByRootAndName,l=c[r],h=e[e.length-1],d=t._cacheIndex;h._cacheIndex=d,e[d]=h,e.pop(),delete l[o],0===Object.keys(l).length&&delete c[r]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new As(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,o=e[r];t.__cacheIndex=r,e[r]=t,o.__cacheIndex=n,e[n]=o},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const r=e||this._root,o=r.uuid;let c="string"==typeof t?Us.findByName(r,t):t;const l=null!==c?c.uuid:t,h=this._actionsByClip[l];let d=null;if(void 0===n&&(n=null!==c?c.blendMode:2500),void 0!==h){const t=h.actionByRoot[o];if(void 0!==t&&t.blendMode===n)return t;d=h.knownActions[0],null===c&&(c=d._clip)}if(null===c)return null;const f=new wc(this,c,e,n);return this._bindAction(f,d),this._addInactiveAction(f,l,o),f},existingAction:function(t,e){const n=e||this._root,r=n.uuid,o="string"==typeof t?Us.findByName(n,t):t,c=o?o.uuid:t,l=this._actionsByClip[c];return void 0!==l&&l.actionByRoot[r]||null},stopAllAction:function(){const t=this._actions;for(let i=this._nActiveActions-1;i>=0;--i)t[i].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,time=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1;for(let i=0;i!==n;++i){e[i]._update(time,t,r,o)}const c=this._bindings,l=this._nActiveBindings;for(let i=0;i!==l;++i)c[i].apply(o);return this},setTime:function(t){this.time=0;for(let i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,o=r[n];if(void 0!==o){const t=o.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,o=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,o._cacheIndex=r,e[r]=o,e.pop(),this._removeInactiveBindingsForAction(n)}delete r[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Sc{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Sc(void 0===this.value.clone?this.value:this.value.clone())}}function Tc(t,e,n){Tr.call(this,t,e),this.meshPerAttribute=n||1}function Ec(t,e,n,r,o){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=o,this.version=0}function Ac(t,e,n,r){this.ray=new st(t,e),this.near=n||0,this.far=r||1/0,this.camera=null,this.layers=new xt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Lc(a,b){return a.distance-b.distance}function Rc(object,t,e,n){if(object.layers.test(t.layers)&&object.raycast(t,e),!0===n){const n=object.children;for(let i=0,r=n.length;i<r;i++)Rc(n[i],t,e,!0)}}Tc.prototype=Object.assign(Object.create(Tr.prototype),{constructor:Tc,isInstancedInterleavedBuffer:!0,copy:function(source){return Tr.prototype.copy.call(this,source),this.meshPerAttribute=source.meshPerAttribute,this},clone:function(data){const t=Tr.prototype.clone.call(this,data);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(data){const t=Tr.prototype.toJSON.call(this,data);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(Ec.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ec.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Ac.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(object,t,e){const n=e||[];return Rc(object,this,n,t),n.sort(Lc),n},intersectObjects:function(t,e,n){const r=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(let i=0,n=t.length;i<n;i++)Rc(t[i],this,r,e);return r.sort(Lc),r}});class Pc{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(y.clamp(e/this.radius,-1,1))),this}}const Cc=new x;const Nc=new C,Ic=new C;function Dc(t){It.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Dc.prototype=Object.create(It.prototype),Dc.prototype.constructor=Dc,Dc.prototype.isImmediateRenderObject=!0;const Oc=new C,zc=new at,Uc=new at;const Bc=new Float32Array(1),Fc=(new Int32Array(Bc.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),Hc=5+Fc.length,{_lodPlanes:Gc,_sizeLods:kc,_sigmas:Vc}=Wc();Math.sqrt(5);function Wc(){const t=[],e=[],n=[];let r=8;for(let i=0;i<Hc;i++){const o=Math.pow(2,r);e.push(o);let c=1/o;i>4?c=Fc[i-8+4-1]:0==i&&(c=0),n.push(c);const l=1/(o-1),h=-l/2,d=1+l/2,f=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,v=6,y=3,x=2,_=1,w=new Float32Array(y*v*m),M=new Float32Array(x*v*m),S=new Float32Array(_*v*m);for(let t=0;t<m;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];w.set(r,y*v*t),M.set(f,x*v*t);const o=[t,t,t,t,t,t];S.set(o,_*v*t)}const T=new Pe;T.setAttribute("position",new ce(w,y)),T.setAttribute("uv",new ce(M,x)),T.setAttribute("faceIndex",new ce(S,_)),t.push(T),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function jc(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),oa.call(this,t),this.type="catmullrom"}Qs.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Qs.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(va.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new Po;for(let i=0,n=t.length;i<n;i++){const n=t[i];e.vertices.push(new C(n.x,n.y,n.z||0))}return e}}),Object.assign(ya.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Object.create(oa.prototype),Object.create(oa.prototype),jc.prototype=Object.create(oa.prototype),Object.assign(jc.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),class extends po{constructor(t=10,e=10,n=4473924,r=8947848){n=new ee(n),r=new ee(r);const o=e/2,c=t/e,l=t/2,h=[],d=[];for(let i=0,t=0,f=-l;i<=e;i++,f+=c){h.push(-l,0,f,l,0,f),h.push(f,0,-l,f,0,l);const e=i===o?n:r;e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3}const f=new Pe;f.setAttribute("position",new ve(h,3)),f.setAttribute("color",new ve(d,3));super(f,new io({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends po{constructor(object){const t=function t(object){const e=[];object&&object.isBone&&e.push(object);for(let i=0;i<object.children.length;i++)e.push.apply(e,t(object.children[i]));return e}(object),e=new Pe,n=[],r=[],o=new ee(0,0,1),c=new ee(0,1,0);for(let i=0;i<t.length;i++){const e=t[i];e.parent&&e.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(c.r,c.g,c.b))}e.setAttribute("position",new ve(n,3)),e.setAttribute("color",new ve(r,3));super(e,new io({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=object,this.bones=t,this.matrix=object.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");Uc.copy(this.root.matrixWorld).invert();for(let i=0,t=0;i<e.length;i++){const n=e[i];n.parent&&n.parent.isBone&&(zc.multiplyMatrices(Uc,n.matrixWorld),Oc.setFromMatrixPosition(zc),r.setXYZ(t,Oc.x,Oc.y,Oc.z),zc.multiplyMatrices(Uc,n.parent.matrixWorld),Oc.setFromMatrixPosition(zc),r.setXYZ(t+1,Oc.x,Oc.y,Oc.z),t+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(ks.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Oa(t)}}),ks.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(class{constructor(t,e){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==t?t:new x(1/0,1/0),this.max=void 0!==e?e:new x(-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=Cc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new x),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new x),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new x),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new x),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Cc.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(D.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Q.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),un.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},class{constructor(t,e){this.start=void 0!==t?t:new C,this.end=void 0!==e?e:new C}set(t,e){return this.start.copy(t),this.end.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(line){return this.start.copy(line.start),this.end.copy(line.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new C),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new C),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new C),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Nc.subVectors(t,this.start),Ic.subVectors(this.end,this.start);const n=Ic.dot(Ic);let r=Ic.dot(Nc)/n;return e&&(r=y.clamp(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new C),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end)}}.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(y,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),y.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),y.ceilPowerOfTwo(t)}}),Object.assign(_.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Object.assign(at.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new C).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(q){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(q)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,r,o,c){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,o,c)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Ut.prototype.isIntersectionLine=function(line){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(line)},Object.assign(P.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(st.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(Yt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(Yt,{barycoordFromPoint:function(t,a,b,e,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Yt.getBarycoord(t,a,b,e,n)},normal:function(a,b,t,e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Yt.getNormal(a,b,t,e)}}),Object.assign(xa.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ss(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new hs(this,t)}}),Object.assign(x.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(C.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(A.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Po.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.assign(It.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(It.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Ye.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Ye.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(qr.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Qr.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Xr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Qs.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),rn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(_a.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(ce.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===d},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(d)}}}),Object.assign(ce.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?d:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Pe.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new ce(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(Pe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(za.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Ac.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Tr.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===d},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Tr.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?d:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(rs.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(Sr.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Sc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(re.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ee}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(vs.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(gs.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(en.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(wr.prototype,{clearTarget:function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(wr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?h:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(dr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(L.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(rc.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new qa).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),hc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},on.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},on.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)};M.crossOrigin=void 0,M.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const o=new Js;o.setCrossOrigin(this.crossOrigin);const c=o.load(t,n,void 0,r);return e&&(c.mapping=e),c},M.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const o=new Ys;o.setCrossOrigin(this.crossOrigin);const c=o.load(t,n,void 0,r);return e&&(c.mapping=e),c},M.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},M.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"123"}}))}}]);