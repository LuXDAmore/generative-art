(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{232:function(e,n,t){"use strict";t.r(n);t(8);var r=t(4),o=t(7),l={name:"three-js-starter",data:()=>({sketchManager:null}),mounted(){var e=this;return Object(r.a)((function*(){try{e.sketchManager=yield e.$sketch({animate:!0,context:"webgl",attributes:{antialias:!0},canvas:e.$refs.canvas},e.sketch)}catch(e){console.error(e)}}))()},beforeDestroy(){this.sketchManager&&this.sketchManager.unload()},methods:{sketch:e=>Object(r.a)((function*(){var{context:n}=e,r=new o.D({context:n});r.setClearColor(new o.e("#333"),1);var l=new o.o(45,1,.01,100);l.position.set(2,2,4),l.lookAt(new o.A);var{OrbitControls:c}=yield t.e(0).then(t.bind(null,226)).then(e=>e.default||e),v=new c(l,n.canvas);v.update();var d=new o.t,h=new o.c(1,1,1),f=new o.u({vertexShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : vert\n\nvarying vec2 vUv;\n\nvoid main () {\n\n    vUv = uv;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position.xyz, 1.0 );\n\n}\n",fragmentShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : frag\n\nvarying vec2 vUv;\n\nuniform float time;\nuniform float playhead;\n\nvoid main () {\n\n    gl_FragColor = vec4( time / 6., 1., 1., 1. );\n\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:o.h,shading:o.j,uniforms:{time:{type:"f",value:0},playhead:{type:"f",value:0}}}),m=new o.m(h,f);return d.add(m),{render(e){var{time:time,playhead:n}=e;m.rotation.y=time*(10*Math.PI/100),f.uniforms.time.value=time,f.uniforms.playhead.value=n,v.update(),r.render(d,l)},resize(e){var{pixelRatio:n,viewportWidth:t,viewportHeight:o}=e;r.setPixelRatio(n),r.setSize(t,o),l.aspect=t/o,l.updateProjectionMatrix()},unload(){v.dispose(),r.dispose()}}}))()}},c=t(15),component=Object(c.a)(l,(function(){var e=this.$createElement,n=this._self._c||e;return n("main",{staticClass:"container canvas-container"},[n("canvas",{ref:"canvas"})])}),[],!1,null,null,null);n.default=component.exports}}]);