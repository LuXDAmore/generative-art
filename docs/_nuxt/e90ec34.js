(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{716:function(e,n,t){"use strict";t.r(n);var r=t(28),o=t(17),c=t(6),l=(t(38),t(13),t(20),t(23),t(41),t(39),t(40),t(42),t(33),t(43),t(14));function v(object,e){var n=Object.keys(object);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(object);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),n.push.apply(n,t)}return n}function d(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?v(Object(source),!0).forEach((function(n){Object(o.a)(e,n,source[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):v(Object(source)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(source,n))}))}return e}var m={animate:!0,context:"webgl",attributes:{antialias:!0}},f={name:"microphone-audio-and-video-webcam",data:function(){return{sketchManager:null}},mounted:function(){var e=this;return Object(c.a)(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.$nextTick();case 2:return n.prev=2,n.next=5,e.$sketch(d(d({},m),{},{canvas:e.$refs.canvas}),e.sketch);case 5:e.sketchManager=n.sent,e.$once("hook:beforeDestroy",(function(){return e.sketchManager.unload()})),n.next=12;break;case 9:n.prev=9,n.t0=n.catch(2),console.error(n.t0);case 12:case"end":return n.stop()}}),n,null,[[2,9]])})))()},methods:{sketch:function(e){var n=this;return Object(c.a)(regeneratorRuntime.mark((function o(){var v,canvas,d,m,f,w,h,x,y,O,U,k,j,_,D,M,P,audio,E,L,S,video,$,C,R,F,G,Y,z;return regeneratorRuntime.wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return v=e.context,canvas=e.canvas,d=e.width,m=e.height,o.next=3,t.e(0).then(t.bind(null,470));case 3:return f=o.sent,w=f.OrbitControls,h=t(578),x=!1,y=new l.H({context:v}),O=new l.w,U=new l.E,k=function(e){U.x=e.clientX/window.innerWidth*2-1,U.y=-e.clientY/window.innerHeight*2+1,O.setFromCamera(U,j);var n=O.intersectObjects(G.children),t=Object(r.a)(n,1)[0],o=t&&t.point?t.point:null;x=!!o},j=new l.r(63,1,.001,1e3),_=new w(j,canvas),D=new l.s(d/m,1,54,54),M={bass:[20,140],lowMid:[140,400],mid:[400,2600],highMid:[2600,5200],treble:[5200,14e3]},2048,!1,P=new l.b,audio=new l.u(P),E=new l.a(audio,2048),L=function(data,e){for(var n=Math.round(e[0]/24e3*data.length),t=Math.round(e[1]/24e3*data.length),r=0,o=0,c=n;c<=t;c++)r+=data[c],o+=1;return r/o/255},S=function(e){audio.gain.gain.value=.001,audio.setMediaStreamSource(e),audio.context.resume()},video=document.createElement("video"),$=function(e){video.srcObject=e,video.width=d,video.height=m,video.playsinline=!0,video.muted=!0,video.autoplay=!0,video.addEventListener("canplaythrough",(function(){return R.uniforms.video.value.needsUpdate=!0})),video.play()},C=function(){var e=Object(c.a)(regeneratorRuntime.mark((function e(){var t,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.$nuxt.$loading.start(),canvas.removeEventListener("click",C,!1),canvas.removeEventListener("touchstart",C,!1),n.$refs.title.remove(),e.prev=4,e.next=7,navigator.mediaDevices.getUserMedia({audio:!0,video:!1});case 7:t=e.sent,S(t),e.next=15;break;case 11:e.prev=11,e.t0=e.catch(4),console.error(e.t0),window.alert("You must allow access to your microphone");case 15:return e.prev=15,e.next=18,navigator.mediaDevices.getUserMedia({video:{width:d,height:m,facingMode:"user"},audio:!1});case 18:r=e.sent,$(r),e.next=26;break;case 22:e.prev=22,e.t1=e.catch(15),console.error(e.t1),window.alert("You must allow access to your webcam");case 26:n.$nuxt.$loading.finish();case 27:case"end":return e.stop()}}),e,null,[[4,11],[15,22]])})));return function(){return e.apply(this,arguments)}}(),R=new l.y({vertexShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : vert\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main () {\n\n    vUv = uv;\n\n    vPosition = position;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n",fragmentShader:"#define GLSLIFY 1\n#pragma vscode_glsllint_stage : frag\n\nuniform sampler2D microphone;\nuniform sampler2D video;\n\nuniform float bass;\nuniform float mid;\nuniform float treble;\n\nuniform float time;\n\nuniform vec3 mouse;\nuniform float mouse_radius;\n\nvarying vec3 vPosition;\n\nvarying vec2 vUv;\n\nfloat map(\n    float value,\n    float min1,\n    float max1,\n    float min2,\n    float max2\n) {\n\n    return min2 + ( value - min1 ) * ( max2 - min2 ) / ( max1 - min1 );\n\n}\n\nvoid main() {\n\n    vec3 webcam = texture2D(\n        video,\n        vUv\n    ).rgb;\n\n    vec2 displacedUv = vec2(\n        vUv.x,\n        vUv.y\n    );\n\n    displacedUv.y = mix(\n        vUv.y,\n        bass,\n        1.0\n    );\n    displacedUv.x = mix(\n        vUv.x,\n        mid,\n        treble\n    );\n\n    float dist = length( vPosition - mouse );\n    float prox = 1. - map(\n        dist,\n        0.,\n        mouse_radius,\n        0.,\n        1.\n    );\n\n    prox = clamp(\n        prox,\n        0.,\n        1.\n    );\n\n    // Microphone\n    vec3 backgroundColor = vec3( displacedUv.y, displacedUv.x, prox );\n\n    float f = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).r;\n    float g = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).g;\n    float b = texture2D( microphone, vec2( displacedUv.x, 0.0 ) ).b;\n\n    vec3 color = vec3( f, g, b );\n\n    float i = sin( step( vUv.y, f ) * step( f - 0.0125, vUv.y ) );\n\n    // Webcam\n    webcam.r = webcam.r + ( 1. - bass );\n    webcam.g = webcam.g + ( 1. - treble );\n    webcam.b = webcam.b + ( 1. - mid );\n\n    // Color mixer\n    vec4 mixed = vec4( mix( webcam, mix( backgroundColor, color, i ), bass ), 1.0 );\n\n    gl_FragColor = mixed;\n\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:l.i,uniforms:{time:{type:"f",value:0},mouse_radius:{type:"f",value:.3},bass:{type:"f",value:0},mid:{type:"f",value:0},treble:{type:"f",value:0},video:{type:"t",value:new l.G(video)},microphone:{type:"t",value:new l.g(E.data,1024,1,l.m)},mouse:{type:"v3",value:U},resolution:{type:"v2",value:new l.D(d,m)},uvRate1:{value:new l.D(1,1)}}}),F=new l.o(D,R),G=new l.x,Y={mouse_radius:.3},z=new h.GUI,canvas.addEventListener("click",C,!1),canvas.addEventListener("touchstart",C,!1),canvas.addEventListener("mousemove",k,!1),j.position.set(0,0,1),G.add(F),z.add(Y,"mouse_radius",0,1,.1),z.close(),o.abrupt("return",{resize:function(e){var n=e.pixelRatio,t=e.viewportWidth,r=e.viewportHeight;y.setPixelRatio(n),y.setSize(t,r),R.uniforms.resolution.value.x=t,R.uniforms.resolution.value.y=r,j.aspect=t/r,j.updateProjectionMatrix()},render:function(e){var time=e.time,data=E.getFrequencyData(),n=L(data,M.bass),t=L(data,M.mid),r=L(data,M.treble);R.uniforms.bass.value=n,R.uniforms.mid.value=t,R.uniforms.treble.value=r,R.uniforms.microphone.value.needsUpdate=!0,R.uniforms.time.value=time,R.uniforms.mouse_radius.value=Y.mouse_radius,x&&(R.uniforms.mouse.value=U),_.update(),y.render(G,j)},unload:function(){audio.context.suspend(),z.destroy(),y.dispose()}});case 16:case"end":return o.stop()}}),o)})))()}}},w=t(22),component=Object(w.a)(f,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("main",{staticClass:"container canvas-container"},[t("canvas",{ref:"canvas"}),t("h6",{ref:"title",staticClass:"absolute z-index--1 text--center text--red no-pointer-event cursor--pointer"},[e._v(" Click here to allow"),t("br"),t("small",[e._v("access to camera and microphone")])])])}),[],!1,null,null,null);n.default=component.exports}}]);